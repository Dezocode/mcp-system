{
  "timestamp": "2025-08-21T16:40:26.195175+00:00",
  "session_id": "version-keeper-1755794426",
  "version": "1.0.0",
  "branch": "main",
  "summary": {
    "total_issues": 1219,
    "fixes_applied": 0,
    "remaining_issues": 1219,
    "success_rate": 0.0
  },
  "details": {
    "quality_issues": {
      "black": {
        "passed": false,
        "stdout": "--- cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py\t2025-08-21 16:31:13.908381+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py\t2025-08-21 16:40:15.243453+00:00\n@@ -64,41 +64,33 @@\n             {\n                 \"name\": \"search_memories\",\n                 \"arguments\": {\"query\": query, \"limit\": limit},\n             },\n         )\n-        return result.get(\"content\", [{}])[0].get(\n-            \"text\", \"Error searching memories\"\n-        )\n+        return result.get(\"content\", [{}])[0].get(\"text\", \"Error searching memories\")\n \n     async def get_all_memories(self) -> str:\n         \"\"\"Get all memories\"\"\"\n         result = await self.send_request(\n             \"tools/call\", {\"name\": \"get_all_memories\", \"arguments\": {}}\n         )\n-        return result.get(\"content\", [{}])[0].get(\n-            \"text\", \"Error retrieving memories\"\n-        )\n+        return result.get(\"content\", [{}])[0].get(\"text\", \"Error retrieving memories\")\n \n     async def delete_memory(self, memory_id: str) -> str:\n         \"\"\"Delete a specific memory\"\"\"\n         result = await self.send_request(\n             \"tools/call\",\n             {\"name\": \"delete_memory\", \"arguments\": {\"memory_id\": memory_id}},\n         )\n-        return result.get(\"content\", [{}])[0].get(\n-            \"text\", \"Error deleting memory\"\n-        )\n+        return result.get(\"content\", [{}])[0].get(\"text\", \"Error deleting memory\")\n \n     async def delete_all_memories(self) -> str:\n         \"\"\"Delete all memories\"\"\"\n         result = await self.send_request(\n             \"tools/call\", {\"name\": \"delete_all_memories\", \"arguments\": {}}\n         )\n-        return result.get(\"content\", [{}])[0].get(\n-            \"text\", \"Error deleting memories\"\n-        )\n+        return result.get(\"content\", [{}])[0].get(\"text\", \"Error deleting memories\")\n \n \n async def main():\n     # Create client\n     client = MCPMem0Client()\n--- cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py\t2025-08-21 16:31:13.908266+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py\t2025-08-21 16:40:15.296234+00:00\n@@ -177,13 +177,11 @@\n                     \"pid\": process.pid,\n                     \"port\": server.get(\"port\"),\n                     \"message\": f\"Server started on port {server.get('port')}\",\n                 }\n             else:\n-                stderr = (\n-                    process.stderr.read().decode() if process.stderr else \"\"\n-                )\n+                stderr = process.stderr.read().decode() if process.stderr else \"\"\n                 return {\n                     \"success\": False,\n                     \"error\": f\"Server failed to start: {stderr}\",\n                 }\n \n--- cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py\t2025-08-21 16:31:13.908612+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py\t2025-08-21 16:40:15.314221+00:00\n@@ -166,13 +166,11 @@\n                 print(f\"\u2705 {server} already running\")\n                 results[server] = True\n             else:\n                 print(f\"Starting {server}...\")\n                 cmd = f\"cross_platform.get_path("home") / mcp {server} start\"\n-                result = subprocess.run(\n-                    cmd, shell=True, capture_output=True, text=True\n-                )\n+                result = subprocess.run(cmd, shell=True, capture_output=True, text=True)\n                 results[server] = result.returncode == 0\n \n                 if results[server]:\n                     print(f\"\u2705 {server} started\")\n                 else:\n@@ -261,13 +259,11 @@\n                     for i, server in enumerate(servers, 1):\n                         config = self.servers.get(server, {})\n                         print(f\"   {i}. {server}: {config.get('name', 'Unknown')}\")\n \n                     # Ask if they want to start the servers\n-                    response = (\n-                        input(\"\\nStart these servers? (y/n): \").strip().lower()\n-                    )\n+                    response = input(\"\\nStart these servers? (y/n): \").strip().lower()\n                     if response == \"y\":\n                         results = self.start_required_servers(servers)\n                         print(\"\\nServer startup results:\")\n                         for server, success in results.items():\n                             status = \"\u2705 Started\" if success else \"\u274c Failed\"\n@@ -294,13 +290,11 @@\n         \"--analyze\", help=\"Analyze a prompt and return recommended servers\"\n     )\n     parser.add_argument(\"--route\", help=\"Route a request to appropriate server\")\n     parser.add_argument(\"--tool\", help=\"Tool name for routing\")\n     parser.add_argument(\"--data\", help=\"JSON data for the tool\")\n-    parser.add_argument(\n-        \"--interactive\", action=\"store_true\", help=\"Interactive mode\"\n-    )\n+    parser.add_argument(\"--interactive\", action=\"store_true\", help=\"Interactive mode\")\n \n     args = parser.parse_args()\n \n     router = MCPRouter()\n \n--- cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py\t2025-08-21 16:31:13.908134+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py\t2025-08-21 16:40:15.314187+00:00\n@@ -1031,13 +1031,11 @@\n         else:\n             path = Path(path).expanduser()\n \n         # Check if path exists\n         if path.exists():\n-            response = input(\n-                f\"Directory {path} already exists. Continue? (y/N): \"\n-            )\n+            response = input(f\"Directory {path} already exists. Continue? (y/N): \")\n             if response.lower() != \"y\":\n                 return False\n \n         # Create directory\n         path.mkdir(parents=True, exist_ok=True)\n--- cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py\t2025-08-21 16:31:13.919327+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py\t2025-08-21 16:40:15.317112+00:00\n@@ -13,96 +13,108 @@\n import subprocess\n \n \n class MinimalVersionKeeper:\n     \"\"\"Minimal version keeper focused on pipeline integration\"\"\"\n-    \n+\n     def __init__(self):\n         self.current_version = \"1.0.0\"\n         self.git_branch = \"main\"\n-        \n-    def run_comprehensive_lint(self, session_dir=None, output_format=\"text\", output_file=None):\n+\n+    def run_comprehensive_lint(\n+        self, session_dir=None, output_format=\"text\", output_file=None\n+    ):\n         \"\"\"Run comprehensive linting and return results\"\"\"\n-        \n+\n         # Simulate comprehensive linting\n         print(\"\ud83d\udd0d Running comprehensive lint scan...\")\n-        \n+\n         # Create session directory if provided\n         if session_dir:\n             Path(session_dir).mkdir(parents=True, exist_ok=True)\n-            \n+\n         # Run actual linting tools\n         issues = []\n         total_issues = 0\n-        \n+\n         # Try to run flake8 if available\n         try:\n             result = subprocess.run(\n-                [\"flake8\", \"--format=json\", \".\"], \n-                capture_output=True, \n-                text=True, \n-                timeout=30\n+                [\"flake8\", \"--format=json\", \".\"],\n+                capture_output=True,\n+                text=True,\n+                timeout=30,\n             )\n             if result.stdout:\n                 try:\n                     flake8_output = json.loads(result.stdout)\n                     for item in flake8_output:\n-                        issues.append({\n-                            \"type\": \"quality\",\n-                            \"tool\": \"flake8\", \n-                            \"file\": item.get(\"filename\", \"unknown\"),\n-                            \"line\": item.get(\"line_number\", 0),\n-                            \"message\": item.get(\"text\", \"\"),\n-                            \"code\": item.get(\"code\", \"\")\n-                        })\n+                        issues.append(\n+                            {\n+                                \"type\": \"quality\",\n+                                \"tool\": \"flake8\",\n+                                \"file\": item.get(\"filename\", \"unknown\"),\n+                                \"line\": item.get(\"line_number\", 0),\n+                                \"message\": item.get(\"text\", \"\"),\n+                                \"code\": item.get(\"code\", \"\"),\n+                            }\n+                        )\n                         total_issues += 1\n                 except json.JSONDecodeError:\n                     pass\n         except (subprocess.TimeoutExpired, FileNotFoundError):\n             # Flake8 not available or timeout\n             pass\n-            \n+\n         # Generate report structure\n         lint_report = {\n             \"timestamp\": datetime.now(timezone.utc).isoformat(),\n             \"session_id\": f\"version-keeper-{int(time.time())}\",\n             \"version\": self.current_version,\n             \"branch\": self.git_branch,\n             \"summary\": {\n                 \"total_issues\": total_issues,\n                 \"fixes_applied\": 0,\n                 \"remaining_issues\": total_issues,\n-                \"success_rate\": 0.0 if total_issues > 0 else 100.0\n+                \"success_rate\": 0.0 if total_issues > 0 else 100.0,\n             },\n             \"details\": {\n                 \"quality_issues\": {\n                     \"flake8\": {\n                         \"passed\": total_issues == 0,\n-                        \"issues\": issues[:10]  # Limit for performance\n+                        \"issues\": issues[:10],  # Limit for performance\n                     }\n                 },\n                 \"security_issues\": {},\n                 \"duplicate_issues\": {},\n-                \"connection_issues\": {}\n+                \"connection_issues\": {},\n             },\n             \"performance\": {\n                 \"duration_seconds\": 2.5,\n                 \"files_analyzed\": len(list(Path(\".\").glob(\"**/*.py\"))),\n-                \"issues_per_second\": total_issues / 2.5 if total_issues > 0 else 0\n+                \"issues_per_second\": total_issues / 2.5 if total_issues > 0 else 0,\n             },\n             \"recommendations\": [\n-                f\"Found {total_issues} issues to fix\" if total_issues > 0 else \"No issues found\",\n-                \"Run quality patcher to apply automated fixes\" if total_issues > 0 else \"Code quality is good\"\n-            ]\n+                (\n+                    f\"Found {total_issues} issues to fix\"\n+                    if total_issues > 0\n+                    else \"No issues found\"\n+                ),\n+                (\n+                    \"Run quality patcher to apply automated fixes\"\n+                    if total_issues > 0\n+                    else \"Code quality is good\"\n+                ),\n+            ],\n         }\n-        \n+\n         # Output handling\n         if output_format == \"json\":\n             if output_file:\n                 output_path = Path(output_file)\n                 output_path.parent.mkdir(parents=True, exist_ok=True)\n-                with open(output_path, 'w') as f:\n+                with open(output_path, \"w\") as f:\n                     json.dump(lint_report, f, indent=2)\n                 print(f\"\ud83d\udcca JSON report saved to: {output_path}\")\n             else:\n                 print(\"\ud83d\udcca JSON OUTPUT:\")\n                 print(json.dumps(lint_report, indent=2))\n@@ -111,11 +123,11 @@\n             print(f\"\ud83d\udcca Lint Report Summary:\")\n             print(f\"  Version: {self.current_version}\")\n             print(f\"  Branch: {self.git_branch}\")\n             print(f\"  Total Issues: {total_issues}\")\n             print(f\"  Files Analyzed: {lint_report['performance']['files_analyzed']}\")\n-            \n+\n         return lint_report\n \n \n @click.command()\n @click.option(\n@@ -234,36 +246,36 @@\n     real_issues_only,\n     output_format,\n     output_file,\n ):\n     \"\"\"Minimal Version Keeper - Pipeline Integration Ready\"\"\"\n-    \n+\n     print(\"\ud83d\ude80 Minimal Version Keeper - Pipeline Integration\")\n     print(\"=\" * 50)\n-    \n+\n     keeper = MinimalVersionKeeper()\n-    \n+\n     if lint_only or comprehensive_lint:\n         print(\"\ud83d\udd0d Lint-only mode enabled\")\n-        \n+\n         # Run comprehensive linting\n         lint_report = keeper.run_comprehensive_lint(\n             session_dir=session_dir,\n-            output_format=output_format, \n-            output_file=output_file\n+            output_format=output_format,\n+            output_file=output_file,\n         )\n-        \n+\n         print(\"\u2705 Lint-only mode complete\")\n         if lint_report[\"summary\"][\"total_issues\"] > 0:\n             print(f\"\u26a0\ufe0f Found {lint_report['summary']['total_issues']} issues\")\n             sys.exit(1)  # Exit with error code for CI/CD\n         else:\n             print(\"\u2705 No issues found\")\n             sys.exit(0)\n-    \n+\n     # Regular version keeper functionality would go here\n     print(\"\ud83d\udccb Regular version keeper functionality not implemented in minimal version\")\n     print(\"Use --lint-only or --comprehensive-lint for pipeline integration\")\n \n \n if __name__ == \"__main__\":\n-    main()\n\\ No newline at end of file\n+    main()\n--- cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py\t2025-08-21 16:31:13.907902+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py\t2025-08-21 16:40:15.330411+00:00\n@@ -192,13 +192,11 @@\n             # Load existing configuration\n             try:\n                 with open(claude_config_path, \"r\") as f:\n                     existing_config = json.load(f)\n             except json.JSONDecodeError:\n-                print(\n-                    \"\u26a0\ufe0f  Existing Claude config invalid, backing up and creating new\"\n-                )\n+                print(\"\u26a0\ufe0f  Existing Claude config invalid, backing up and creating new\")\n                 backup_path = claude_config_path.with_suffix(\".backup.json\")\n                 claude_config_path.rename(backup_path)\n                 existing_config = {}\n \n         # Backup existing configuration\n@@ -228,13 +226,11 @@\n                     counter += 1\n                     unique_name = f\"{server_name}-{counter}\"\n                 existing_config[\"mcpServers\"][unique_name] = server_config\n \n         # Add system integration config\n-        existing_config[\"mcp_system_integration\"] = new_config[\n-            \"mcp_system_integration\"\n-        ]\n+        existing_config[\"mcp_system_integration\"] = new_config[\"mcp_system_integration\"]\n \n         # Write merged configuration\n         try:\n             with open(claude_config_path, \"w\") as f:\n                 json.dump(existing_config, f, indent=2)\n@@ -507,13 +503,11 @@\n             print(f\"{icon} {description}\")\n \n         print(f\"\\n\ud83d\udcc1 Project types: {', '.join(status['project_types'])}\")\n \n         if status[\"project_launchers\"]:\n-            print(\n-                f\"\ud83d\ude80 Available launchers: {', '.join(status['project_launchers'])}\"\n-            )\n+            print(f\"\ud83d\ude80 Available launchers: {', '.join(status['project_launchers'])}\")\n \n         if status[\"claude_config_found\"]:\n             config_path = self.get_claude_config_path()\n             print(f\"\u2699\ufe0f  Claude config: {config_path}\")\n \n--- cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py\t2025-08-21 16:31:13.908757+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py\t2025-08-21 16:40:15.359171+00:00\n@@ -73,13 +73,11 @@\n                     message=\"No port configured for server\",\n                     duration=time.time() - start_time,\n                 )\n \n             # Check if server responds\n-            response = requests.get(\n-                f\"http://localhost:{port}/health\", timeout=5\n-            )\n+            response = requests.get(f\"http://localhost:{port}/health\", timeout=5)\n \n             if response.status_code == 200:\n                 return TestResult(\n                     name=\"server_health\",\n                     status=\"pass\",\n@@ -209,13 +207,11 @@\n                 status=\"fail\",\n                 message=f\"Tool execution failed: {str(e)}\",\n                 duration=time.time() - start_time,\n             )\n \n-    async def run_custom_test(\n-        self, server_name: str, test_config: Dict\n-    ) -> TestResult:\n+    async def run_custom_test(self, server_name: str, test_config: Dict) -> TestResult:\n         \"\"\"Run a custom test based on configuration\"\"\"\n         start_time = time.time()\n \n         try:\n             test_name = test_config.get(\"name\", \"custom_test\")\n@@ -224,23 +220,19 @@\n             if test_type == \"tool\":\n                 tool_name = test_config.get(\"tool\")\n                 args = test_config.get(\"args\", {})\n                 expected = test_config.get(\"expected\")\n \n-                result = await self.test_tool_execution(\n-                    server_name, tool_name, args\n-                )\n+                result = await self.test_tool_execution(server_name, tool_name, args)\n \n                 # Check expected results if provided\n                 if expected and result.status == \"pass\":\n                     # Simple string matching for now\n                     response_text = str(result.details.get(\"result\", \"\"))\n                     if expected not in response_text:\n                         result.status = \"fail\"\n-                        result.message = (\n-                            f\"Expected '{expected}' not found in response\"\n-                        )\n+                        result.message = f\"Expected '{expected}' not found in response\"\n \n                 result.name = test_name\n                 return result\n \n             elif test_type == \"http\":\n@@ -307,29 +299,23 @@\n             return results\n \n         # MCP protocol test\n         protocol_result = await self.test_mcp_protocol(server_name)\n         results.append(protocol_result)\n-        print(\n-            f\"  Protocol: {protocol_result.status} - {protocol_result.message}\"\n-        )\n+        print(f\"  Protocol: {protocol_result.status} - {protocol_result.message}\")\n \n         # Common tool tests\n         common_tools = [\"hello_world\", \"get_status\"]\n         for tool in common_tools:\n             tool_result = await self.test_tool_execution(server_name, tool)\n             results.append(tool_result)\n-            print(\n-                f\"  Tool {tool}: {tool_result.status} - {tool_result.message}\"\n-            )\n+            print(f\"  Tool {tool}: {tool_result.status} - {tool_result.message}\")\n \n         # Custom tests if provided\n         if test_suite and test_suite.tests:\n             for test_config in test_suite.tests:\n-                custom_result = await self.run_custom_test(\n-                    server_name, test_config\n-                )\n+                custom_result = await self.run_custom_test(server_name, test_config)\n                 results.append(custom_result)\n                 print(\n                     f\"  {custom_result.name}: {custom_result.status} - \"\n                     f\"{custom_result.message}\"\n                 )\n@@ -349,13 +335,11 @@\n             \"summary\": {\n                 \"total\": total,\n                 \"passed\": passed,\n                 \"failed\": failed,\n                 \"skipped\": skipped,\n-                \"success_rate\": (\n-                    f\"{(passed/total*100):.1f}%\" if total > 0 else \"0%\"\n-                ),\n+                \"success_rate\": (f\"{(passed/total*100):.1f}%\" if total > 0 else \"0%\"),\n                 \"total_duration\": f\"{total_duration:.2f}s\",\n             },\n             \"results\": [asdict(r) for r in results],\n         }\n \n@@ -470,13 +454,11 @@\n         \"--start\",\n         action=\"store_true\",\n         help=\"Start server before testing if not running\",\n     )\n     parser.add_argument(\"--report\", help=\"Save detailed report to JSON file\")\n-    parser.add_argument(\n-        \"--verbose\", \"-v\", action=\"store_true\", help=\"Verbose output\"\n-    )\n+    parser.add_argument(\"--verbose\", \"-v\", action=\"store_true\", help=\"Verbose output\")\n \n     args = parser.parse_args()\n \n     tester = MCPTester()\n     all_results = []\n@@ -495,13 +477,11 @@\n             continue\n \n         # Start server if requested\n         if args.start:\n             if not tester.start_server_if_needed(server_name):\n-                print(\n-                    f\"Skipping tests for {server_name} due to startup failure\"\n-                )\n+                print(f\"Skipping tests for {server_name} due to startup failure\")\n                 continue\n \n         # Get test suite\n         test_suite = DEFAULT_TEST_SUITES.get(server_name)\n \n--- cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py\t2025-08-21 16:31:13.918027+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py\t2025-08-21 16:40:15.373734+00:00\n@@ -522,19 +522,19 @@\n \n     def generate_claude_instruction(self, task: Task) -> str:\n         \"\"\"Generate structured instruction for Claude\"\"\"\n         context_str = json.dumps(task.context, indent=2)\n         actions_str = chr(10).join(\n-            f'  {i + 1}. {action}' for i, action in enumerate(task.expected_actions)\n+            f\"  {i + 1}. {action}\" for i, action in enumerate(task.expected_actions)\n         )\n         constraints_str = (\n-            json.dumps(task.constraints, indent=2) if task.constraints else 'None'\n+            json.dumps(task.constraints, indent=2) if task.constraints else \"None\"\n         )\n         success_criteria_str = (\n             json.dumps(task.success_criteria, indent=2)\n             if task.success_criteria\n-            else 'Complete actions'\n+            else \"Complete actions\"\n         )\n \n         instruction = f\"\"\"\n         \ud83c\udfaf TASK ASSIGNMENT: {task.task_type.value.upper()}\n         \u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\n--- cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py\t2025-08-21 16:31:13.907777+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py\t2025-08-21 16:40:15.376398+00:00\n@@ -278,22 +278,18 @@\n                         \".vscode\",\n                     ]:\n                         continue\n \n                     if item.is_file():\n-                        scan_results[\"files\"].append(\n-                            str(item.relative_to(path))\n-                        )\n+                        scan_results[\"files\"].append(str(item.relative_to(path)))\n \n                         # Scan file contents for keywords (small files only)\n                         if item.stat().st_size < 1024 * 1024:  # 1MB limit\n                             self.scan_file_contents(item, scan_results)\n \n                     elif item.is_dir() and depth < max_depth:\n-                        scan_results[\"directories\"].append(\n-                            str(item.relative_to(path))\n-                        )\n+                        scan_results[\"directories\"].append(str(item.relative_to(path)))\n                         scan_recursive(item, depth + 1)\n \n             except PermissionError:\n                 pass\n \n@@ -369,12 +365,11 @@\n             for (\n                 env_type,\n                 keywords,\n             ) in keywords_to_check.items():\n                 count = sum(\n-                    content.lower().count(keyword.lower())\n-                    for keyword in keywords\n+                    content.lower().count(keyword.lower()) for keyword in keywords\n                 )\n                 if count > 0:\n                     if env_type not in scan_results[\"keywords\"]:\n                         scan_results[\"keywords\"][env_type] = 0\n                     scan_results[\"keywords\"][env_type] += count\n@@ -486,15 +481,11 @@\n             patterns,\n         ) in env_patterns.items():\n             matches = []\n             for pattern in patterns:\n                 matches.extend(\n-                    [\n-                        key\n-                        for key in os.environ.keys()\n-                        if key.startswith(pattern)\n-                    ]\n+                    [key for key in os.environ.keys() if key.startswith(pattern)]\n                 )\n             if matches:\n                 env_indicators[env_type] = matches\n \n         return env_indicators\n@@ -594,12 +585,11 @@\n             # File pattern matching\n             if \"files\" in patterns:\n                 max_score += len(patterns[\"files\"]) * 10\n                 for file_pattern in patterns[\"files\"]:\n                     if any(\n-                        file_pattern in f\n-                        for f in analysis[\"scan_results\"][\"files\"]\n+                        file_pattern in f for f in analysis[\"scan_results\"][\"files\"]\n                     ):\n                         score += 10\n \n             # Directory pattern matching\n             if \"patterns\" in patterns:\n@@ -638,13 +628,11 @@\n                         score += 5\n \n             # Calculate confidence percentage\n             if max_score > 0:\n                 confidence = (score / max_score) * 100\n-                if (\n-                    confidence > 10\n-                ):  # Only include environments with >10% confidence\n+                if confidence > 10:  # Only include environments with >10% confidence\n                     scores[env_type] = confidence\n \n         # Sort by confidence\n         analysis[\"confidence_scores\"] = dict(\n             sorted(\n@@ -652,13 +640,11 @@\n                 key=lambda x: x[1],\n                 reverse=True,\n             )\n         )\n         analysis[\"detected_environments\"] = [\n-            env\n-            for env, score in analysis[\"confidence_scores\"].items()\n-            if score > 25\n+            env for env, score in analysis[\"confidence_scores\"].items() if score > 25\n         ]\n \n     def generate_suggestions(self, analysis: Dict[str, Any]):\n         \"\"\"Generate MCP server and action suggestions\"\"\"\n         suggested_servers = set()\n@@ -794,16 +780,12 @@\n \n ## Detected Environments\n \"\"\"\n \n         for env_type, confidence in analysis[\"confidence_scores\"].items():\n-            status = (\n-                \"\u2705\" if env_type in analysis[\"detected_environments\"] else \"\ud83d\udd0d\"\n-            )\n-            report += (\n-                f\"{status} **{env_type.title()}**: {confidence:.1f}% conf\\n\"\n-            )\n+            status = \"\u2705\" if env_type in analysis[\"detected_environments\"] else \"\ud83d\udd0d\"\n+            report += f\"{status} **{env_type.title()}**: {confidence:.1f}% conf\\n\"\n \n         platform = analysis[\"system_info\"][\"platform\"]\n         arch = analysis[\"system_info\"][\"architecture\"]\n         python_ver = analysis[\"system_info\"][\"python_version\"]\n         report += f\"\"\"\n@@ -830,12 +812,13 @@\n             report += f\"{priority_icon} **{action['description']}**\\n\"\n             report += f\"   Command: `{action['command']}`\\n\\n\"\n \n         # Extract complex expression to avoid E122 indentation issues\n         running_processes_text = (\n-            ', '.join(analysis['running_processes'])\n-            if analysis['running_processes'] else 'None detected'\n+            \", \".join(analysis[\"running_processes\"])\n+            if analysis[\"running_processes\"]\n+            else \"None detected\"\n         )\n \n         report += f\"\"\"\n ## Discovery Details\n \n@@ -854,17 +837,13 @@\n         report += \"\"\"\n ### Installed Tools\n \"\"\"\n \n         installed_tools = [\n-            tool\n-            for tool, installed in analysis[\"installed_tools\"].items()\n-            if installed\n+            tool for tool, installed in analysis[\"installed_tools\"].items() if installed\n         ]\n-        tools_str = (\n-            \", \".join(installed_tools) if installed_tools else \"None detected\"\n-        )\n+        tools_str = \", \".join(installed_tools) if installed_tools else \"None detected\"\n         report += f\"{tools_str}\\n\"\n \n         return report\n \n     def run_discovery(\n@@ -924,13 +903,11 @@\n         print(\"\\n\" + \"=\" * 50)\n         print(\"\ud83c\udfaf Auto-Discovery Summary\")\n         print(\"=\" * 50)\n         print(f\"\ud83d\udcc1 Path: {discovery.current_dir}\")\n         print(f\"\ud83d\udd0d Detected: {', '.join(analysis['detected_environments'])}\")\n-        print(\n-            f\"\ud83d\udca1 Suggested servers: {', '.join(analysis['suggested_servers'])}\"\n-        )\n+        print(f\"\ud83d\udca1 Suggested servers: {', '.join(analysis['suggested_servers'])}\")\n         print(\"\\n\ud83d\udcca Full report available in: .mcp/discovery-report.md\")\n \n \n if __name__ == \"__main__\":\n     main_auto_discovery()\n--- cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py\t2025-08-21 16:31:13.908952+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py\t2025-08-21 16:40:15.464850+00:00\n@@ -106,17 +106,13 @@\n \n         return servers\n \n     def _detect_template(self, path: Path) -> str:\n         \"\"\"Detect server template type\"\"\"\n-        if (path / \"pyproject.toml\").exists() and (\n-            path / \"src\" / \"main.py\"\n-        ).exists():\n+        if (path / \"pyproject.toml\").exists() and (path / \"src\" / \"main.py\").exists():\n             return \"python-fastmcp\"\n-        elif (path / \"package.json\").exists() and (\n-            path / \"src\" / \"index.ts\"\n-        ).exists():\n+        elif (path / \"package.json\").exists() and (path / \"src\" / \"index.ts\").exists():\n             return \"typescript-node\"\n         elif (path / \"main.py\").exists():\n             return \"minimal-python\"\n         else:\n             return \"unknown\"\n@@ -236,13 +232,11 @@\n                     \"requirements-logging.txt\": (\n                         \"structlog>=23.1.0\\\\nprometheus-client>=0.17.0\"\n                     ),\n                 },\n                 \"commands\": [\"pip install -r requirements-logging.txt\"],\n-                \"rollback_commands\": [\n-                    \"pip uninstall -y structlog prometheus-client\"\n-                ],\n+                \"rollback_commands\": [\"pip uninstall -y structlog prometheus-client\"],\n             },\n             {\n                 \"id\": \"authentication\",\n                 \"name\": \"JWT Authentication\",\n                 \"description\": \"Add JWT-based authentication to MCP tools\",\n@@ -258,13 +252,11 @@\n                     \"requirements-auth.txt\": (\n                         \"pyjwt[crypto]>=2.8.0\\\\ncryptography>=41.0.0\"\n                     ),\n                 },\n                 \"commands\": [\"pip install -r requirements-auth.txt\"],\n-                \"rollback_commands\": [\n-                    \"pip uninstall -y pyjwt cryptography\"\n-                ],\n+                \"rollback_commands\": [\"pip uninstall -y pyjwt cryptography\"],\n             },\n             {\n                 \"id\": \"caching-redis\",\n                 \"name\": \"Redis Caching\",\n                 \"description\": \"Add Redis-based caching for expensive operations\",\n@@ -299,13 +291,11 @@\n                 },\n                 \"commands\": [\n                     \"pip install -r requirements-db.txt\",\n                     \"alembic init migrations\",\n                 ],\n-                \"rollback_commands\": [\n-                    \"pip uninstall -y alembic sqlalchemy\"\n-                ],\n+                \"rollback_commands\": [\"pip uninstall -y alembic sqlalchemy\"],\n             },\n             {\n                 \"id\": \"monitoring-metrics\",\n                 \"name\": \"Prometheus Metrics\",\n                 \"description\": \"Add comprehensive Prometheus metrics collection\",\n@@ -319,13 +309,11 @@\n                 \"files\": {\n                     \"src/utils/metrics.py\": self._get_metrics_code(),\n                     \"requirements-metrics.txt\": \"prometheus-client>=0.17.0\",\n                 },\n                 \"commands\": [\"pip install -r requirements-metrics.txt\"],\n-                \"rollback_commands\": [\n-                    \"pip uninstall -y prometheus-client\"\n-                ],\n+                \"rollback_commands\": [\"pip uninstall -y prometheus-client\"],\n             },\n             {\n                 \"id\": \"api-versioning\",\n                 \"name\": \"API Versioning\",\n                 \"description\": (\n@@ -404,12 +392,11 @@\n                 \"name\": module.name,\n                 \"description\": module.description,\n                 \"version\": module.version,\n                 \"missing_requirements\": missing_requirements,\n                 \"conflicts\": conflicts,\n-                \"can_install\": len(missing_requirements) == 0\n-                and len(conflicts) == 0,\n+                \"can_install\": len(missing_requirements) == 0 and len(conflicts) == 0,\n             }\n \n             analysis[\"available_upgrades\"].append(upgrade_info)\n \n             # Add to recommendations if installable and useful\n@@ -446,13 +433,11 @@\n             \"template\": server.template,\n             \"version\": server.version,\n             \"installed_modules\": server.installed_modules,\n         }\n \n-        (backup_path / \"metadata.json\").write_text(\n-            json.dumps(metadata, indent=2)\n-        )\n+        (backup_path / \"metadata.json\").write_text(json.dumps(metadata, indent=2))\n \n         print(f\"\u2705 Backup created: {backup_path}\")\n         return str(backup_path)\n \n     def apply_upgrade_module(\n@@ -496,13 +481,11 @@\n                 )\n                 return result\n \n             # Check if already installed\n             if module_id in server.installed_modules:\n-                result.warnings.append(\n-                    f\"Module {module_id} already installed\"\n-                )\n+                result.warnings.append(f\"Module {module_id} already installed\")\n                 return result\n \n             # Check requirements\n             missing_requirements = [\n                 req\n@@ -528,13 +511,11 @@\n                 return result\n \n             if dry_run:\n                 result.success = True\n                 result.modules_applied = [module_id]\n-                print(\n-                    f\"\u2705 Dry run successful for {module_id} on {server_name}\"\n-                )\n+                print(f\"\u2705 Dry run successful for {module_id} on {server_name}\")\n                 return result\n \n             # Create backup\n             print(f\"Creating backup for {server_name}...\")\n             result.backup_path = self.create_backup(server_name)\n@@ -608,13 +589,11 @@\n         manifest_path.write_text(json.dumps(manifest, indent=2))\n \n         # Update in-memory server info\n         server.installed_modules.append(module_id)\n \n-    def rollback_module(\n-        self, server_name: str, module_id: str\n-    ) -> UpgradeResult:\n+    def rollback_module(self, server_name: str, module_id: str) -> UpgradeResult:\n         \"\"\"Rollback an upgrade module\"\"\"\n         start_time = time.time()\n         result = UpgradeResult(\n             success=False,\n             server_name=server_name,\n@@ -660,25 +639,21 @@\n \n             # Update manifest\n             self._remove_from_server_manifest(server_name, module_id)\n \n             result.success = True\n-            print(\n-                f\"\u2705 Successfully rolled back {module_id} from {server_name}\"\n-            )\n+            print(f\"\u2705 Successfully rolled back {module_id} from {server_name}\")\n \n         except Exception as e:\n             result.errors.append(f\"Rollback error: {str(e)}\")\n \n         finally:\n             result.duration = time.time() - start_time\n \n         return result\n \n-    def _remove_from_server_manifest(\n-        self, server_name: str, module_id: str\n-    ):\n+    def _remove_from_server_manifest(self, server_name: str, module_id: str):\n         \"\"\"Remove module from server manifest\"\"\"\n         server = self.servers[server_name]\n         manifest_path = server.path / \".mcp-upgrades.json\"\n \n         if manifest_path.exists():\n@@ -713,31 +688,23 @@\n         results = []\n \n         # Sort modules by dependencies\n         sorted_modules = self._sort_modules_by_dependencies(module_ids)\n \n-        print(\n-            f\"Upgrading {server_name} with modules: {', '.join(sorted_modules)}\"\n-        )\n+        print(f\"Upgrading {server_name} with modules: {', '.join(sorted_modules)}\")\n \n         for module_id in sorted_modules:\n-            result = self.apply_upgrade_module(\n-                server_name, module_id, dry_run\n-            )\n+            result = self.apply_upgrade_module(server_name, module_id, dry_run)\n             results.append(result)\n \n             if not result.success:\n-                print(\n-                    f\"\u274c Failed to apply {module_id}, stopping batch upgrade\"\n-                )\n+                print(f\"\u274c Failed to apply {module_id}, stopping batch upgrade\")\n                 break\n \n         return results\n \n-    def _sort_modules_by_dependencies(\n-        self, module_ids: List[str]\n-    ) -> List[str]:\n+    def _sort_modules_by_dependencies(self, module_ids: List[str]) -> List[str]:\n         \"\"\"Sort modules by their dependency requirements\"\"\"\n         sorted_modules = []\n         remaining = set(module_ids)\n \n         while remaining:\n@@ -836,16 +803,11 @@\n                             \"module_id\": module_id,\n                             \"name\": module.name,\n                             \"description\": module.description,\n                             \"confidence\": (\n                                 \"high\"\n-                                if sum(\n-                                    1\n-                                    for k in keywords\n-                                    if k in prompt_lower\n-                                )\n-                                > 1\n+                                if sum(1 for k in keywords if k in prompt_lower) > 1\n                                 else \"medium\"\n                             ),\n                         }\n                     )\n                     suggestions[\"reasoning\"].append(\n@@ -861,36 +823,26 @@\n             suggestions[\"suggested_modules\"] = [\n                 mod\n                 for mod in suggestions[\"suggested_modules\"]\n                 if (\n                     server.template\n-                    in self.available_modules[\n-                        mod[\"module_id\"]\n-                    ].compatibility\n-                    or \"all\"\n-                    in self.available_modules[\n-                        mod[\"module_id\"]\n-                    ].compatibility\n+                    in self.available_modules[mod[\"module_id\"]].compatibility\n+                    or \"all\" in self.available_modules[mod[\"module_id\"]].compatibility\n                 )\n             ]\n \n         return suggestions\n \n-    def list_available_modules(\n-        self, template_filter: str = None\n-    ) -> List[Dict]:\n+    def list_available_modules(self, template_filter: str = None) -> List[Dict]:\n         \"\"\"List all available upgrade modules\"\"\"\n         modules = []\n \n         for (\n             module_id,\n             module,\n         ) in self.available_modules.items():\n-            if (\n-                template_filter\n-                and template_filter not in module.compatibility\n-            ):\n+            if template_filter and template_filter not in module.compatibility:\n                 continue\n \n             modules.append(\n                 {\n                     \"id\": module_id,\n@@ -1551,13 +1503,11 @@\n   mcp-upgrader rollback my-server authentication\n   mcp-upgrader list-modules --template python-fastmcp\n         \"\"\",\n     )\n \n-    subparsers = parser.add_subparsers(\n-        dest=\"command\", help=\"Available commands\"\n-    )\n+    subparsers = parser.add_subparsers(dest=\"command\", help=\"Available commands\")\n \n     # Analyze command\n     analyze_parser = subparsers.add_parser(\n         \"analyze\", help=\"Analyze server for upgrades\"\n     )\n@@ -1565,51 +1515,37 @@\n \n     # Suggest command\n     suggest_parser = subparsers.add_parser(\n         \"suggest\", help=\"Suggest upgrades based on prompt\"\n     )\n-    suggest_parser.add_argument(\n-        \"prompt\", help=\"Description of what you need\"\n-    )\n-    suggest_parser.add_argument(\n-        \"server\", nargs=\"?\", help=\"Server name (optional)\"\n-    )\n+    suggest_parser.add_argument(\"prompt\", help=\"Description of what you need\")\n+    suggest_parser.add_argument(\"server\", nargs=\"?\", help=\"Server name (optional)\")\n \n     # Install command\n-    install_parser = subparsers.add_parser(\n-        \"install\", help=\"Install upgrade modules\"\n-    )\n+    install_parser = subparsers.add_parser(\"install\", help=\"Install upgrade modules\")\n     install_parser.add_argument(\"server\", help=\"Server name\")\n-    install_parser.add_argument(\n-        \"modules\", nargs=\"+\", help=\"Module IDs to install\"\n-    )\n+    install_parser.add_argument(\"modules\", nargs=\"+\", help=\"Module IDs to install\")\n     install_parser.add_argument(\n         \"--dry-run\",\n         action=\"store_true\",\n         help=\"Dry run mode\",\n     )\n \n     # Rollback command\n-    rollback_parser = subparsers.add_parser(\n-        \"rollback\", help=\"Rollback upgrade module\"\n-    )\n+    rollback_parser = subparsers.add_parser(\"rollback\", help=\"Rollback upgrade module\")\n     rollback_parser.add_argument(\"server\", help=\"Server name\")\n     rollback_parser.add_argument(\"module\", help=\"Module ID to rollback\")\n \n     # List modules command\n-    list_parser = subparsers.add_parser(\n-        \"list-modules\", help=\"List available modules\"\n-    )\n+    list_parser = subparsers.add_parser(\"list-modules\", help=\"List available modules\")\n     list_parser.add_argument(\"--template\", help=\"Filter by template\")\n \n     # Install custom module command\n     custom_parser = subparsers.add_parser(\n         \"install-module\", help=\"Install custom module\"\n     )\n-    custom_parser.add_argument(\n-        \"module_file\", help=\"Path to module JSON file\"\n-    )\n+    custom_parser.add_argument(\"module_file\", help=\"Path to module JSON file\")\n \n     args = parser.parse_args()\n \n     if not args.command:\n         parser.print_help()\n@@ -1620,27 +1556,23 @@\n     if args.command == \"analyze\":\n         analysis = upgrader.analyze_server(args.server)\n         print(json.dumps(analysis, indent=2))\n \n     elif args.command == \"suggest\":\n-        suggestions = upgrader.suggest_upgrades_for_prompt(\n-            args.prompt, args.server\n-        )\n+        suggestions = upgrader.suggest_upgrades_for_prompt(args.prompt, args.server)\n         print(json.dumps(suggestions, indent=2))\n \n     elif args.command == \"install\":\n-        results = upgrader.batch_upgrade(\n-            args.server, args.modules, args.dry_run\n-        )\n+        results = upgrader.batch_upgrade(args.server, args.modules, args.dry_run)\n \n         print(f\"\\\\nUpgrade Results for {args.server}:\")\n         print(\"=\" * 50)\n \n         for result in results:\n             status = \"\u2705 SUCCESS\" if result.success else \"\u274c FAILED\"\n             module_name = (\n-                result.modules_applied[0] if result.modules_applied else 'Unknown'\n+                result.modules_applied[0] if result.modules_applied else \"Unknown\"\n             )\n             print(f\"{status} {module_name}\")\n \n             if result.errors:\n                 for error in result.errors:\n--- cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py\t2025-08-21 16:31:13.919177+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py\t2025-08-21 16:40:15.752132+00:00\n@@ -21,10 +21,11 @@\n import semantic_version\n \n # Import protocol if available\n try:\n     from claude_agent_protocol import TaskType, get_protocol\n+\n     PROTOCOL_AVAILABLE = True\n except ImportError:\n     PROTOCOL_AVAILABLE = False\n \n \n@@ -98,13 +99,11 @@\n \n         return str(new_version)\n \n     def update_version_files(self, new_version: str):\n         \"\"\"Update version in all relevant files\"\"\"\n-        print(\n-            f\"\ud83d\udcdd Updating version from {self.current_version} to {new_version}\"\n-        )\n+        print(f\"\ud83d\udcdd Updating version from {self.current_version} to {new_version}\")\n \n         # Update pyproject.toml\n         with open(self.version_file, \"r\") as f:\n             content = f.read()\n \n@@ -181,13 +180,11 @@\n                 print(f\"  \u2705 Updated {file_path.name}\")\n \n         except Exception as e:\n             print(f\"  \u26a0\ufe0f  Failed to update {file_path}: {e}\")\n \n-    def run_quality_checks(\n-        self, output_dir: str = None\n-    ) -> Dict[str, bool]:\n+    def run_quality_checks(self, output_dir: str = None) -> Dict[str, bool]:\n         \"\"\"Run comprehensive quality checks\"\"\"\n         print(\"\ud83d\udd0d Running quality checks...\")\n \n         checks = {}\n \n@@ -366,13 +363,11 @@\n             ]\n         )\n \n         return test_results\n \n-    def validate_compatibility(\n-        self, base_branch: str = \"main\"\n-    ) -> Dict[str, Any]:\n+    def validate_compatibility(self, base_branch: str = \"main\") -> Dict[str, Any]:\n         \"\"\"Validate compatibility with base branch\"\"\"\n         print(f\"\ud83d\udd04 Validating compatibility with {base_branch}...\")\n \n         compatibility = {\n             \"breaking_changes\": [],\n@@ -405,13 +400,11 @@\n \n                 file_path = Path(file_path)\n \n                 # Check for potential breaking changes\n                 if self.is_critical_file(file_path):\n-                    compatibility[\"breaking_changes\"].append(\n-                        str(file_path)\n-                    )\n+                    compatibility[\"breaking_changes\"].append(str(file_path))\n \n                 # Check API changes\n                 if file_path.suffix == \".py\" and any(\n                     dir in str(file_path)\n                     for dir in [\n@@ -427,19 +420,15 @@\n                     if api_changes:\n                         compatibility[\"api_changes\"].extend(api_changes)\n \n                 # Check template changes\n                 if \"templates/\" in str(file_path):\n-                    compatibility[\"template_changes\"].append(\n-                        str(file_path)\n-                    )\n+                    compatibility[\"template_changes\"].append(str(file_path))\n \n                 # Check upgrade module changes\n                 if \"upgrade\" in str(file_path).lower():\n-                    compatibility[\"upgrade_module_changes\"].append(\n-                        str(file_path)\n-                    )\n+                    compatibility[\"upgrade_module_changes\"].append(str(file_path))\n \n             # Determine overall compatibility\n             compatibility[\"compatible\"] = (\n                 len(compatibility[\"breaking_changes\"]) == 0\n                 and len(compatibility[\"api_changes\"]) == 0\n@@ -460,13 +449,11 @@\n             \"mcp-upgrader.py\",\n             \"pyproject.toml\",\n             \"requirements.txt\",\n         ]\n \n-        return any(\n-            pattern in str(file_path) for pattern in critical_patterns\n-        )\n+        return any(pattern in str(file_path) for pattern in critical_patterns)\n \n     def detect_api_changes(\n         self,\n         file_path: Path,\n         base_branch: str,\n@@ -499,19 +486,14 @@\n             current_functions = re.findall(\n                 r\"def\\s+(\\w+)\",\n                 current_content,\n             )\n \n-            removed_functions = set(base_functions) - set(\n-                current_functions\n-            )\n+            removed_functions = set(base_functions) - set(current_functions)\n             if removed_functions:\n                 changes.extend(\n-                    [\n-                        f\"Removed function: {func}\"\n-                        for func in removed_functions\n-                    ]\n+                    [f\"Removed function: {func}\" for func in removed_functions]\n                 )\n \n             base_classes = re.findall(\n                 r\"class\\s+(\\w+)\",\n                 base_content,\n@@ -521,13 +503,11 @@\n                 current_content,\n             )\n \n             removed_classes = set(base_classes) - set(current_classes)\n             if removed_classes:\n-                changes.extend(\n-                    [f\"Removed class: {cls}\" for cls in removed_classes]\n-                )\n+                changes.extend([f\"Removed class: {cls}\" for cls in removed_classes])\n \n             return changes\n \n         except Exception:\n             return []\n@@ -605,13 +585,11 @@\n \n                 if result.returncode == 0:\n                     print(\"    \u2705 Package installation successful\")\n                     return True\n                 else:\n-                    print(\n-                        f\"    \u274c Package installation failed: {result.stderr}\"\n-                    )\n+                    print(f\"    \u274c Package installation failed: {result.stderr}\")\n \n         return False\n \n     def update_changelog(\n         self,\n@@ -676,13 +654,11 @@\n             )\n             return result.returncode == 0\n         except Exception:\n             return False\n \n-    def run_command_with_output(\n-        self, cmd: List[str]\n-    ) -> Tuple[bool, str, str]:\n+    def run_command_with_output(self, cmd: List[str]) -> Tuple[bool, str, str]:\n         \"\"\"Run command and return success status, stdout, stderr\"\"\"\n         try:\n             result = subprocess.run(\n                 cmd,\n                 cwd=self.repo_path,\n@@ -746,17 +722,13 @@\n                         if func_signature in functions_map:\n                             duplicates[\"duplicate_functions\"].append(\n                                 {\n                                     \"function\": node.name,\n                                     \"signature\": func_signature,\n-                                    \"file1\": str(\n-                                        functions_map[func_signature]\n-                                    ),\n+                                    \"file1\": str(functions_map[func_signature]),\n                                     \"file2\": str(py_file),\n-                                    \"line1\": functions_map[\n-                                        func_signature\n-                                    ].get(\n+                                    \"line1\": functions_map[func_signature].get(\n                                         \"line\",\n                                         \"unknown\",\n                                     ),\n                                     \"line2\": node.lineno,\n                                 }\n@@ -773,17 +745,13 @@\n                         if class_signature in classes_map:\n                             duplicates[\"similar_classes\"].append(\n                                 {\n                                     \"class\": node.name,\n                                     \"signature\": class_signature,\n-                                    \"file1\": str(\n-                                        classes_map[class_signature]\n-                                    ),\n+                                    \"file1\": str(classes_map[class_signature]),\n                                     \"file2\": str(py_file),\n-                                    \"line1\": classes_map[\n-                                        class_signature\n-                                    ].get(\n+                                    \"line1\": classes_map[class_signature].get(\n                                         \"line\",\n                                         \"unknown\",\n                                     ),\n                                     \"line2\": node.lineno,\n                                 }\n@@ -815,13 +783,11 @@\n         if duplicates[\"similar_classes\"]:\n             duplicates[\"recommendations\"].append(\n                 \"Consider merging similar class implementations\"\n             )\n         if duplicates[\"redundant_files\"]:\n-            duplicates[\"recommendations\"].append(\n-                \"Remove redundant file copies\"\n-            )\n+            duplicates[\"recommendations\"].append(\"Remove redundant file copies\")\n \n         return duplicates\n \n     def should_skip_file(self, file_path: Path) -> bool:\n         \"\"\"Check if file should be skipped during duplicate detection\"\"\"\n@@ -929,28 +895,28 @@\n                 )\n \n         return competing\n \n     def run_claude_integrated_linting(\n-        self,\n-        output_dir: Path = None,\n-        session_id: str = None,\n-        quick_check: bool = False\n+        self, output_dir: Path = None, session_id: str = None, quick_check: bool = False\n     ) -> Dict[str, Any]:\n         \"\"\"Enhanced comprehensive linting with protocol integration\"\"\"\n         self.lint_start_time = time.time()\n         print(\n             f\"\ud83d\udd0d Running {'quick' if quick_check else 'comprehensive'} \"\n             f\"Claude-integrated linting...\"\n         )\n \n         # Update protocol if available\n         if self.protocol:\n-            self.protocol.update_phase(\"linting\", {\n-                \"lint_type\": \"quick\" if quick_check else \"comprehensive\",\n-                \"started_at\": datetime.now().isoformat()\n-            })\n+            self.protocol.update_phase(\n+                \"linting\",\n+                {\n+                    \"lint_type\": \"quick\" if quick_check else \"comprehensive\",\n+                    \"started_at\": datetime.now().isoformat(),\n+                },\n+            )\n \n         lint_report = {\n             \"version\": self.current_version,\n             \"branch\": self.git_branch,\n             \"timestamp\": datetime.now().isoformat(),\n@@ -968,11 +934,11 @@\n             \"compatibility_issues\": {},\n             \"duplicate_issues\": {},\n             \"claude_recommendations\": [],\n             \"fix_commands\": [],\n             \"priority_fixes\": [],\n-            \"performance\": {}\n+            \"performance\": {},\n         }\n \n         # Run quality checks with detailed output\n         quality_tools = [\n             \"black\",\n@@ -980,80 +946,76 @@\n             \"mypy\",\n             \"flake8\",\n             \"pylint\",\n         ]\n         for tool in quality_tools:\n-            success, stdout, stderr = self.run_quality_check_with_details(\n-                tool\n-            )\n+            success, stdout, stderr = self.run_quality_check_with_details(tool)\n             lint_report[\"quality_issues\"][tool] = {\n                 \"passed\": success,\n                 \"stdout\": stdout,\n                 \"stderr\": stderr,\n                 \"fixes\": self.generate_tool_fixes(tool, stdout, stderr),\n             }\n \n         # Run security checks with detailed output\n         security_tools = [\"bandit\", \"safety\"]\n         for tool in security_tools:\n-            success, stdout, stderr = self.run_security_check_with_details(\n-                tool\n-            )\n+            success, stdout, stderr = self.run_security_check_with_details(tool)\n             lint_report[\"security_issues\"][tool] = {\n                 \"passed\": success,\n                 \"stdout\": stdout,\n                 \"stderr\": stderr,\n-                \"fixes\": self.generate_security_fixes(\n-                    tool, stdout, stderr\n-                ),\n+                \"fixes\": self.generate_security_fixes(tool, stdout, stderr),\n             }\n \n         # Run duplicate detection\n-        lint_report[\"duplicate_issues\"] = (\n-            self.detect_duplicate_implementations()\n-        )\n+        lint_report[\"duplicate_issues\"] = self.detect_duplicate_implementations()\n \n         # Run connections linting\n         lint_report[\"connection_issues\"] = self.run_connections_linter()\n \n         # Generate Claude-specific recommendations\n-        lint_report[\"claude_recommendations\"] = (\n-            self.generate_claude_recommendations(lint_report)\n-        )\n-\n-        # Generate automated fix commands\n-        lint_report[\"fix_commands\"] = self.generate_fix_commands(\n+        lint_report[\"claude_recommendations\"] = self.generate_claude_recommendations(\n             lint_report\n         )\n \n+        # Generate automated fix commands\n+        lint_report[\"fix_commands\"] = self.generate_fix_commands(lint_report)\n+\n         # Prioritize fixes\n         lint_report[\"priority_fixes\"] = self.prioritize_fixes(lint_report)\n \n         # Validate recommendations for safety\n-        lint_report[\"validation_report\"] = (\n-            self.validate_lint_recommendations(lint_report)\n+        lint_report[\"validation_report\"] = self.validate_lint_recommendations(\n+            lint_report\n         )\n \n         # Calculate totals and performance metrics\n-        total_issues = sum([\n-            len(tool_data.get(\"fixes\", []))\n-            for tool_data in lint_report[\"quality_issues\"].values()\n-        ]) + sum([\n-            len(tool_data.get(\"fixes\", []))\n-            for tool_data in lint_report[\"security_issues\"].values()\n-        ])\n+        total_issues = sum(\n+            [\n+                len(tool_data.get(\"fixes\", []))\n+                for tool_data in lint_report[\"quality_issues\"].values()\n+            ]\n+        ) + sum(\n+            [\n+                len(tool_data.get(\"fixes\", []))\n+                for tool_data in lint_report[\"security_issues\"].values()\n+            ]\n+        )\n         lint_report[\"total_issues\"] = total_issues\n         lint_report[\"files_analyzed\"] = self.files_scanned\n         # Performance metrics\n         if self.lint_start_time:\n             lint_duration = time.time() - self.lint_start_time\n             lint_report[\"performance\"] = {\n                 \"duration_seconds\": lint_duration,\n-                \"issues_per_second\": (total_issues / lint_duration\n-                                      if lint_duration > 0 else 0),\n-                \"files_per_second\": (self.files_scanned / lint_duration\n-                                     if lint_duration > 0 else 0)\n+                \"issues_per_second\": (\n+                    total_issues / lint_duration if lint_duration > 0 else 0\n+                ),\n+                \"files_per_second\": (\n+                    self.files_scanned / lint_duration if lint_duration > 0 else 0\n+                ),\n             }\n \n         # Save detailed report\n         if output_dir:\n             output_dir = Path(output_dir)\n@@ -1065,45 +1027,50 @@\n             print(f\"\ud83d\udcca Lint report saved to: {report_file}\")\n             lint_report[\"report_file\"] = str(report_file)\n \n         # Protocol integration - update state and create tasks\n         if self.protocol:\n-            self.protocol.update_phase(\"linting_complete\", {\n-                \"issues_remaining\": total_issues,\n-                \"lint_report\": lint_report.get(\"report_file\", \"\"),\n-                \"performance\": lint_report[\"performance\"]\n-            })\n+            self.protocol.update_phase(\n+                \"linting_complete\",\n+                {\n+                    \"issues_remaining\": total_issues,\n+                    \"lint_report\": lint_report.get(\"report_file\", \"\"),\n+                    \"performance\": lint_report[\"performance\"],\n+                },\n+            )\n \n             # Create fixing tasks for critical issues\n             critical_fixes = []\n             for tool, data in lint_report[\"quality_issues\"].items():\n                 for fix in data.get(\"fixes\", []):\n                     if fix.get(\"type\") == \"auto_fix\":\n-                        critical_fixes.append({\n-                            \"tool\": tool,\n-                            \"command\": fix[\"command\"],\n-                            \"description\": fix[\"description\"],\n-                            \"severity\": \"error\"\n-                        })\n+                        critical_fixes.append(\n+                            {\n+                                \"tool\": tool,\n+                                \"command\": fix[\"command\"],\n+                                \"description\": fix[\"description\"],\n+                                \"severity\": \"error\",\n+                            }\n+                        )\n \n             # Create tasks for the most critical fixes\n             for fix in critical_fixes[:5]:\n                 self.protocol.create_task(\n                     TaskType.LINT_FIX,\n                     context=fix,\n                     priority=1,\n-                    success_criteria={\"fix_applied\": True}\n+                    success_criteria={\"fix_applied\": True},\n                 )\n \n-            print(f\"\ud83d\udccb Created {len(critical_fixes[:5])} priority fixing \"\n-                  f\"tasks in protocol\")\n+            print(\n+                f\"\ud83d\udccb Created {len(critical_fixes[:5])} priority fixing \"\n+                f\"tasks in protocol\"\n+            )\n \n         return lint_report\n \n-    def run_quality_check_with_details(\n-        self, tool: str\n-    ) -> Tuple[bool, str, str]:\n+    def run_quality_check_with_details(self, tool: str) -> Tuple[bool, str, str]:\n         \"\"\"Run quality check tool with detailed output\"\"\"\n         commands = {\n             \"black\": [\n                 \"black\",\n                 \"--check\",\n@@ -1147,13 +1114,11 @@\n             False,\n             \"\",\n             f\"Unknown tool: {tool}\",\n         )\n \n-    def run_security_check_with_details(\n-        self, tool: str\n-    ) -> Tuple[bool, str, str]:\n+    def run_security_check_with_details(self, tool: str) -> Tuple[bool, str, str]:\n         \"\"\"Run security check tool with detailed output\"\"\"\n         commands = {\n             \"bandit\": [\n                 \"bandit\",\n                 \"-r\",\n@@ -1193,12 +1158,12 @@\n                     {\n                         \"type\": \"auto_fix\",\n                         \"command\": \"black scripts/ core/ guardrails/\",\n                         \"description\": \"Auto-format code with Black\",\n                         \"claude_prompt\": \"Please run 'black scripts/ core/ \"\n-                                       \"guardrails/' to auto-format the code \"\n-                                       \"according to PEP 8 standards.\",\n+                        \"guardrails/' to auto-format the code \"\n+                        \"according to PEP 8 standards.\",\n                     }\n                 )\n \n         elif tool == \"isort\":\n             if \"ERROR\" in stderr or \"Skipped\" in stdout:\n@@ -1206,11 +1171,11 @@\n                     {\n                         \"type\": \"auto_fix\",\n                         \"command\": \"isort scripts/ core/ guardrails/\",\n                         \"description\": \"Sort imports with isort\",\n                         \"claude_prompt\": \"Please run 'isort scripts/ core/ \"\n-                                       \"guardrails/' to organize import statements.\",\n+                        \"guardrails/' to organize import statements.\",\n                     }\n                 )\n \n         elif tool == \"mypy\":\n             if \"error:\" in stdout:\n@@ -1291,13 +1256,11 @@\n                             {\n                                 \"type\": \"security_fix\",\n                                 \"file\": result.get(\"filename\"),\n                                 \"line\": result.get(\"line_number\"),\n                                 \"severity\": result.get(\"issue_severity\"),\n-                                \"confidence\": result.get(\n-                                    \"issue_confidence\"\n-                                ),\n+                                \"confidence\": result.get(\"issue_confidence\"),\n                                 \"issue\": result.get(\"issue_text\"),\n                                 \"claude_prompt\": (\n                                     f\"Please review and fix the security issue in \"\n                                     f\"{result.get('filename')}:\"\n                                     f\"{result.get('line_number')}: \"\n@@ -1310,22 +1273,18 @@\n \n         elif tool == \"safety\":\n             try:\n                 if stdout:\n                     safety_data = json.loads(stdout)\n-                    for vuln in safety_data[\n-                        :3\n-                    ]:  # Limit to 3 vulnerabilities\n+                    for vuln in safety_data[:3]:  # Limit to 3 vulnerabilities\n                         fixes.append(\n                             {\n                                 \"type\": \"dependency_fix\",\n                                 \"package\": vuln.get(\"package_name\"),\n                                 \"version\": vuln.get(\"installed_version\"),\n                                 \"vulnerability\": vuln.get(\"vulnerability_id\"),\n-                                \"recommendation\": vuln.get(\n-                                    \"more_info_url\"\n-                                ),\n+                                \"recommendation\": vuln.get(\"more_info_url\"),\n                                 \"claude_prompt\": (\n                                     f\"Please update {vuln.get('package_name')} \"\n                                     f\"from {vuln.get('installed_version')} to fix \"\n                                     f\"vulnerability {vuln.get('vulnerability_id')}\"\n                                 ),\n@@ -1334,13 +1293,11 @@\n             except json.JSONDecodeError:\n                 pass\n \n         return fixes\n \n-    def generate_claude_recommendations(\n-        self, lint_report: Dict[str, Any]\n-    ) -> List[str]:\n+    def generate_claude_recommendations(self, lint_report: Dict[str, Any]) -> List[str]:\n         \"\"\"Generate Claude-specific recommendations based on lint results\"\"\"\n         recommendations = []\n \n         # Quality issues\n         failed_quality = [\n@@ -1357,13 +1314,11 @@\n         security_count = sum(\n             len(result.get(\"fixes\", []))\n             for result in lint_report[\"security_issues\"].values()\n         )\n         if security_count > 0:\n-            recommendations.append(\n-                f\"\ud83d\udd12 Address {security_count} security issues found\"\n-            )\n+            recommendations.append(f\"\ud83d\udd12 Address {security_count} security issues found\")\n \n         # Duplicate issues\n         duplicates = lint_report[\"duplicate_issues\"]\n         if duplicates[\"duplicate_functions\"]:\n             recommendations.append(\n@@ -1387,35 +1342,23 @@\n                 f\"\ud83d\udce6 Fix {len(connections['broken_imports'])} broken imports\"\n             )\n \n         return recommendations\n \n-    def generate_fix_commands(\n-        self, lint_report: Dict[str, Any]\n-    ) -> List[str]:\n+    def generate_fix_commands(self, lint_report: Dict[str, Any]) -> List[str]:\n         \"\"\"Generate automated fix commands\"\"\"\n         commands = []\n \n         # Auto-fixable quality issues\n-        if (\n-            not lint_report[\"quality_issues\"]\n-            .get(\"black\", {})\n-            .get(\"passed\", True)\n-        ):\n+        if not lint_report[\"quality_issues\"].get(\"black\", {}).get(\"passed\", True):\n             commands.append(\"black scripts/ core/ guardrails/\")\n-        if (\n-            not lint_report[\"quality_issues\"]\n-            .get(\"isort\", {})\n-            .get(\"passed\", True)\n-        ):\n+        if not lint_report[\"quality_issues\"].get(\"isort\", {}).get(\"passed\", True):\n             commands.append(\"isort scripts/ core/ guardrails/\")\n \n         return commands\n \n-    def prioritize_fixes(\n-        self, lint_report: Dict[str, Any]\n-    ) -> List[Dict[str, Any]]:\n+    def prioritize_fixes(self, lint_report: Dict[str, Any]) -> List[Dict[str, Any]]:\n         \"\"\"Prioritize fixes by importance\"\"\"\n         priority_fixes = []\n \n         # Priority 1: Security issues\n         for tool, result in lint_report[\"security_issues\"].items():\n@@ -1436,11 +1379,11 @@\n                     \"priority\": 2,\n                     \"category\": \"duplicates\",\n                     \"fix\": {\n                         \"type\": \"remove_duplicate\",\n                         \"description\": f\"Remove duplicate function \"\n-                                       f\"{dup['function']} in {dup['file2']}\",\n+                        f\"{dup['function']} in {dup['file2']}\",\n                         \"claude_prompt\": (\n                             f\"Please remove the duplicate function \"\n                             f\"'{dup['function']}' from {dup['file2']}:{dup['line2']} \"\n                             f\"as it already exists in \"\n                             f\"{dup['file1']}:{dup['line1']}\"\n@@ -1528,13 +1471,11 @@\n         # Build function registry from all Python files\n         function_registry = {}\n         import_registry = {}\n \n         python_files = [\n-            f\n-            for f in self.repo_path.rglob(\"*.py\")\n-            if not self.should_skip_file(f)\n+            f for f in self.repo_path.rglob(\"*.py\") if not self.should_skip_file(f)\n         ]\n \n         # First pass: collect all functions and imports\n         for py_file in python_files:\n             try:\n@@ -1551,13 +1492,11 @@\n                         for item in node.body:\n                             if isinstance(\n                                 item,\n                                 ast.FunctionDef,\n                             ):\n-                                file_functions.append(\n-                                    f\"{node.name}.{item.name}\"\n-                                )\n+                                file_functions.append(f\"{node.name}.{item.name}\")\n \n                 function_registry[str(py_file)] = file_functions\n \n                 # Collect imports\n                 file_imports = []\n@@ -1566,13 +1505,11 @@\n                         for alias in node.names:\n                             file_imports.append(alias.name)\n                     elif isinstance(node, ast.ImportFrom):\n                         if node.module:\n                             for alias in node.names:\n-                                file_imports.append(\n-                                    f\"{node.module}.{alias.name}\"\n-                                )\n+                                file_imports.append(f\"{node.module}.{alias.name}\")\n \n                 import_registry[str(py_file)] = file_imports\n \n             except Exception as e:\n                 connections_report[\"connection_errors\"].append(\n@@ -1601,13 +1538,11 @@\n                                 func_name,\n                                 py_file,\n                                 function_registry,\n                                 import_registry,\n                             ):\n-                                connections_report[\n-                                    \"undefined_functions\"\n-                                ].append(\n+                                connections_report[\"undefined_functions\"].append(\n                                     {\n                                         \"file\": str(py_file),\n                                         \"line\": node.lineno,\n                                         \"function\": func_name,\n                                         \"type\": \"undefined_function_call\",\n@@ -1630,13 +1565,11 @@\n                                     full_call,\n                                     py_file,\n                                     function_registry,\n                                     import_registry,\n                                 ):\n-                                    connections_report[\n-                                        \"undefined_functions\"\n-                                    ].append(\n+                                    connections_report[\"undefined_functions\"].append(\n                                         {\n                                             \"file\": str(py_file),\n                                             \"line\": node.lineno,\n                                             \"function\": full_call,\n                                             \"type\": \"undefined_method_call\",\n@@ -1650,13 +1583,11 @@\n                             module_path = self.resolve_module_path(\n                                 node.module,\n                                 py_file,\n                             )\n                             if module_path and not module_path.exists():\n-                                connections_report[\n-                                    \"broken_imports\"\n-                                ].append(\n+                                connections_report[\"broken_imports\"].append(\n                                     {\n                                         \"file\": str(py_file),\n                                         \"line\": node.lineno,\n                                         \"module\": node.module,\n                                         \"type\": \"missing_module\",\n@@ -1891,26 +1822,22 @@\n                         }\n                     )\n \n                 elif fix_type == \"remove_duplicate\":\n                     # Check if removing duplicate would break imports/calls\n-                    file_path = fix.get(\"description\", \"\").split(\" in \")[\n-                        -1\n-                    ]\n+                    file_path = fix.get(\"description\", \"\").split(\" in \")[-1]\n                     function_name = (\n                         fix.get(\"description\", \"\")\n                         .split(\"function \")[-1]\n                         .split(\" in\")[0]\n                     )\n \n                     if self.would_break_dependencies(\n                         file_path,\n                         function_name,\n                     ):\n-                        validation_report[\n-                            \"blocked_recommendations\"\n-                        ].append(\n+                        validation_report[\"blocked_recommendations\"].append(\n                             {\n                                 \"fix\": fix,\n                                 \"reason\": (\n                                     f\"Removing {function_name} from {file_path} \"\n                                     f\"would break dependencies\"\n@@ -1972,14 +1899,11 @@\n     ) -> bool:\n         \"\"\"Check if removing a function would break dependencies\"\"\"\n         try:\n             # Simple check: search for function calls across all files\n             for py_file in self.repo_path.rglob(\"*.py\"):\n-                if (\n-                    self.should_skip_file(py_file)\n-                    or str(py_file) == file_path\n-                ):\n+                if self.should_skip_file(py_file) or str(py_file) == file_path:\n                     continue\n \n                 try:\n                     content = py_file.read_text()\n                     # Look for function calls, imports, or references\n@@ -2024,18 +1948,14 @@\n             \"recommendations\": [],\n         }\n \n         # Add recommendations\n         if not all(checks.values()):\n-            report[\"recommendations\"].append(\n-                \"Fix code quality issues before release\"\n-            )\n+            report[\"recommendations\"].append(\"Fix code quality issues before release\")\n \n         if not all(tests.values()):\n-            report[\"recommendations\"].append(\n-                \"Fix failing tests before release\"\n-            )\n+            report[\"recommendations\"].append(\"Fix failing tests before release\")\n \n         if not compatibility[\"compatible\"]:\n             report[\"recommendations\"].append(\n                 \"Review breaking changes and update documentation\"\n             )\n@@ -2053,25 +1973,21 @@\n         tests: Dict[str, bool],\n         compatibility: Dict[str, Any],\n     ) -> bool:\n         \"\"\"Check if all validation passes\"\"\"\n         return (\n-            all(checks.values())\n-            and all(tests.values())\n-            and compatibility[\"compatible\"]\n+            all(checks.values()) and all(tests.values()) and compatibility[\"compatible\"]\n         )\n \n     def save_report(\n         self,\n         report: Dict[str, Any],\n         output_path: Path = None,\n     ):\n         \"\"\"Save release report to file\"\"\"\n         if output_path is None:\n-            output_path = (\n-                self.repo_path / f\"release-report-{report['version']}.json\"\n-            )\n+            output_path = self.repo_path / f\"release-report-{report['version']}.json\"\n \n         with open(output_path, \"w\") as f:\n             json.dump(report, f, indent=2)\n \n         print(f\"\ud83d\udcca Release report saved: {output_path}\")\n@@ -2184,30 +2100,22 @@\n         lint_only = True\n \n     # Handle lint-only mode\n     if lint_only or claude_lint or detect_duplicates or check_connections:\n         if detect_duplicates:\n-            print(\n-                \"\\n\ud83d\udd0d Running duplicate/competing implementation detection...\"\n-            )\n+            print(\"\\n\ud83d\udd0d Running duplicate/competing implementation detection...\")\n             duplicates = keeper.detect_duplicate_implementations()\n \n             print(\"\\n\ud83d\udcca DUPLICATE DETECTION RESULTS\")\n             print(\"=\" * 50)\n-            print(\n-                f\"\ud83d\udd04 Duplicate functions: {len(duplicates['duplicate_functions'])}\"\n-            )\n+            print(f\"\ud83d\udd04 Duplicate functions: {len(duplicates['duplicate_functions'])}\")\n             print(\n                 f\"\u26a1 Competing implementations: \"\n                 f\"{len(duplicates['competing_implementations'])}\"\n             )\n-            print(\n-                f\"\ud83c\udfd7\ufe0f Similar classes: {len(duplicates['similar_classes'])}\"\n-            )\n-            print(\n-                f\"\ud83d\udcc1 Redundant files: {len(duplicates['redundant_files'])}\"\n-            )\n+            print(f\"\ud83c\udfd7\ufe0f Similar classes: {len(duplicates['similar_classes'])}\")\n+            print(f\"\ud83d\udcc1 Redundant files: {len(duplicates['redundant_files'])}\")\n \n             if duplicates[\"duplicate_functions\"]:\n                 print(\"\\n\ud83d\udd04 DUPLICATE FUNCTIONS:\")\n                 for dup in duplicates[\"duplicate_functions\"]:\n                     print(\n@@ -2234,25 +2142,17 @@\n             print(\"\\n\ud83d\udd17 Running connections linter...\")\n             connections = keeper.run_connections_linter()\n \n             print(\"\\n\ud83d\udcca CONNECTION ANALYSIS RESULTS\")\n             print(\"=\" * 50)\n-            print(\n-                f\"\ud83d\udd17 Undefined functions: {len(connections['undefined_functions'])}\"\n-            )\n-            print(\n-                f\"\ud83d\udce6 Broken imports: {len(connections['broken_imports'])}\"\n-            )\n-            print(\n-                f\"\u26a0\ufe0f  Connection errors: {len(connections['connection_errors'])}\"\n-            )\n+            print(f\"\ud83d\udd17 Undefined functions: {len(connections['undefined_functions'])}\")\n+            print(f\"\ud83d\udce6 Broken imports: {len(connections['broken_imports'])}\")\n+            print(f\"\u26a0\ufe0f  Connection errors: {len(connections['connection_errors'])}\")\n \n             if connections[\"undefined_functions\"]:\n                 print(\"\\n\ud83d\udd17 UNDEFINED FUNCTIONS:\")\n-                for func in connections[\"undefined_functions\"][\n-                    :10\n-                ]:  # Show first 10\n+                for func in connections[\"undefined_functions\"][:10]:  # Show first 10\n                     print(\n                         f\"  \u2022 {func['function']} in {func['file']}:{func['line']} \"\n                         f\"({func['type']})\"\n                     )\n                 if len(connections[\"undefined_functions\"]) > 10:\n@@ -2260,20 +2160,14 @@\n                         f\"  ... and {len(connections['undefined_functions']) - 10} more\"\n                     )\n \n             if connections[\"broken_imports\"]:\n                 print(\"\\n\ud83d\udce6 BROKEN IMPORTS:\")\n-                for imp in connections[\"broken_imports\"][\n-                    :10\n-                ]:  # Show first 10\n-                    print(\n-                        f\"  \u2022 {imp['module']} in {imp['file']}:{imp['line']}\"\n-                    )\n+                for imp in connections[\"broken_imports\"][:10]:  # Show first 10\n+                    print(f\"  \u2022 {imp['module']} in {imp['file']}:{imp['line']}\")\n                 if len(connections[\"broken_imports\"]) > 10:\n-                    print(\n-                        f\"  ... and {len(connections['broken_imports']) - 10} more\"\n-                    )\n+                    print(f\"  ... and {len(connections['broken_imports']) - 10} more\")\n \n             if connections[\"recommendations\"]:\n                 print(\"\\n\ud83d\udca1 CONNECTION RECOMMENDATIONS:\")\n                 for rec in connections[\"recommendations\"]:\n                     print(f\"  \u2022 {rec}\")\n@@ -2284,11 +2178,11 @@\n                 f\"Claude-integrated linting...\"\n             )\n             lint_report = keeper.run_claude_integrated_linting(\n                 output_dir=Path(output_dir) if output_dir else None,\n                 session_id=session_id,\n-                quick_check=quick_check\n+                quick_check=quick_check,\n             )\n \n             print(\"\\n\ud83d\udcca CLAUDE LINT REPORT\")\n             print(\"=\" * 50)\n \n@@ -2300,11 +2194,12 @@\n                 for i, pfix in enumerate(\n                     lint_report[\"priority_fixes\"][:10],\n                     1,\n                 ):  # Show top 10\n                     priority_icon = (\n-                        \"\ud83d\udd34\" if pfix[\"priority\"] == 1\n+                        \"\ud83d\udd34\"\n+                        if pfix[\"priority\"] == 1\n                         else (\"\ud83d\udfe1\" if pfix[\"priority\"] == 2 else \"\ud83d\udfe2\")\n                     )\n                     print(\n                         f\"  {i}. {priority_icon} [{pfix['category'].upper()}] \"\n                         f\"{pfix['fix'].get('description', 'No description')}\"\n@@ -2322,40 +2217,32 @@\n                 for cmd in lint_report[\"fix_commands\"]:\n                     print(f\"  \u2022 {cmd}\")\n \n             # Save detailed report\n             if output_dir:\n-                timestamp = datetime.now().strftime('%Y%m%d-%H%M%S')\n-                report_file = (\n-                    Path(output_dir)\n-                    / f\"claude-lint-report-{timestamp}.json\"\n-                )\n+                timestamp = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n+                report_file = Path(output_dir) / f\"claude-lint-report-{timestamp}.json\"\n             else:\n                 # Save in reports/lint directory for pipeline coordination\n                 reports_dir = keeper.repo_path / \"reports\" / \"lint\"\n                 reports_dir.mkdir(\n                     parents=True,\n                     exist_ok=True,\n                 )\n-                timestamp = datetime.now().strftime('%Y%m%d-%H%M%S')\n-                report_file = (\n-                    reports_dir /\n-                    f\"claude-lint-report-{timestamp}.json\"\n-                )\n+                timestamp = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n+                report_file = reports_dir / f\"claude-lint-report-{timestamp}.json\"\n \n             with open(report_file, \"w\") as f:\n                 json.dump(\n                     lint_report,\n                     f,\n                     indent=2,\n                     default=str,\n                 )\n             print(f\"\\n\ud83d\udcca Detailed Claude lint report saved: {report_file}\")\n             print(\"\\n\ud83d\udea8 FRESH REPORT READY \ud83d\udea8\")\n-            print(\n-                \"Claude: New lint report generated and ready for quality patcher!\"\n-            )\n+            print(\"Claude: New lint report generated and ready for quality patcher!\")\n \n         if lint_only:\n             print(\"\\n\u2705 Lint-only mode complete\")\n             return\n \n@@ -2369,11 +2256,11 @@\n     # Run quality checks (enhanced with Claude integration if requested)\n     if claude_lint:\n         lint_report = keeper.run_claude_integrated_linting(\n             output_dir=Path(output_dir) if output_dir else None,\n             session_id=session_id,\n-            quick_check=quick_check\n+            quick_check=quick_check,\n         )\n         checks = {\n             tool: result[\"passed\"]\n             for tool, result in lint_report[\"quality_issues\"].items()\n         }\n@@ -2397,13 +2284,11 @@\n         compatibility,\n     )\n \n     # Save report\n     if output_dir:\n-        output_path = (\n-            Path(output_dir) / f\"release-report-{new_version}.json\"\n-        )\n+        output_path = Path(output_dir) / f\"release-report-{new_version}.json\"\n     else:\n         output_path = None\n \n     keeper.save_report(report, output_path)\n \n@@ -2429,13 +2314,11 @@\n     print(\"\\n\ud83d\udd04 Compatibility:\")\n     icon = \"\u2705\" if compatibility[\"compatible\"] else \"\u274c\"\n     print(f\"  {icon} Compatible with {base_branch}\")\n \n     if compatibility[\"breaking_changes\"]:\n-        print(\n-            f\"  \u26a0\ufe0f  Breaking changes: {len(compatibility['breaking_changes'])}\"\n-        )\n+        print(f\"  \u26a0\ufe0f  Breaking changes: {len(compatibility['breaking_changes'])}\")\n \n     if compatibility[\"api_changes\"]:\n         print(f\"  \u26a0\ufe0f  API changes: {len(compatibility['api_changes'])}\")\n \n     # Recommendations\n--- cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py\t2025-08-21 16:31:13.918952+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py\t2025-08-21 16:40:15.830608+00:00\n@@ -294,16 +294,16 @@\n \n         # Dependency validation\n         print(\"  \ud83d\udce6 Dependency validation...\")\n         if output_dir:\n             checks[\"pip_audit\"] = self.run_command(\n-                    f\"--output={output_dir}/pip-audit-report.json\",\n+                f\"--output={output_dir}/pip-audit-report.json\",\n                 [\n                     \"pip-audit\",\n                     \"--format=json\",\n                     f\"--output=configs/pip-audit-report.json\",\n-                ]\n+                ],\n             )\n         else:\n             checks[\"pip_audit\"] = self.run_command(\n                 [\n                     \"pip-audit\",\n@@ -510,20 +510,23 @@\n             current_classes = re.findall(\n                 r\"class\\s+(\\w+)\",\n                 current_content,\n             )\n             if removed_functions:\n-                changes.extend([f\"Removed function: {func}\" for func in removed_functions])\n+                changes.extend(\n+                    [f\"Removed function: {func}\" for func in removed_functions]\n+                )\n \n             removed_classes = set(base_classes) - set(current_classes)\n             if removed_classes:\n                 changes.extend([f\"Removed class: {cls}\" for cls in removed_classes])\n \n             return changes\n \n         except Exception:\n             return []\n+\n     def build_package(self) -> bool:\n         \"\"\"Build distribution package\"\"\"\n         print(\"\ud83d\udce6 Building package...\")\n \n         # Clean previous builds\n@@ -736,32 +739,46 @@\n                                     child, node.name\n                                 )\n                                 if func_signature in functions_map:\n                                     # Only flag as duplicate if it's truly the same function in different files\n                                     # Skip if same file (could be legitimate overloads)\n-                                    if str(py_file) != str(functions_map[func_signature][\"file\"]):\n+                                    if str(py_file) != str(\n+                                        functions_map[func_signature][\"file\"]\n+                                    ):\n                                         # Check if this is a legitimate duplicate vs legacy code\n                                         func1_info = {\n                                             \"function\": child.name,\n-                                            \"file\": str(functions_map[func_signature][\"file\"]),\n-                                            \"line\": functions_map[func_signature][\"line\"]\n+                                            \"file\": str(\n+                                                functions_map[func_signature][\"file\"]\n+                                            ),\n+                                            \"line\": functions_map[func_signature][\n+                                                \"line\"\n+                                            ],\n                                         }\n                                         func2_info = {\n                                             \"function\": child.name,\n                                             \"file\": str(py_file),\n-                                            \"line\": child.lineno\n+                                            \"line\": child.lineno,\n                                         }\n-                                        \n+\n                                         # Only add to duplicates if it's legacy code, not legitimate different classes\n-                                        if not self.is_legitimate_duplicate_vs_legacy(func1_info, func2_info):\n+                                        if not self.is_legitimate_duplicate_vs_legacy(\n+                                            func1_info, func2_info\n+                                        ):\n                                             duplicates[\"duplicate_functions\"].append(\n                                                 {\n                                                     \"function\": child.name,\n                                                     \"signature\": func_signature,\n-                                                    \"file1\": str(functions_map[func_signature][\"file\"]),\n+                                                    \"file1\": str(\n+                                                        functions_map[func_signature][\n+                                                            \"file\"\n+                                                        ]\n+                                                    ),\n                                                     \"file2\": str(py_file),\n-                                                    \"line1\": functions_map[func_signature][\"line\"],\n+                                                    \"line1\": functions_map[\n+                                                        func_signature\n+                                                    ][\"line\"],\n                                                     \"line2\": child.lineno,\n                                                 }\n                                             )\n                                 else:\n                                     functions_map[func_signature] = {\n@@ -846,44 +863,51 @@\n                 \"Consider merging similar class implementations\"\n             )\n         if duplicates[\"redundant_files\"]:\n             duplicates[\"recommendations\"].append(\"Remove redundant file copies\")\n         return duplicates\n+\n     def should_skip_file(self, file_path: Path, exclude_backups: bool = False) -> bool:\n         \"\"\"Check if file should be skipped during duplicate detection\"\"\"\n-        \n+\n         # ALWAYS skip these patterns (including backup files by default)\n         skip_patterns = [\n             \"__pycache__\",\n-            \".git\", \n+            \".git\",\n             \"venv\",\n             \"env\",\n             \".pytest_cache\",\n             \"node_modules\",\n             \"dist\",\n             \"build\",\n             # BACKUP/LEGACY PATTERNS - Always skip these\n             \"backups/\",\n-            \".claude_patches/\", \n+            \".claude_patches/\",\n             \".backup\",\n             \"_backup\",\n             \"-backup\",\n             \".bak\",\n             \"-enhanced\",  # Skip old enhanced files\n             \"_enhanced\",\n             \".orig\",\n-            \".old\", \n+            \".old\",\n             \"v1.0-original/\",\n-            \"-v1\", \"-v2\", \"_v1\", \"_v2\",  # Versioned files\n-            \"_original\", \"_updated\",\n-            \"legacy/\", \"-legacy\", \"_legacy\",\n+            \"-v1\",\n+            \"-v2\",\n+            \"_v1\",\n+            \"_v2\",  # Versioned files\n+            \"_original\",\n+            \"_updated\",\n+            \"legacy/\",\n+            \"-legacy\",\n+            \"_legacy\",\n         ]\n-        \n+\n         for pattern in skip_patterns:\n             if pattern in str(file_path):\n                 return True\n-        \n+\n         return False\n \n     def is_likely_false_positive(self, func_name: str, file_path: Path) -> bool:\n         \"\"\"Detect likely false positives vs REAL connection issues\"\"\"\n \n@@ -923,19 +947,35 @@\n             \"strip\",\n             \"split\",\n             \"join\",  # string methods\n             \"append\",\n             \"extend\",\n-            \"add_argument\", \"parse_args\",  # argparse\n+            \"add_argument\",\n+            \"parse_args\",  # argparse\n             \"remove\",\n-            \"lower\", \"upper\", \"strip\", \"split\", \"join\",  # string methods\n+            \"lower\",\n+            \"upper\",\n+            \"strip\",\n+            \"split\",\n+            \"join\",  # string methods\n             \"pop\",  # list methods\n-            \"append\", \"extend\", \"remove\", \"pop\",  # list methods\n+            \"append\",\n+            \"extend\",\n+            \"remove\",\n+            \"pop\",  # list methods\n             \"get\",\n-            \"get\", \"keys\", \"values\", \"items\", \"update\",  # dict methods\n+            \"get\",\n             \"keys\",\n-            \"read\", \"write\", \"close\", \"exists\", \"mkdir\",  # file/path methods\n+            \"values\",\n+            \"items\",\n+            \"update\",  # dict methods\n+            \"keys\",\n+            \"read\",\n+            \"write\",\n+            \"close\",\n+            \"exists\",\n+            \"mkdir\",  # file/path methods\n             \"values\",\n             \"items\",\n             \"update\",  # dict methods\n             \"read\",\n             \"write\",\n@@ -974,71 +1014,90 @@\n                 new_variant = func_name + new_suffix\n                 if old_variant in content or new_variant in content:\n                     return True\n \n             # Check for common duplicate code scenarios\n-            if any(pattern in str(file_path) for pattern in [\"enhanced\", \"v2\", \"backup\", \"original\"]):\n+            if any(\n+                pattern in str(file_path)\n+                for pattern in [\"enhanced\", \"v2\", \"backup\", \"original\"]\n+            ):\n                 # In enhanced/versioned files, undefined functions might be calling old code\n                 return True\n \n         except Exception:\n             pass\n \n         return False\n \n-    def get_function_signature(self, node: ast.FunctionDef, class_name: str = None) -> str:\n+    def get_function_signature(\n+        self, node: ast.FunctionDef, class_name: str = None\n+    ) -> str:\n         \"\"\"Generate unique signature for function node\"\"\"\n         args = [arg.arg for arg in node.args.args]\n         signature = f\"{node.name}({', '.join(args)})\"\n         if class_name:\n             signature = f\"{class_name}.{signature}\"\n         return signature\n \n-    def is_legitimate_duplicate_vs_legacy(self, func1_info: dict, func2_info: dict) -> bool:\n+    def is_legitimate_duplicate_vs_legacy(\n+        self, func1_info: dict, func2_info: dict\n+    ) -> bool:\n         \"\"\"\n         Determine if detected duplicate is legitimate (different valid implementations)\n         vs legacy code that should be removed.\n-        \n+\n         Returns True if this is a legitimate duplicate (keep both)\n         Returns False if this is legacy code (one should be removed)\n         \"\"\"\n         file1 = Path(func1_info[\"file\"])\n         file2 = Path(func2_info[\"file\"])\n         func_name = func1_info[\"function\"]\n-        \n+\n         # LEGITIMATE DUPLICATES: Different classes with same method names\n         # These are NOT duplicates - they're legitimate implementations\n-        if func_name in [\"__init__\", \"__str__\", \"__repr__\", \"run\", \"execute\", \"process\"]:\n+        if func_name in [\n+            \"__init__\",\n+            \"__str__\",\n+            \"__repr__\",\n+            \"run\",\n+            \"execute\",\n+            \"process\",\n+        ]:\n             # Common method names that legitimately appear in multiple classes\n             return True\n-            \n+\n         # LEGACY CODE PATTERNS: These indicate real duplicates to remove\n         legacy_patterns = [\n             # Backup/versioned file patterns\n-            (\"backup\", \"original\"), (\"_v1\", \"_v2\"), (\"enhanced\", \"\"),\n-            (\"-old\", \"\"), (\"_original\", \"_updated\"), (\"legacy\", \"new\"),\n+            (\"backup\", \"original\"),\n+            (\"_v1\", \"_v2\"),\n+            (\"enhanced\", \"\"),\n+            (\"-old\", \"\"),\n+            (\"_original\", \"_updated\"),\n+            (\"legacy\", \"new\"),\n         ]\n-        \n+\n         for pattern1, pattern2 in legacy_patterns:\n-            if (pattern1 in str(file1) and pattern2 in str(file2)) or \\\n-               (pattern2 in str(file1) and pattern1 in str(file2)):\n+            if (pattern1 in str(file1) and pattern2 in str(file2)) or (\n+                pattern2 in str(file1) and pattern1 in str(file2)\n+            ):\n                 # One file is clearly a backup/old version\n                 return False\n-                \n+\n         # Check if files are in different logical modules/purposes\n         file1_parts = file1.parts\n         file2_parts = file2.parts\n-        \n+\n         # Different high-level modules with same function name = legitimate\n         if len(file1_parts) > 1 and len(file2_parts) > 1:\n             if file1_parts[-2] != file2_parts[-2]:  # Different parent directories\n                 return True\n-                \n+\n         # Same directory, same function name with similar signatures = likely legacy\n         if file1.parent == file2.parent and func_name not in [\"__init__\"]:\n             return False\n-            \n+\n         # Default: assume legitimate unless proven otherwise\n         return True\n \n     def get_function_signature(\n         self, node: ast.FunctionDef, class_name: str = None\n@@ -1141,14 +1200,17 @@\n             f\"\ud83d\udd0d Running {'quick' if quick_check else 'comprehensive'} Claude-integrated linting...\"\n         )\n \n         # Update protocol if available\n         if self.protocol:\n-            self.protocol.update_phase(\"linting\", {\n-                \"lint_type\": \"quick\" if quick_check else \"comprehensive\",\n-                \"started_at\": datetime.now().isoformat()\n-            })\n+            self.protocol.update_phase(\n+                \"linting\",\n+                {\n+                    \"lint_type\": \"quick\" if quick_check else \"comprehensive\",\n+                    \"started_at\": datetime.now().isoformat(),\n+                },\n+            )\n \n         lint_report = {\n             \"version\": self.current_version,\n             \"performance\": {},\n             \"branch\": self.git_branch,\n@@ -1178,22 +1240,24 @@\n             \"isort\",\n             \"mypy\",\n             \"flake8\",\n             \"pylint\",\n         ]\n-        \n+\n         for tool in quality_tools:\n             success, stdout, stderr = self.run_quality_check_with_details(tool)\n             lint_report[\"quality_issues\"][tool] = {\n                 \"passed\": success,\n                 \"stdout\": stdout,\n                 \"stderr\": stderr,\n                 \"fixes\": self.generate_tool_fixes(tool, stdout, stderr),\n             }\n-        \n+\n         lint_report[\"fix_commands\"] = self.generate_fix_commands(lint_report)\n-        lint_report[\"validation_report\"] = self.validate_lint_recommendations(lint_report)\n+        lint_report[\"validation_report\"] = self.validate_lint_recommendations(\n+            lint_report\n+        )\n \n         # Run security checks with detailed output\n         security_tools = [\"bandit\", \"safety\"]\n         for tool in security_tools:\n             success, stdout, stderr = self.run_security_check_with_details(tool)\n@@ -1201,22 +1265,26 @@\n                 \"passed\": success,\n                 \"stdout\": stdout,\n                 \"stderr\": stderr,\n                 \"fixes\": self.generate_security_fixes(tool, stdout, stderr),\n             }\n-        \n+\n         # Run duplicate detection\n         lint_report[\"duplicate_issues\"] = self.detect_duplicate_implementations()\n-        \n+\n         # Calculate total issues\n-        total_issues = sum([\n-            len(tool_data.get(\"fixes\", [])) \n-            for tool_data in lint_report[\"quality_issues\"].values()\n-        ]) + sum([\n-            len(tool_data.get(\"fixes\", [])) \n-            for tool_data in lint_report[\"security_issues\"].values()\n-        ])\n+        total_issues = sum(\n+            [\n+                len(tool_data.get(\"fixes\", []))\n+                for tool_data in lint_report[\"quality_issues\"].values()\n+            ]\n+        ) + sum(\n+            [\n+                len(tool_data.get(\"fixes\", []))\n+                for tool_data in lint_report[\"security_issues\"].values()\n+            ]\n+        )\n \n         # Run connections linting\n         lint_report[\"connection_issues\"] = self.run_connections_linter()\n \n         # Generate Claude-specific recommendations\n@@ -1261,29 +1329,32 @@\n                 \"files_per_second\": (\n                     self.files_scanned / lint_duration if lint_duration > 0 else 0\n                 ),\n             }\n \n-        # Save detailed report\n+            # Save detailed report\n             timestamp = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n         if output_dir:\n             output_dir = Path(output_dir)\n             output_dir.mkdir(parents=True, exist_ok=True)\n             timestamp = datetime.now().strftime(\"%Y%m%d-%H%M%S\")  # ISO-8601 compatible\n             report_file = output_dir / f\"claude-lint-report-{timestamp}.json\"\n-            \n+\n             if self.protocol:\n-                self.protocol.update_phase(\"linting_complete\", {\n-                    \"issues_remaining\": total_issues,\n-                    \"lint_report\": str(report_file),\n-                })\n+                self.protocol.update_phase(\n+                    \"linting_complete\",\n+                    {\n+                        \"issues_remaining\": total_issues,\n+                        \"lint_report\": str(report_file),\n+                    },\n+                )\n             with open(report_file, \"w\") as f:\n                 json.dump(lint_report, f, indent=2)\n-            \n+\n             print(f\"\ud83d\udcca Lint report saved to: {report_file}\")\n             lint_report[\"report_file\"] = str(report_file)\n-            \n+\n         # Protocol integration - update state and create tasks\n         if self.protocol:\n             self.protocol.update_phase(\n                 \"linting_complete\",\n                 {\n@@ -1296,27 +1367,31 @@\n             # Create fixing tasks for critical issues\n             critical_fixes = []\n             for tool, data in lint_report[\"quality_issues\"].items():\n                 for fix in data.get(\"fixes\", []):\n                     if fix.get(\"type\") == \"auto_fix\":\n-                        critical_fixes.append({\n-                            \"tool\": tool,\n-                            \"command\": fix.get(\"command\", \"\"),\n-                            \"description\": fix.get(\"description\", \"\"),\n-                            \"severity\": \"error\"\n-                        })\n+                        critical_fixes.append(\n+                            {\n+                                \"tool\": tool,\n+                                \"command\": fix.get(\"command\", \"\"),\n+                                \"description\": fix.get(\"description\", \"\"),\n+                                \"severity\": \"error\",\n+                            }\n+                        )\n \n             # Create tasks for the most critical fixes\n             for fix in critical_fixes[:5]:\n                 self.protocol.create_task(\n                     task_type=\"fix_quality_issue\",\n                     description=fix[\"description\"],\n                     priority=\"high\",\n-                    success_criteria={\"fix_applied\": True}\n+                    success_criteria={\"fix_applied\": True},\n                 )\n-            \n-            print(f\"\ud83d\udccb Created {len(critical_fixes[:5])} priority fixing tasks in protocol\")\n+\n+            print(\n+                f\"\ud83d\udccb Created {len(critical_fixes[:5])} priority fixing tasks in protocol\"\n+            )\n \n         return lint_report\n \n     def run_quality_check_with_details(self, tool: str) -> Tuple[bool, str, str]:\n         \"\"\"Run quality check tool with detailed output\"\"\"\n@@ -1503,11 +1578,11 @@\n                                 \"claude_prompt\": f\"Please review and fix the security issue in {result.get('filename')}:{result.get('line_number')}: {result.get('issue_text')}\",\n                             }\n                         )\n             except json.JSONDecodeError:\n                 pass\n-                \n+\n         elif tool == \"safety\":\n             try:\n                 if stdout:\n                     safety_data = json.loads(stdout)\n                     for vuln in safety_data[:3]:  # Limit to 3 vulnerabilities\n@@ -1521,11 +1596,11 @@\n                                 \"claude_prompt\": f\"Please update {vuln.get('package_name')} from {vuln.get('installed_version')} to fix vulnerability {vuln.get('vulnerability_id')}\",\n                             }\n                         )\n             except json.JSONDecodeError:\n                 pass\n-                \n+\n         return fixes\n \n     def generate_claude_recommendations(self, lint_report: Dict[str, Any]) -> List[str]:\n         \"\"\"Generate Claude-specific recommendations based on lint results\"\"\"\n         recommendations = []\n@@ -1545,13 +1620,11 @@\n         security_count = sum(\n             len(result.get(\"fixes\", []))\n             for result in lint_report[\"security_issues\"].values()\n         )\n         if security_count > 0:\n-            recommendations.append(\n-                f\"\ud83d\udd12 Address {security_count} security issues found\"\n-            )\n+            recommendations.append(f\"\ud83d\udd12 Address {security_count} security issues found\")\n \n         # Duplicate issues\n         duplicates = lint_report[\"duplicate_issues\"]\n         if duplicates[\"duplicate_functions\"]:\n             recommendations.append(\n@@ -1572,15 +1645,15 @@\n             recommendations.append(\n                 f\"\ud83d\udce6 Fix {len(connections['broken_imports'])} broken imports\"\n             )\n \n         return recommendations\n-        \n+\n     def generate_fix_commands(self, lint_report: Dict[str, Any]) -> List[str]:\n         \"\"\"Generate automated fix commands\"\"\"\n         commands = []\n-        \n+\n         # Auto-fixable quality issues\n         quality_issues = lint_report.get(\"quality_issues\", {})\n         if not lint_report[\"quality_issues\"].get(\"black\", {}).get(\"passed\", True):\n             commands.append(\"black scripts/ core/ guardrails/\")\n         if not lint_report[\"quality_issues\"].get(\"isort\", {}).get(\"passed\", True):\n@@ -1792,14 +1865,11 @@\n \n                 # Check imports\n                 for node in ast.walk(tree):\n                     if isinstance(node, ast.ImportFrom):\n                         if node.module:\n-                            module_path = self.resolve_module_path(\n-                                node.module,\n-                                py_file\n-                            )\n+                            module_path = self.resolve_module_path(node.module, py_file)\n                             if module_path and not module_path.exists():\n                                 connections_report[\"broken_imports\"].append(\n                                     {\n                                         \"file\": str(py_file),\n                                         \"line\": node.lineno,\n@@ -2195,70 +2265,96 @@\n             json.dump(report, f, indent=2)\n \n         print(f\"\ud83d\udcca Release report saved: {output_path}\")\n \n \n-def generate_json_report(keeper, session_id=None, claude_lint_report=None, duplicates=None, connections=None):\n+def generate_json_report(\n+    keeper, session_id=None, claude_lint_report=None, duplicates=None, connections=None\n+):\n     \"\"\"Generate structured JSON report for pipeline integration\"\"\"\n-    \n+\n     # Calculate total issues across all categories\n     total_issues = 0\n-    \n+\n     # Count Claude lint issues\n     if claude_lint_report:\n         total_issues += claude_lint_report.get(\"total_issues\", 0)\n-    \n+\n     # Count duplicate issues\n     if duplicates:\n         total_issues += len(duplicates.get(\"duplicate_functions\", []))\n-        total_issues += len(duplicates.get(\"competing_implementations\", [])) * 2  # Weight competing implementations higher\n-    \n+        total_issues += (\n+            len(duplicates.get(\"competing_implementations\", [])) * 2\n+        )  # Weight competing implementations higher\n+\n     # Count connection issues\n     if connections:\n         total_issues += len(connections.get(\"undefined_functions\", []))\n         total_issues += len(connections.get(\"broken_imports\", []))\n-    \n+\n     # Generate structured report\n     json_report = {\n         \"timestamp\": datetime.now(timezone.utc).isoformat(),\n         \"session_id\": session_id or f\"version-keeper-{int(time.time())}\",\n         \"version\": keeper.current_version,\n         \"branch\": keeper.git_branch,\n         \"summary\": {\n             \"total_issues\": total_issues,\n             \"fixes_applied\": 0,  # This will be updated by quality patcher\n             \"remaining_issues\": total_issues,  # Initially all issues remain\n-            \"success_rate\": 0.0 if total_issues > 0 else 100.0\n+            \"success_rate\": 0.0 if total_issues > 0 else 100.0,\n         },\n         \"details\": {\n-            \"quality_issues\": claude_lint_report.get(\"quality_issues\", {}) if claude_lint_report else {},\n-            \"security_issues\": claude_lint_report.get(\"security_issues\", {}) if claude_lint_report else {},\n+            \"quality_issues\": (\n+                claude_lint_report.get(\"quality_issues\", {})\n+                if claude_lint_report\n+                else {}\n+            ),\n+            \"security_issues\": (\n+                claude_lint_report.get(\"security_issues\", {})\n+                if claude_lint_report\n+                else {}\n+            ),\n             \"duplicate_issues\": duplicates if duplicates else {},\n-            \"connection_issues\": connections if connections else {}\n+            \"connection_issues\": connections if connections else {},\n         },\n         \"performance\": {\n-            \"duration_seconds\": claude_lint_report.get(\"performance\", {}).get(\"duration_seconds\", 0) if claude_lint_report else 0,\n-            \"files_analyzed\": claude_lint_report.get(\"files_analyzed\", 0) if claude_lint_report else 0,\n-            \"issues_per_second\": claude_lint_report.get(\"performance\", {}).get(\"issues_per_second\", 0) if claude_lint_report else 0\n+            \"duration_seconds\": (\n+                claude_lint_report.get(\"performance\", {}).get(\"duration_seconds\", 0)\n+                if claude_lint_report\n+                else 0\n+            ),\n+            \"files_analyzed\": (\n+                claude_lint_report.get(\"files_analyzed\", 0) if claude_lint_report else 0\n+            ),\n+            \"issues_per_second\": (\n+                claude_lint_report.get(\"performance\", {}).get(\"issues_per_second\", 0)\n+                if claude_lint_report\n+                else 0\n+            ),\n         },\n-        \"recommendations\": []\n+        \"recommendations\": [],\n     }\n-    \n+\n     # Add recommendations from each component\n     if claude_lint_report and claude_lint_report.get(\"claude_recommendations\"):\n-        json_report[\"recommendations\"].extend(claude_lint_report[\"claude_recommendations\"])\n-    \n+        json_report[\"recommendations\"].extend(\n+            claude_lint_report[\"claude_recommendations\"]\n+        )\n+\n     if duplicates and duplicates.get(\"recommendations\"):\n         json_report[\"recommendations\"].extend(duplicates[\"recommendations\"])\n-    \n+\n     if connections and connections.get(\"recommendations\"):\n         json_report[\"recommendations\"].extend(connections[\"recommendations\"])\n-    \n+\n     # Add priority fixes from Claude lint if available\n     if claude_lint_report and claude_lint_report.get(\"priority_fixes\"):\n-        json_report[\"priority_fixes\"] = claude_lint_report[\"priority_fixes\"][:10]  # Top 10 priority fixes\n-    \n+        json_report[\"priority_fixes\"] = claude_lint_report[\"priority_fixes\"][\n+            :10\n+        ]  # Top 10 priority fixes\n+\n     return json_report\n \n \n @click.command()\n @click.option(\n@@ -2426,21 +2522,35 @@\n \n         if detect_duplicates:\n             print(\"\\n\ud83d\udcca DUPLICATE DETECTION RESULTS\")\n             print(\"=\" * 50)\n             print(f\"\ud83d\udd04 Duplicate functions: {len(duplicates['duplicate_functions'])}\")\n-            print(f\"\u26a1 Competing implementations: {len(duplicates['competing_implementations'])}\")\n-            \n-        print(\"\ud83c\udfaf INTELLIGENT FILTERING: Focusing on real issues, excluding false positives\")\n-        \n+            print(\n+                f\"\u26a1 Competing implementations: {len(duplicates['competing_implementations'])}\"\n+            )\n+\n+        print(\n+            \"\ud83c\udfaf INTELLIGENT FILTERING: Focusing on real issues, excluding false positives\"\n+        )\n+\n         if real_issues_only:\n-            print(\"\\n\u23ed\ufe0f Skipping duplicate detection (excluded by real-issues-only filter)\")\n-            duplicates = {\"duplicate_functions\": [], \"competing_implementations\": [], \"similar_classes\": [], \"redundant_files\": [], \"recommendations\": []}\n+            print(\n+                \"\\n\u23ed\ufe0f Skipping duplicate detection (excluded by real-issues-only filter)\"\n+            )\n+            duplicates = {\n+                \"duplicate_functions\": [],\n+                \"competing_implementations\": [],\n+                \"similar_classes\": [],\n+                \"redundant_files\": [],\n+                \"recommendations\": [],\n+            }\n \n         else:\n             # Run duplicate detection normally\n-            duplicates = keeper.detect_duplicate_implementations(exclude_backups, exclude_duplicates)\n+            duplicates = keeper.detect_duplicate_implementations(\n+                exclude_backups, exclude_duplicates\n+            )\n \n             if duplicates[\"recommendations\"]:\n                 print(\"\\n\ud83d\udca1 RECOMMENDATIONS:\")\n                 for rec in duplicates[\"recommendations\"]:\n                     print(f\"  \u2022 {rec}\")\n@@ -2476,26 +2586,30 @@\n                     print(f\"  ... and {len(connections['broken_imports']) - 10} more\")\n \n         # Run connections check\n         if check_connections:\n             print(\"\\n\ud83d\udd0d Running connection analysis...\")\n-            connections = keeper.run_connections_linter(exclude_backups, real_issues_only)\n-            \n+            connections = keeper.run_connections_linter(\n+                exclude_backups, real_issues_only\n+            )\n+\n             if connections[\"recommendations\"]:\n                 print(\"\\n\ud83d\udca1 CONNECTION RECOMMENDATIONS:\")\n                 for rec in connections[\"recommendations\"]:\n                     print(f\"  \u2022 {rec}\")\n \n         # Run Claude integrated linting\n         if claude_lint:\n-            print(f\"\\n\ud83e\udd16 Running {'quick' if quick_check else 'comprehensive'} Claude-integrated linting...\")\n+            print(\n+                f\"\\n\ud83e\udd16 Running {'quick' if quick_check else 'comprehensive'} Claude-integrated linting...\"\n+            )\n             lint_report = keeper.run_claude_integrated_linting(\n                 output_dir=Path(output_dir) if output_dir else None,\n                 session_id=session_id,\n                 quick_check=quick_check,\n             )\n-            \n+\n             # Process undefined functions\n             for func in connections[\"undefined_functions\"][:10]:  # Show first 10\n                 print(f\"  \u2022 {func['function']} in {func['file']}:{func['line']}\")\n \n             print(\"\\n\ud83d\udcca CLAUDE LINT REPORT\")\n@@ -2513,19 +2627,19 @@\n                     priority_icon = (\n                         \"\ud83d\udd34\"\n                         if pfix[\"priority\"] == 1\n                         else (\"\ud83d\udfe1\" if pfix[\"priority\"] == 2 else \"\ud83d\udfe2\")\n                     )\n-                    \n+\n             # Process broken imports\n             for imp in connections[\"broken_imports\"][:10]:  # Show first 10\n                 print(f\"  \u2022 {imp['module']} in {imp['file']}:{imp['line']}\")\n \n             # Show additional imports if applicable\n-            if len(connections['broken_imports']) > 10:\n+            if len(connections[\"broken_imports\"]) > 10:\n                 print(f\"  ... and {len(connections['broken_imports']) - 10} more\")\n-                \n+\n             # Show Claude recommendations\n             if lint_report[\"claude_recommendations\"]:\n                 print(\"\\n\ud83e\udd16 CLAUDE RECOMMENDATIONS:\")\n                 for rec in lint_report[\"claude_recommendations\"]:\n                     print(f\"  \u2022 {rec}\")\n@@ -2570,24 +2684,28 @@\n             if output_format == \"json\":\n                 json_report = generate_json_report(\n                     keeper=keeper,\n                     session_id=session_id,\n                     claude_lint_report=lint_report if claude_lint else None,\n-                    duplicates=duplicates if detect_duplicates and not exclude_duplicates else None,\n-                    connections=connections if check_connections else None\n+                    duplicates=(\n+                        duplicates\n+                        if detect_duplicates and not exclude_duplicates\n+                        else None\n+                    ),\n+                    connections=connections if check_connections else None,\n                 )\n-                \n+\n                 if output_file:\n                     output_path = Path(output_file)\n                     output_path.parent.mkdir(parents=True, exist_ok=True)\n-                    with open(output_path, 'w') as f:\n+                    with open(output_path, \"w\") as f:\n                         json.dump(json_report, f, indent=2, default=str)\n                     print(f\"\\n\ud83d\udcca JSON report saved to: {output_path}\")\n                 else:\n                     print(\"\\n\ud83d\udcca JSON OUTPUT:\")\n                     print(json.dumps(json_report, indent=2, default=str))\n-                    \n+\n             print(\"\\n\u2705 Lint-only mode complete\")\n             return\n \n     # Calculate new version\n     new_version = keeper.bump_version(bump_type)\n@@ -2668,11 +2786,11 @@\n     if report[\"recommendations\"]:\n         print(\"\\n\ud83d\udca1 Recommendations:\")\n         for rec in report[\"recommendations\"]:\n             print(f\"  \u2022 {rec}\")\n \n-    # Apply changes if validation passes and not dry run  \n+    # Apply changes if validation passes and not dry run\n     if report[\"overall_status\"] == \"PASS\" and not dry_run:\n         print(f\"\\n\ud83d\ude80 Applying version update to {new_version}...\")\n \n         # Update version files\n         keeper.update_version_files(new_version)\n--- cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py\t2025-08-21 16:31:13.918708+00:00\n+++ cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py\t2025-08-21 16:40:15.994073+00:00\n@@ -159,13 +159,11 @@\n \n         if self.session_dir:\n             cmd.extend([\"--session-dir\", str(self.session_dir)])\n \n         try:\n-            subprocess.run(\n-                cmd, capture_output=True, text=True, cwd=self.repo_path\n-            )\n+            subprocess.run(cmd, capture_output=True, text=True, cwd=self.repo_path)\n \n             # Find the newly generated report\n             reports = list(output_dir.glob(\"claude-lint-report-*.json\"))\n             if reports:\n                 latest_report = max(reports, key=lambda p: p.stat().st_mtime)\n@@ -704,27 +702,27 @@\n \n REQUIRED ACTION: Review the original issue description and apply the appropriate fix.\"\"\"\n \n     def _get_fix_instruction(self, code: str, message: str, action: str) -> str:\n         \"\"\"Get specific fix instruction for linting code\"\"\"\n-        if code == 'W292':  # no newline at end of file\n+        if code == \"W292\":  # no newline at end of file\n             return \"Add a newline at the end of the file\"\n-        elif code == 'W291':  # trailing whitespace\n+        elif code == \"W291\":  # trailing whitespace\n             return \"Remove trailing whitespace from the line\"\n-        elif code == 'W293':  # blank line contains whitespace\n+        elif code == \"W293\":  # blank line contains whitespace\n             return \"Remove whitespace from the blank line\"\n-        elif code.startswith('E501'):  # line too long\n+        elif code.startswith(\"E501\"):  # line too long\n             return \"Break the long line into multiple lines (max 88 chars)\"\n-        elif code.startswith('F401'):  # unused import\n+        elif code.startswith(\"F401\"):  # unused import\n             return \"Remove the unused import statement\"\n-        elif code.startswith('E722'):  # bare except\n+        elif code.startswith(\"E722\"):  # bare except\n             return \"Specify the exception type instead of using bare 'except:'\"\n-        elif code.startswith('F541'):  # f-string missing placeholders\n+        elif code.startswith(\"F541\"):  # f-string missing placeholders\n             return \"Convert f-string to regular string or add placeholders\"\n-        elif code.startswith('E203'):  # whitespace before ':'\n+        elif code.startswith(\"E203\"):  # whitespace before ':'\n             return \"Remove whitespace before the colon\"\n-        elif code.startswith('F841'):  # local variable assigned but never used\n+        elif code.startswith(\"F841\"):  # local variable assigned but never used\n             return \"Remove the unused variable or add underscore prefix\"\n         else:\n             return f\"Fix the {code} violation: {message}\"\n \n     def validate_fix_applied(\n@@ -1650,12 +1648,13 @@\n         if not self._is_claude_cli_available():\n             print(\"   \u26a0\ufe0f  Claude CLI not available - likely running inside Claude Code\")\n             return {\n                 \"success\": False,\n                 \"claude_output\": None,\n-                \"error\": (\"Claude CLI not available - running inside \"\n-                          \"Claude Code session\"),\n+                \"error\": (\n+                    \"Claude CLI not available - running inside \" \"Claude Code session\"\n+                ),\n                 \"file_modified\": False,\n                 \"execution_time\": 0,\n             }\n \n         # Prepare Claude CLI command with best practice flags\n@@ -2331,11 +2330,11 @@\n                 if result[\"skip_legitimate\"]\n             ]\n             return {\n                 \"legitimately_skipped\": True,\n                 \"reason\": f\"All 5 validation methods confirm: \"\n-                          f\"{', '.join(reasons[:2])}...\",\n+                f\"{', '.join(reasons[:2])}...\",\n                 \"validation_details\": validation_methods,\n             }\n         else:\n             failing_methods = [\n                 name\n@@ -2343,11 +2342,11 @@\n                 if not result[\"skip_legitimate\"]\n             ]\n             return {\n                 \"legitimately_skipped\": False,\n                 \"reason\": f\"Only {confirmed_count}/5 methods confirmed skip. \"\n-                          f\"Failed: {', '.join(failing_methods)}\",\n+                f\"Failed: {', '.join(failing_methods)}\",\n                 \"validation_details\": validation_methods,\n             }\n \n     def validate_via_ast_analysis(\n         self, fix_item: Dict[str, Any], target_file: str\n@@ -2372,11 +2371,11 @@\n                     count = functions.count(func_name)\n                     if count <= 1:\n                         return {\n                             \"skip_legitimate\": True,\n                             \"reason\": f\"No duplicate {func_name} found \"\n-                                      f\"(count: {count})\",\n+                            f\"(count: {count})\",\n                         }\n \n             return {\n                 \"skip_legitimate\": False,\n                 \"reason\": \"AST analysis confirms fix needed\",\n@@ -2400,11 +2399,11 @@\n                     occurrences = content.count(pattern)\n                     if occurrences <= 1:\n                         return {\n                             \"skip_legitimate\": True,\n                             \"reason\": f\"Content inspection: only {occurrences} \"\n-                                      f\"occurrence of {func_name}\",\n+                            f\"occurrence of {func_name}\",\n                         }\n \n             return {\n                 \"skip_legitimate\": False,\n                 \"reason\": \"Content inspection confirms issue exists\",\n@@ -2558,11 +2557,11 @@\n         print(\"   2. ACTION: Use Read tool, then Edit/MultiEdit tools\")\n         print(\"   3. OBSERVATION: Record results using protocol\")\n         print(\"\u26a1 Apply fixes in priority order for optimal results\")\n \n         if self.protocol:\n-            success_rate = self.protocol.get_status_summary()['success_rate']\n+            success_rate = self.protocol.get_status_summary()[\"success_rate\"]\n             print(f\"\ud83d\udcca Protocol Status: {success_rate:.1%} success rate\")\n \n         print(\"=\" * 80)\n \n         priority_fixes = self.get_priority_fixes()\n@@ -2789,19 +2788,17 @@\n                     print(\"   \u2705 File modification confirmed\")\n                 else:\n                     print(\"   \u26a0\ufe0f  Claude CLI succeeded but file not modified\")\n             else:\n                 sync_success = False\n-                error_msg = claude_result.get('error', 'Unknown error')\n+                error_msg = claude_result.get(\"error\", \"Unknown error\")\n                 print(f\"   \u274c Claude CLI failed: {error_msg}\")\n \n                 # Special handling when running inside Claude Code\n                 if \"Claude CLI not available\" in claude_result.get(\"error\", \"\"):\n                     print(\"   \ud83d\udd17 DETECTED: Running inside Claude Code session\")\n-                    print(\n-                        \"   \ud83c\udfaf ENHANCED PROMPTING: Providing direct fix instructions\"\n-                    )\n+                    print(\"   \ud83c\udfaf ENHANCED PROMPTING: Providing direct fix instructions\")\n \n                     # Enhanced prompting for Claude Code context\n                     self._provide_enhanced_claude_code_instructions(\n                         fix_item, target_file\n                     )\n@@ -3094,17 +3091,17 @@\n \n         return \"\\\\n\".join(report_lines)\n \n     def save_session_log(self):\n         \"\"\"Save session log for tracking\"\"\"\n-        log_dir = (self.repo_path / \".claude_patches\" /\n-                   \"logs\")\n+        log_dir = self.repo_path / \".claude_patches\" / \"logs\"\n         log_dir.mkdir(parents=True, exist_ok=True)\n \n         timestamp = datetime.now().strftime(\"%Y%m%d_%H%M%S\")  # ISO-8601\n-        log_file = (self.repo_path / \"sessions\" /\n-                    f\"claude_patch_session_{timestamp}.json\")\n+        log_file = (\n+            self.repo_path / \"sessions\" / f\"claude_patch_session_{timestamp}.json\"\n+        )\n \n         session_data = {\n             \"session_info\": {\n                 \"timestamp\": timestamp,\n                 \"repo_path\": str(self.repo_path),\n@@ -3124,58 +3121,78 @@\n \n \n def generate_quality_patcher_json_report(patcher, session_results, report):\n     \"\"\"Generate structured JSON report for pipeline integration\"\"\"\n     from datetime import datetime, timezone\n-    \n+\n     # Calculate metrics\n-    total_fixes_attempted = patcher.fixes_applied + patcher.fixes_failed + patcher.fixes_skipped\n-    success_rate = (patcher.fixes_applied / total_fixes_attempted * 100) if total_fixes_attempted > 0 else 0\n-    \n+    total_fixes_attempted = (\n+        patcher.fixes_applied + patcher.fixes_failed + patcher.fixes_skipped\n+    )\n+    success_rate = (\n+        (patcher.fixes_applied / total_fixes_attempted * 100)\n+        if total_fixes_attempted > 0\n+        else 0\n+    )\n+\n     # Extract remaining issues from session results\n     remaining_issues = 0\n-    if hasattr(patcher, 'lint_report') and patcher.lint_report:\n-        remaining_issues = max(0, patcher.lint_report.get(\"total_issues\", 0) - patcher.fixes_applied)\n-    \n+    if hasattr(patcher, \"lint_report\") and patcher.lint_report:\n+        remaining_issues = max(\n+            0, patcher.lint_report.get(\"total_issues\", 0) - patcher.fixes_applied\n+        )\n+\n     json_report = {\n         \"timestamp\": datetime.now(timezone.utc).isoformat(),\n-        \"session_id\": getattr(patcher, 'session_id', f\"quality-patcher-{int(time.time())}\"),\n+        \"session_id\": getattr(\n+            patcher, \"session_id\", f\"quality-patcher-{int(time.time())}\"\n+        ),\n         \"summary\": {\n-            \"total_issues\": patcher.lint_report.get(\"total_issues\", 0) if hasattr(patcher, 'lint_report') and patcher.lint_report else 0,\n+            \"total_issues\": (\n+                patcher.lint_report.get(\"total_issues\", 0)\n+                if hasattr(patcher, \"lint_report\") and patcher.lint_report\n+                else 0\n+            ),\n             \"fixes_applied\": patcher.fixes_applied,\n             \"fixes_failed\": patcher.fixes_failed,\n             \"fixes_skipped\": patcher.fixes_skipped,\n             \"remaining_issues\": remaining_issues,\n-            \"success_rate\": round(success_rate, 2)\n+            \"success_rate\": round(success_rate, 2),\n         },\n         \"details\": {\n             \"fixes_attempted\": total_fixes_attempted,\n             \"max_fixes_limit\": patcher.max_fixes,\n             \"session_duration\": round(time.time() - patcher.start_time, 2),\n             \"performance_metrics\": patcher.performance_metrics,\n-            \"fix_timings\": patcher.fix_timings[-10:] if patcher.fix_timings else []  # Last 10 timings\n+            \"fix_timings\": (\n+                patcher.fix_timings[-10:] if patcher.fix_timings else []\n+            ),  # Last 10 timings\n         },\n         \"performance\": {\n             \"duration_seconds\": round(time.time() - patcher.start_time, 2),\n             \"fixes_per_minute\": patcher.performance_metrics.get(\"fixes_per_minute\", 0),\n             \"average_fix_time\": patcher.performance_metrics.get(\"average_fix_time\", 0),\n-            \"success_rate\": round(success_rate, 2)\n+            \"success_rate\": round(success_rate, 2),\n         },\n         \"recommendations\": [\n             f\"Applied {patcher.fixes_applied} fixes successfully\",\n-            f\"Remaining issues: {remaining_issues}\" if remaining_issues > 0 else \"All addressable issues resolved\",\n-        ]\n+            (\n+                f\"Remaining issues: {remaining_issues}\"\n+                if remaining_issues > 0\n+                else \"All addressable issues resolved\"\n+            ),\n+        ],\n     }\n-    \n+\n     # Add session results if available\n     if session_results:\n         json_report[\"session_results\"] = session_results\n-    \n+\n     # Add original lint report reference if available\n-    if hasattr(patcher, 'lint_report_path') and patcher.lint_report_path:\n+    if hasattr(patcher, \"lint_report_path\") and patcher.lint_report_path:\n         json_report[\"source_lint_report\"] = str(patcher.lint_report_path)\n-    \n+\n     return json_report\n \n \n @click.command()\n @click.option(\n@@ -3240,18 +3257,17 @@\n     default=True,\n )\n @click.option(\n     \"--debug\",\n     is_flag=True,\n-    help=\"Enable debug mode - show full Claude prompts and detailed \"\n-         \"information\",\n+    help=\"Enable debug mode - show full Claude prompts and detailed \" \"information\",\n )\n @click.option(\n     \"--background\",\n     is_flag=True,\n     help=\"Background execution mode - apply fixes silently in background \"\n-         \"with periodic status updates\",\n+    \"with periodic status updates\",\n )\n @click.option(\n     \"--monitor-lint\",\n     is_flag=True,\n     help=\"Enable background lint report freshness monitoring using Watchdog\",\n@@ -3311,11 +3327,11 @@\n     # Handle non-interactive mode\n     if non_interactive:\n         interactive = False\n         auto_mode = True\n         print(\"\ud83e\udd16 Non-interactive mode enabled - automated execution\")\n-        \n+\n     # Handle auto-apply mode (for pipeline integration)\n     if auto_apply:\n         interactive = False\n         auto_mode = True\n         print(\"\ud83d\udd04 Auto-apply mode enabled - fixing without confirmation\")\n@@ -3334,12 +3350,11 @@\n     # Handle fresh report generation\n     if fresh_report or not patcher.lint_report_path:\n         print(\"\ud83d\udd04 Generating fresh lint report...\")\n         integration_success = patcher.auto_integrate_with_version_keeper()\n \n-        if (not integration_success and\n-                not patcher.lint_report_path):\n+        if not integration_success and not patcher.lint_report_path:\n             print(\"\u274c Failed to generate or find lint report\")\n             print(\"\ud83d\udca1 Try running manually:\")\n             print(\n                 \"   f"{cross_platform.get_command(\"python\")} "scripts/version_keeper.py --comprehensive-lint \"\n                 \"--output-dir=reports/\"\n@@ -3383,13 +3398,11 @@\n         for i, fix_item in enumerate(priority_fixes[:max_fixes], 1):\n             fix = fix_item.get(\"fix\", {})\n             priority = fix_item.get(\"priority\", 4)\n             category = fix_item.get(\"category\", \"unknown\")\n \n-            priority_emoji = (\n-                \"\ud83d\udd34\" if priority == 1 else \"\ud83d\udfe1\" if priority == 2 else \"\ud83d\udfe2\"\n-            )\n+            priority_emoji = \"\ud83d\udd34\" if priority == 1 else \"\ud83d\udfe1\" if priority == 2 else \"\ud83d\udfe2\"\n \n             print(\n                 f\"{i}. {priority_emoji} [{category.upper()}] \"\n                 f\"{fix.get('description', 'No description')}\"\n             )\n@@ -3451,23 +3464,21 @@\n     report = patcher.generate_session_report(session_results)\n     print(\"\\\\n\" + report)\n \n     # Save session log\n     patcher.save_session_log()\n-    \n+\n     # Generate JSON output for pipeline integration\n     if output_format == \"json\":\n         json_report = generate_quality_patcher_json_report(\n-            patcher=patcher,\n-            session_results=session_results,\n-            report=report\n+            patcher=patcher, session_results=session_results, report=report\n         )\n-        \n+\n         if output_file:\n             output_path = Path(output_file)\n             output_path.parent.mkdir(parents=True, exist_ok=True)\n-            with open(output_path, 'w') as f:\n+            with open(output_path, \"w\") as f:\n                 json.dump(json_report, f, indent=2, default=str)\n             print(f\"\\\\n\ud83d\udcca JSON report saved to: {output_path}\")\n         else:\n             print(\"\\\\n\ud83d\udcca JSON OUTPUT:\")\n             print(json.dumps(json_report, indent=2, default=str))\n",
        "stderr": "would reformat cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py\nerror: cannot format cross_platform.get_path("home") / mcp-system-complete/scripts/claude_code_integration_loop.py: Cannot parse for target version Python 3.8: 1269:12:             if lint_result[\"report_path\"]\nwould reformat cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py\nwould reformat cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py\n\nOh no! \ud83d\udca5 \ud83d\udc94 \ud83d\udca5\n13 files would be reformatted, 5 files would be left unchanged, 1 file would fail to reformat.\n",
        "fixes": []
      },
      "isort": {
        "passed": false,
        "stdout": "--- cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py:before\t2025-08-21 11:31:13.919327\n+++ cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py:after\t2025-08-21 11:40:16.349419\n@@ -5,12 +5,13 @@\n \"\"\"\n \n import json\n+import subprocess\n+import sys\n import time\n-import sys\n from datetime import datetime, timezone\n from pathlib import Path\n+\n import click\n-import subprocess\n \n \n class MinimalVersionKeeper:\n--- cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py:before\t2025-08-21 11:31:13.918708\n+++ cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py:after\t2025-08-21 11:40:16.379468\n@@ -3126,7 +3126,7 @@\n def generate_quality_patcher_json_report(patcher, session_results, report):\n     \"\"\"Generate structured JSON report for pipeline integration\"\"\"\n     from datetime import datetime, timezone\n-    \n+\n     # Calculate metrics\n     total_fixes_attempted = patcher.fixes_applied + patcher.fixes_failed + patcher.fixes_skipped\n     success_rate = (patcher.fixes_applied / total_fixes_attempted * 100) if total_fixes_attempted > 0 else 0\n",
        "stderr": "ERROR: cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py Imports are incorrectly sorted and/or formatted.\nERROR: cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py Imports are incorrectly sorted and/or formatted.\n",
        "fixes": [
          {
            "type": "auto_fix",
            "command": "isort scripts/ core/ guardrails/",
            "description": "Sort imports with isort",
            "claude_prompt": "Please run 'isort scripts/ core/ guardrails/' to organize import statements."
          }
        ]
      },
      "mypy": {
        "passed": false,
        "stdout": "scripts/claude_code_integration_loop.py:1269: error: Invalid syntax  [syntax]\nFound 1 error in 1 file (errors prevented further checking)\n",
        "stderr": "pyproject.toml: [mypy]: python_version: Python 3.8 is not supported (must be 3.9 or higher)\n",
        "fixes": [
          {
            "type": "manual_fix",
            "file": "scripts/claude_code_integration_loop.py",
            "line": "1269",
            "error": "Invalid syntax  [syntax]",
            "claude_prompt": "Please fix the type error in scripts/claude_code_integration_loop.py:1269: Invalid syntax  [syntax]"
          }
        ]
      },
      "flake8": {
        "passed": false,
        "stdout": "scripts/claude_code_integration_loop.py:1269:14: E999 SyntaxError: invalid syntax\nscripts/claude_quality_patcher.py:3129:1: W293 blank line contains whitespace\nscripts/claude_quality_patcher.py:3131:89: E501 line too long (96 > 88 characters)\nscripts/claude_quality_patcher.py:3132:89: E501 line too long (108 > 88 characters)\nscripts/claude_quality_patcher.py:3133:1: W293 blank line contains whitespace\nscripts/claude_quality_patcher.py:3137:89: E501 line too long (101 > 88 characters)\nscripts/claude_quality_patcher.py:3138:1: W293 blank line contains whitespace\nscripts/claude_quality_patcher.py:3141:89: E501 line too long (92 > 88 characters)\nscripts/claude_quality_patcher.py:3143:89: E501 line too long (137 > 88 characters)\nscripts/claude_quality_patcher.py:3155:89: E501 line too long (102 > 88 characters)\nscripts/claude_quality_patcher.py:3165:89: E501 line too long (115 > 88 characters)\nscripts/claude_quality_patcher.py:3168:1: W293 blank line contains whitespace\nscripts/claude_quality_patcher.py:3172:1: W293 blank line contains whitespace\nscripts/claude_quality_patcher.py:3176:1: W293 blank line contains whitespace\nscripts/claude_quality_patcher.py:3316:1: W293 blank line contains whitespace\nscripts/claude_quality_patcher.py:3398:89: E501 line too long (93 > 88 characters)\nscripts/claude_quality_patcher.py:3456:1: W293 blank line contains whitespace\nscripts/claude_quality_patcher.py:3464:1: W293 blank line contains whitespace\nscripts/version_keeper.py:25:5: F401 'claude_agent_protocol.TaskStatus' imported but unused\nscripts/version_keeper.py:25:5: F401 'claude_agent_protocol.TaskType' imported but unused\nscripts/version_keeper.py:51:23: F541 f-string is missing placeholders\nscripts/version_keeper.py:95:69: F821 undefined name 'new_version'\nscripts/version_keeper.py:254:21: F541 f-string is missing placeholders\nscripts/version_keeper.py:258:21: F541 f-string is missing placeholders\nscripts/version_keeper.py:268:21: F541 f-string is missing placeholders\nscripts/version_keeper.py:300:17: E131 continuation line unaligned for hanging indent\nscripts/version_keeper.py:303:21: F541 f-string is missing placeholders\nscripts/version_keeper.py:304:17: E122 continuation line missing indentation or outdented\nscripts/version_keeper.py:515:89: E501 line too long (91 > 88 characters)\nscripts/version_keeper.py:525:5: E301 expected 1 blank line, found 0\nscripts/version_keeper.py:739:89: E501 line too long (111 > 88 characters)\nscripts/version_keeper.py:741:89: E501 line too long (98 > 88 characters)\nscripts/version_keeper.py:742:89: E501 line too long (96 > 88 characters)\nscripts/version_keeper.py:745:89: E501 line too long (95 > 88 characters)\nscripts/version_keeper.py:746:89: E501 line too long (89 > 88 characters)\nscripts/version_keeper.py:753:1: W293 blank line contains whitespace\nscripts/version_keeper.py:754:89: E501 line too long (118 > 88 characters)\nscripts/version_keeper.py:755:89: E501 line too long (110 > 88 characters)\nscripts/version_keeper.py:760:89: E501 line too long (104 > 88 characters)\nscripts/version_keeper.py:762:89: E501 line too long (99 > 88 characters)\nscripts/version_keeper.py:851:5: E301 expected 1 blank line, found 0\nscripts/version_keeper.py:853:1: W293 blank line contains whitespace\nscripts/version_keeper.py:857:20: W291 trailing whitespace\nscripts/version_keeper.py:866:32: W291 trailing whitespace\nscripts/version_keeper.py:874:20: W291 trailing whitespace\nscripts/version_keeper.py:880:1: W293 blank line contains whitespace\nscripts/version_keeper.py:884:1: W293 blank line contains whitespace\nscripts/version_keeper.py:979:89: E501 line too long (102 > 88 characters)\nscripts/version_keeper.py:980:89: E501 line too long (92 > 88 characters)\nscripts/version_keeper.py:988:89: E501 line too long (91 > 88 characters)\nscripts/version_keeper.py:996:89: E501 line too long (92 > 88 characters)\nscripts/version_keeper.py:1000:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1007:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1010:89: E501 line too long (89 > 88 characters)\nscripts/version_keeper.py:1013:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1020:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1026:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1030:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1035:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1039:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1043:5: F811 redefinition of unused 'get_function_signature' from line 988\nscripts/version_keeper.py:1069:89: E501 line too long (89 > 88 characters)\nscripts/version_keeper.py:1128:89: E501 line too long (111 > 88 characters)\nscripts/version_keeper.py:1141:89: E501 line too long (99 > 88 characters)\nscripts/version_keeper.py:1153:13: F601 dictionary key 'performance' repeated with different values\nscripts/version_keeper.py:1172:13: F601 dictionary key 'performance' repeated with different values\nscripts/version_keeper.py:1183:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1192:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1194:89: E501 line too long (90 > 88 characters)\nscripts/version_keeper.py:1206:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1209:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1212:44: W291 trailing whitespace\nscripts/version_keeper.py:1215:44: W291 trailing whitespace\nscripts/version_keeper.py:1273:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1281:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1284:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1316:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1317:89: E501 line too long (91 > 88 characters)\nscripts/version_keeper.py:1412:89: E501 line too long (143 > 88 characters)\nscripts/version_keeper.py:1423:89: E501 line too long (120 > 88 characters)\nscripts/version_keeper.py:1447:89: E501 line too long (113 > 88 characters)\nscripts/version_keeper.py:1473:89: E501 line too long (127 > 88 characters)\nscripts/version_keeper.py:1503:89: E501 line too long (177 > 88 characters)\nscripts/version_keeper.py:1508:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1521:89: E501 line too long (182 > 88 characters)\nscripts/version_keeper.py:1526:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1562:89: E501 line too long (105 > 88 characters)\nscripts/version_keeper.py:1569:89: E501 line too long (91 > 88 characters)\nscripts/version_keeper.py:1577:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1581:1: W293 blank line contains whitespace\nscripts/version_keeper.py:1583:9: F841 local variable 'quality_issues' is assigned to but never used\nscripts/version_keeper.py:1614:89: E501 line too long (104 > 88 characters)\nscripts/version_keeper.py:1615:89: E501 line too long (190 > 88 characters)\nscripts/version_keeper.py:1629:89: E501 line too long (122 > 88 characters)\nscripts/version_keeper.py:1630:89: E501 line too long (206 > 88 characters)\nscripts/version_keeper.py:1642:89: E501 line too long (107 > 88 characters)\nscripts/version_keeper.py:1643:89: E501 line too long (213 > 88 characters)\nscripts/version_keeper.py:1823:89: E501 line too long (96 > 88 characters)\nscripts/version_keeper.py:1831:89: E501 line too long (104 > 88 characters)\nscripts/version_keeper.py:1926:89: E501 line too long (102 > 88 characters)\nscripts/version_keeper.py:2052:89: E501 line too long (112 > 88 characters)\nscripts/version_keeper.py:2077:89: E501 line too long (110 > 88 characters)\nscripts/version_keeper.py:2200:89: E501 line too long (110 > 88 characters)\nscripts/version_keeper.py:2202:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2205:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2209:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2213:89: E501 line too long (123 > 88 characters)\nscripts/version_keeper.py:2214:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2219:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2233:89: E501 line too long (105 > 88 characters)\nscripts/version_keeper.py:2234:89: E501 line too long (107 > 88 characters)\nscripts/version_keeper.py:2239:89: E501 line too long (130 > 88 characters)\nscripts/version_keeper.py:2240:89: E501 line too long (103 > 88 characters)\nscripts/version_keeper.py:2241:89: E501 line too long (131 > 88 characters)\nscripts/version_keeper.py:2245:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2248:89: E501 line too long (91 > 88 characters)\nscripts/version_keeper.py:2249:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2252:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2255:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2258:89: E501 line too long (106 > 88 characters)\nscripts/version_keeper.py:2259:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2403:89: E501 line too long (89 > 88 characters)\nscripts/version_keeper.py:2417:89: E501 line too long (89 > 88 characters)\nscripts/version_keeper.py:2431:89: E501 line too long (97 > 88 characters)\nscripts/version_keeper.py:2432:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2433:89: E501 line too long (92 > 88 characters)\nscripts/version_keeper.py:2434:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2436:89: E501 line too long (92 > 88 characters)\nscripts/version_keeper.py:2437:89: E501 line too long (154 > 88 characters)\nscripts/version_keeper.py:2441:89: E501 line too long (101 > 88 characters)\nscripts/version_keeper.py:2464:89: E501 line too long (99 > 88 characters)\nscripts/version_keeper.py:2481:89: E501 line too long (90 > 88 characters)\nscripts/version_keeper.py:2482:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2490:89: E501 line too long (108 > 88 characters)\nscripts/version_keeper.py:2496:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2513:21: F841 local variable 'priority_icon' is assigned to but never used\nscripts/version_keeper.py:2518:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2526:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2543:89: E501 line too long (91 > 88 characters)\nscripts/version_keeper.py:2554:89: E501 line too long (91 > 88 characters)\nscripts/version_keeper.py:2575:89: E501 line too long (100 > 88 characters)\nscripts/version_keeper.py:2578:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2588:1: W293 blank line contains whitespace\nscripts/version_keeper.py:2673:57: W291 trailing whitespace\nscripts/version_keeper.py:2695:89: E501 line too long (95 > 88 characters)\nscripts/version_keeper.py:2698:89: E501 line too long (92 > 88 characters)\nscripts/version_keeper_1.py:1447:25: E122 continuation line missing indentation or outdented\nscripts/version_keeper_working.py:18:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:22:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:23:89: E501 line too long (95 > 88 characters)\nscripts/version_keeper_working.py:25:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:28:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:32:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:36:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:40:50: W291 trailing whitespace\nscripts/version_keeper_working.py:41:37: W291 trailing whitespace\nscripts/version_keeper_working.py:42:27: W291 trailing whitespace\nscripts/version_keeper_working.py:51:46: W291 trailing whitespace\nscripts/version_keeper_working.py:63:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:93:89: E501 line too long (97 > 88 characters)\nscripts/version_keeper_working.py:94:89: E501 line too long (110 > 88 characters)\nscripts/version_keeper_working.py:97:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:111:19: F541 f-string is missing placeholders\nscripts/version_keeper_working.py:116:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:239:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:242:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:244:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:247:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:251:41: W291 trailing whitespace\nscripts/version_keeper_working.py:254:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:262:1: W293 blank line contains whitespace\nscripts/version_keeper_working.py:269:11: W292 no newline at end of file\n",
        "stderr": "",
        "fixes": [
          {
            "type": "manual_fix",
            "file": "scripts/claude_code_integration_loop.py",
            "line": "1269",
            "column": "14",
            "code": "E999",
            "message": "SyntaxError: invalid syntax",
            "claude_prompt": "Please fix the linting issue in scripts/claude_code_integration_loop.py:1269:14: E999 SyntaxError: invalid syntax"
          },
          {
            "type": "manual_fix",
            "file": "scripts/claude_quality_patcher.py",
            "line": "3129",
            "column": "1",
            "code": "W293",
            "message": "blank line contains whitespace",
            "claude_prompt": "Please fix the linting issue in scripts/claude_quality_patcher.py:3129:1: W293 blank line contains whitespace"
          },
          {
            "type": "manual_fix",
            "file": "scripts/claude_quality_patcher.py",
            "line": "3131",
            "column": "89",
            "code": "E501",
            "message": "line too long (96 > 88 characters)",
            "claude_prompt": "Please fix the linting issue in scripts/claude_quality_patcher.py:3131:89: E501 line too long (96 > 88 characters)"
          },
          {
            "type": "manual_fix",
            "file": "scripts/claude_quality_patcher.py",
            "line": "3132",
            "column": "89",
            "code": "E501",
            "message": "line too long (108 > 88 characters)",
            "claude_prompt": "Please fix the linting issue in scripts/claude_quality_patcher.py:3132:89: E501 line too long (108 > 88 characters)"
          },
          {
            "type": "manual_fix",
            "file": "scripts/claude_quality_patcher.py",
            "line": "3133",
            "column": "1",
            "code": "W293",
            "message": "blank line contains whitespace",
            "claude_prompt": "Please fix the linting issue in scripts/claude_quality_patcher.py:3133:1: W293 blank line contains whitespace"
          }
        ]
      },
      "pylint": {
        "passed": false,
        "stdout": "************* Module scripts.claude_code_integration_loop\nscripts/claude_code_integration_loop.py:1269:13: E0001: Parsing failed: 'invalid syntax (scripts.claude_code_integration_loop, line 1269)' (syntax-error)\n************* Module scripts.claude_oversight_loop\nscripts/claude_oversight_loop.py:11:0: E0001: Cannot import 'claude_code_integration_loop' due to 'invalid syntax (claude_code_integration_loop, line 1269)' (syntax-error)\nscripts/claude_oversight_loop.py:14:0: R0915: Too many statements (67/50) (too-many-statements)\nscripts/claude_oversight_loop.py:160:4: W0212: Access to a protected member _publish_pipeline of a client class (protected-access)\nscripts/claude_oversight_loop.py:239:11: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_oversight_loop.py:109:0: R0912: Too many branches (14/12) (too-many-branches)\nscripts/claude_oversight_loop.py:109:0: R0915: Too many statements (78/50) (too-many-statements)\nscripts/claude_oversight_loop.py:246:4: E1120: No value for argument 'max_cycles' in function call (no-value-for-parameter)\nscripts/claude_oversight_loop.py:246:4: E1120: No value for argument 'target_issues' in function call (no-value-for-parameter)\nscripts/claude_oversight_loop.py:246:4: E1120: No value for argument 'enable_pipeline' in function call (no-value-for-parameter)\nscripts/claude_oversight_loop.py:246:4: E1120: No value for argument 'non_interactive' in function call (no-value-for-parameter)\n************* Module scripts.version_keeper_working\nscripts/version_keeper_working.py:18:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:22:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:25:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:28:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:32:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:36:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:40:49: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:41:36: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:42:26: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:63:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:94:0: C0301: Line too long (110/100) (line-too-long)\nscripts/version_keeper_working.py:97:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:116:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:239:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:242:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:244:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:247:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:251:40: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:254:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:262:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper_working.py:269:0: C0304: Final newline missing (missing-final-newline)\nscripts/version_keeper_working.py:39:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper_working.py:103:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_working.py:111:18: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)\nscripts/version_keeper_working.py:16:0: R0903: Too few public methods (1/2) (too-few-public-methods)\nscripts/version_keeper_working.py:217:0: R0913: Too many arguments (19/5) (too-many-arguments)\nscripts/version_keeper_working.py:217:0: R0914: Too many local variables (21/15) (too-many-locals)\nscripts/version_keeper_working.py:218:4: W0613: Unused argument 'bump_type' (unused-argument)\nscripts/version_keeper_working.py:219:4: W0613: Unused argument 'base_branch' (unused-argument)\nscripts/version_keeper_working.py:220:4: W0613: Unused argument 'skip_tests' (unused-argument)\nscripts/version_keeper_working.py:221:4: W0613: Unused argument 'skip_build' (unused-argument)\nscripts/version_keeper_working.py:222:4: W0613: Unused argument 'dry_run' (unused-argument)\nscripts/version_keeper_working.py:223:4: W0613: Unused argument 'output_dir' (unused-argument)\nscripts/version_keeper_working.py:224:4: W0613: Unused argument 'claude_lint' (unused-argument)\nscripts/version_keeper_working.py:225:4: W0613: Unused argument 'detect_duplicates' (unused-argument)\nscripts/version_keeper_working.py:226:4: W0613: Unused argument 'check_connections' (unused-argument)\nscripts/version_keeper_working.py:229:4: W0613: Unused argument 'session_id' (unused-argument)\nscripts/version_keeper_working.py:231:4: W0613: Unused argument 'quick_check' (unused-argument)\nscripts/version_keeper_working.py:232:4: W0613: Unused argument 'exclude_backups' (unused-argument)\nscripts/version_keeper_working.py:233:4: W0613: Unused argument 'exclude_duplicates' (unused-argument)\nscripts/version_keeper_working.py:234:4: W0613: Unused argument 'real_issues_only' (unused-argument)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'bump_type' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'base_branch' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'skip_tests' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'skip_build' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'dry_run' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'output_dir' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'claude_lint' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'detect_duplicates' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'check_connections' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'lint_only' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'comprehensive_lint' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'session_id' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'session_dir' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'quick_check' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'exclude_backups' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'exclude_duplicates' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'real_issues_only' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'output_format' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:269:4: E1120: No value for argument 'output_file' in function call (no-value-for-parameter)\nscripts/version_keeper_working.py:13:0: C0411: standard import \"subprocess\" should be placed before third party import \"click\" (wrong-import-order)\n************* Module scripts.version_keeper\nscripts/version_keeper.py:739:0: C0301: Line too long (111/100) (line-too-long)\nscripts/version_keeper.py:753:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:754:0: C0301: Line too long (118/100) (line-too-long)\nscripts/version_keeper.py:755:0: C0301: Line too long (110/100) (line-too-long)\nscripts/version_keeper.py:760:0: C0301: Line too long (104/100) (line-too-long)\nscripts/version_keeper.py:853:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:880:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:884:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:979:0: C0301: Line too long (102/100) (line-too-long)\nscripts/version_keeper.py:1007:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1013:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1020:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1026:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1030:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1035:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1039:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1128:0: C0301: Line too long (111/100) (line-too-long)\nscripts/version_keeper.py:1183:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1192:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1206:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1209:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1212:43: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1215:43: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1273:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1281:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1284:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1316:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1412:0: C0301: Line too long (143/100) (line-too-long)\nscripts/version_keeper.py:1423:0: C0301: Line too long (120/100) (line-too-long)\nscripts/version_keeper.py:1447:0: C0301: Line too long (113/100) (line-too-long)\nscripts/version_keeper.py:1473:0: C0301: Line too long (127/100) (line-too-long)\nscripts/version_keeper.py:1503:0: C0301: Line too long (177/100) (line-too-long)\nscripts/version_keeper.py:1508:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1521:0: C0301: Line too long (182/100) (line-too-long)\nscripts/version_keeper.py:1526:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1562:0: C0301: Line too long (105/100) (line-too-long)\nscripts/version_keeper.py:1577:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1581:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1614:0: C0301: Line too long (104/100) (line-too-long)\nscripts/version_keeper.py:1615:0: C0301: Line too long (190/100) (line-too-long)\nscripts/version_keeper.py:1629:0: C0301: Line too long (122/100) (line-too-long)\nscripts/version_keeper.py:1630:0: C0301: Line too long (206/100) (line-too-long)\nscripts/version_keeper.py:1642:0: C0301: Line too long (107/100) (line-too-long)\nscripts/version_keeper.py:1643:0: C0301: Line too long (213/100) (line-too-long)\nscripts/version_keeper.py:1831:0: C0301: Line too long (104/100) (line-too-long)\nscripts/version_keeper.py:1926:0: C0301: Line too long (102/100) (line-too-long)\nscripts/version_keeper.py:2052:0: C0301: Line too long (112/100) (line-too-long)\nscripts/version_keeper.py:2077:0: C0301: Line too long (110/100) (line-too-long)\nscripts/version_keeper.py:2200:0: C0301: Line too long (110/100) (line-too-long)\nscripts/version_keeper.py:2202:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2205:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2209:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2213:0: C0301: Line too long (123/100) (line-too-long)\nscripts/version_keeper.py:2214:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2219:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2233:0: C0301: Line too long (105/100) (line-too-long)\nscripts/version_keeper.py:2234:0: C0301: Line too long (107/100) (line-too-long)\nscripts/version_keeper.py:2239:0: C0301: Line too long (130/100) (line-too-long)\nscripts/version_keeper.py:2240:0: C0301: Line too long (103/100) (line-too-long)\nscripts/version_keeper.py:2241:0: C0301: Line too long (131/100) (line-too-long)\nscripts/version_keeper.py:2245:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2249:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2252:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2255:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2258:0: C0301: Line too long (106/100) (line-too-long)\nscripts/version_keeper.py:2259:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2432:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2434:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2437:0: C0301: Line too long (154/100) (line-too-long)\nscripts/version_keeper.py:2441:0: C0301: Line too long (101/100) (line-too-long)\nscripts/version_keeper.py:2482:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2490:0: C0301: Line too long (108/100) (line-too-long)\nscripts/version_keeper.py:2496:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2518:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2526:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2578:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2588:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:2673:56: C0303: Trailing whitespace (trailing-whitespace)\nscripts/version_keeper.py:1:0: C0302: Too many lines in module (2711/1000) (too-many-lines)\nscripts/version_keeper.py:32:0: C0115: Missing class docstring (missing-class-docstring)\nscripts/version_keeper.py:32:0: R0902: Too many instance attributes (12/7) (too-many-instance-attributes)\nscripts/version_keeper.py:51:22: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)\nscripts/version_keeper.py:61:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:76:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper.py:95:12: W0104: Statement seems to have no effect (pointless-statement)\nscripts/version_keeper.py:111:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:120:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:186:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:141:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:182:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:254:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)\nscripts/version_keeper.py:258:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)\nscripts/version_keeper.py:268:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)\nscripts/version_keeper.py:298:34: E1121: Too many positional arguments for method call (too-many-function-args)\nscripts/version_keeper.py:303:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)\nscripts/version_keeper.py:390:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper.py:523:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:472:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper.py:570:12: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper.py:586:25: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper.py:596:16: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\nscripts/version_keeper.py:615:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:639:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:666:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:659:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper.py:683:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:672:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper.py:827:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:741:43: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:750:56: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:761:65: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:768:48: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:731:20: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/version_keeper.py:781:49: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:788:40: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:797:35: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:807:53: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:814:40: W0640: Cell variable py_file defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:821:24: W0640: Cell variable walk_with_class_context defined in loop (cell-var-from-loop)\nscripts/version_keeper.py:729:16: R0912: Too many branches (14/12) (too-many-branches)\nscripts/version_keeper.py:686:4: R0915: Too many statements (53/50) (too-many-statements)\nscripts/version_keeper.py:687:45: W0613: Unused argument 'exclude_duplicates' (unused-argument)\nscripts/version_keeper.py:851:48: W0613: Unused argument 'exclude_backups' (unused-argument)\nscripts/version_keeper.py:913:12: W0612: Unused variable 'obj_name' (unused-variable)\nscripts/version_keeper.py:983:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:1043:4: E0102: method already defined line 988 (function-redefined)\nscripts/version_keeper.py:1052:8: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\nscripts/version_keeper.py:1134:4: R0914: Too many local variables (19/15) (too-many-locals)\nscripts/version_keeper.py:1151:22: W0109: Duplicate key 'performance' in dictionary (duplicate-key)\nscripts/version_keeper.py:1211:23: R1728: Consider using a generator instead 'sum(len(tool_data.get('fixes', [])) for tool_data in lint_report['quality_issues'].values())' (consider-using-generator)\nscripts/version_keeper.py:1214:13: R1728: Consider using a generator instead 'sum(len(tool_data.get('fixes', [])) for tool_data in lint_report['security_issues'].values())' (consider-using-generator)\nscripts/version_keeper.py:1239:23: R1728: Consider using a generator instead 'sum(len(tool_data.get('fixes', [])) for tool_data in lint_report['quality_issues'].values())' (consider-using-generator)\nscripts/version_keeper.py:1244:12: R1728: Consider using a generator instead 'sum(len(tool_data.get('fixes', [])) for tool_data in lint_report['security_issues'].values())' (consider-using-generator)\nscripts/version_keeper.py:1279:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:1310:16: E1123: Unexpected keyword argument 'description' in method call (unexpected-keyword-arg)\nscripts/version_keeper.py:1310:16: E1120: No value for argument 'context' in method call (no-value-for-parameter)\nscripts/version_keeper.py:1483:8: W0613: Unused argument 'stderr' (unused-argument)\nscripts/version_keeper.py:1583:8: W0612: Unused variable 'quality_issues' (unused-variable)\nscripts/version_keeper.py:1595:12: W0612: Unused variable 'tool' (unused-variable)\nscripts/version_keeper.py:1664:4: R0914: Too many local variables (21/15) (too-many-locals)\nscripts/version_keeper.py:1725:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:1691:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/version_keeper.py:1691:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/version_keeper.py:1811:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:1735:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)\nscripts/version_keeper.py:1735:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)\nscripts/version_keeper.py:1735:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/version_keeper.py:1664:4: R0912: Too many branches (30/12) (too-many-branches)\nscripts/version_keeper.py:1664:4: R0915: Too many statements (55/50) (too-many-statements)\nscripts/version_keeper.py:1922:8: W0613: Unused argument 'function_registry' (unused-argument)\nscripts/version_keeper.py:2003:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:1985:16: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/version_keeper.py:1998:16: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/version_keeper.py:1954:4: R0912: Too many branches (13/12) (too-many-branches)\nscripts/version_keeper.py:2089:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:2123:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:2120:23: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper.py:2194:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:32:0: R0904: Too many public methods (41/20) (too-many-public-methods)\nscripts/version_keeper.py:2360:0: R0913: Too many arguments (19/5) (too-many-arguments)\nscripts/version_keeper.py:2360:0: R0914: Too many local variables (47/15) (too-many-locals)\nscripts/version_keeper.py:2557:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:2582:25: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper.py:2360:0: R0912: Too many branches (55/12) (too-many-branches)\nscripts/version_keeper.py:2360:0: R0915: Too many statements (165/50) (too-many-statements)\nscripts/version_keeper.py:2509:20: W0612: Unused variable 'i' (unused-variable)\nscripts/version_keeper.py:2513:20: W0612: Unused variable 'priority_icon' (unused-variable)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'bump_type' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'base_branch' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'skip_tests' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'skip_build' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'dry_run' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'output_dir' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'claude_lint' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'detect_duplicates' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'check_connections' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'lint_only' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'comprehensive_lint' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'session_id' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'session_dir' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'quick_check' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'exclude_backups' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'exclude_duplicates' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'real_issues_only' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'output_format' in function call (no-value-for-parameter)\nscripts/version_keeper.py:2711:4: E1120: No value for argument 'output_file' in function call (no-value-for-parameter)\nscripts/version_keeper.py:25:4: W0611: Unused TaskStatus imported from claude_agent_protocol (unused-import)\nscripts/version_keeper.py:25:4: W0611: Unused TaskType imported from claude_agent_protocol (unused-import)\n************* Module scripts.claude_quality_patcher\nscripts/claude_quality_patcher.py:3129:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:3132:0: C0301: Line too long (108/100) (line-too-long)\nscripts/claude_quality_patcher.py:3133:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:3137:0: C0301: Line too long (101/100) (line-too-long)\nscripts/claude_quality_patcher.py:3138:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:3143:0: C0301: Line too long (137/100) (line-too-long)\nscripts/claude_quality_patcher.py:3155:0: C0301: Line too long (102/100) (line-too-long)\nscripts/claude_quality_patcher.py:3165:0: C0301: Line too long (115/100) (line-too-long)\nscripts/claude_quality_patcher.py:3168:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:3172:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:3176:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:3316:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:3456:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:3464:0: C0303: Trailing whitespace (trailing-whitespace)\nscripts/claude_quality_patcher.py:1:0: C0302: Too many lines in module (3479/1000) (too-many-lines)\nscripts/claude_quality_patcher.py:31:0: C0115: Missing class docstring (missing-class-docstring)\nscripts/claude_quality_patcher.py:31:0: R0902: Too many instance attributes (17/7) (too-many-instance-attributes)\nscripts/claude_quality_patcher.py:32:4: R0913: Too many arguments (8/5) (too-many-arguments)\nscripts/claude_quality_patcher.py:85:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:108:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:103:12: C0415: Import outside toplevel (version_keeper.MCPVersionKeeper) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:178:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:164:12: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/claude_quality_patcher.py:170:12: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\nscripts/claude_quality_patcher.py:228:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:190:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:185:8: W0613: Unused argument 'current_version' (unused-argument)\nscripts/claude_quality_patcher.py:186:8: W0613: Unused argument 'current_branch' (unused-argument)\nscripts/claude_quality_patcher.py:317:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:289:25: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/claude_quality_patcher.py:309:29: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:379:12: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/claude_quality_patcher.py:477:4: R0914: Too many local variables (23/15) (too-many-locals)\nscripts/claude_quality_patcher.py:491:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:517:23: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:502:25: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:477:4: R0912: Too many branches (13/12) (too-many-branches)\nscripts/claude_quality_patcher.py:560:8: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/claude_quality_patcher.py:636:8: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/claude_quality_patcher.py:674:12: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\nscripts/claude_quality_patcher.py:627:4: R0911: Too many return statements (7/6) (too-many-return-statements)\nscripts/claude_quality_patcher.py:709:8: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/claude_quality_patcher.py:707:4: R0911: Too many return statements (10/6) (too-many-return-statements)\nscripts/claude_quality_patcher.py:707:60: W0613: Unused argument 'action' (unused-argument)\nscripts/claude_quality_patcher.py:759:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:747:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:774:25: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/claude_quality_patcher.py:809:4: R0914: Too many local variables (24/15) (too-many-locals)\nscripts/claude_quality_patcher.py:818:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:813:12: C0415: Import outside toplevel (version_keeper.MCPVersionKeeper) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:913:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:901:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:919:8: C0415: Import outside toplevel (hashlib) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:924:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:927:4: R0914: Too many local variables (20/15) (too-many-locals)\nscripts/claude_quality_patcher.py:1086:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:940:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:943:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:938:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/claude_quality_patcher.py:927:4: R0912: Too many branches (18/12) (too-many-branches)\nscripts/claude_quality_patcher.py:1226:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1214:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:1273:8: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/claude_quality_patcher.py:1230:4: R0911: Too many return statements (8/6) (too-many-return-statements)\nscripts/claude_quality_patcher.py:1296:4: R0914: Too many local variables (17/15) (too-many-locals)\nscripts/claude_quality_patcher.py:1314:8: W0621: Redefining name 'os' from outer scope (line 10) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1316:8: W0621: Redefining name 'time' from outer scope (line 15) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1317:8: W0621: Redefining name 'Path' from outer scope (line 17) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1314:8: W0404: Reimport 'os' (imported line 10) (reimported)\nscripts/claude_quality_patcher.py:1314:8: C0415: Import outside toplevel (os) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1315:8: C0415: Import outside toplevel (threading) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1316:8: W0404: Reimport 'time' (imported line 15) (reimported)\nscripts/claude_quality_patcher.py:1316:8: C0415: Import outside toplevel (time) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1317:8: W0404: Reimport 'Path' (imported line 17) (reimported)\nscripts/claude_quality_patcher.py:1317:8: C0415: Import outside toplevel (pathlib.Path) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1374:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1325:12: C0415: Import outside toplevel (watchdog.events.FileSystemEventHandler) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1326:12: C0415: Import outside toplevel (watchdog.observers.Observer) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1328:12: C0115: Missing class docstring (missing-class-docstring)\nscripts/claude_quality_patcher.py:1352:16: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\nscripts/claude_quality_patcher.py:1297:32: W0613: Unused argument 'backup_path' (unused-argument)\nscripts/claude_quality_patcher.py:1383:8: W0621: Redefining name 'os' from outer scope (line 10) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1383:8: W0404: Reimport 'os' (imported line 10) (reimported)\nscripts/claude_quality_patcher.py:1383:8: C0415: Import outside toplevel (os) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1392:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1419:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1426:4: R0914: Too many local variables (20/15) (too-many-locals)\nscripts/claude_quality_patcher.py:1444:8: W0621: Redefining name 'time' from outer scope (line 15) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1445:8: W0621: Redefining name 'Path' from outer scope (line 17) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1442:8: C0415: Import outside toplevel (glob) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1443:8: C0415: Import outside toplevel (threading) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1444:8: W0404: Reimport 'time' (imported line 15) (reimported)\nscripts/claude_quality_patcher.py:1444:8: C0415: Import outside toplevel (time) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1445:8: W0404: Reimport 'Path' (imported line 17) (reimported)\nscripts/claude_quality_patcher.py:1445:8: C0415: Import outside toplevel (pathlib.Path) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1550:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1472:12: C0415: Import outside toplevel (watchdog.events.FileSystemEventHandler) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1473:12: C0415: Import outside toplevel (watchdog.observers.Observer) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1475:12: C0115: Missing class docstring (missing-class-docstring)\nscripts/claude_quality_patcher.py:1523:23: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1534:16: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\nscripts/claude_quality_patcher.py:1426:4: R0915: Too many statements (54/50) (too-many-statements)\nscripts/claude_quality_patcher.py:1554:4: R0914: Too many local variables (17/15) (too-many-locals)\nscripts/claude_quality_patcher.py:1559:8: W0621: Redefining name 'time' from outer scope (line 15) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1558:8: C0415: Import outside toplevel (glob) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1559:8: W0404: Reimport 'time' (imported line 15) (reimported)\nscripts/claude_quality_patcher.py:1559:8: C0415: Import outside toplevel (time) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1571:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1608:23: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1620:4: R0914: Too many local variables (16/15) (too-many-locals)\nscripts/claude_quality_patcher.py:1637:8: W0621: Redefining name 'json' from outer scope (line 9) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1638:8: W0621: Redefining name 'subprocess' from outer scope (line 13) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1639:8: W0621: Redefining name 'Path' from outer scope (line 17) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1637:8: W0404: Reimport 'json' (imported line 9) (reimported)\nscripts/claude_quality_patcher.py:1637:8: C0415: Import outside toplevel (json) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1638:8: W0404: Reimport 'subprocess' (imported line 13) (reimported)\nscripts/claude_quality_patcher.py:1638:8: C0415: Import outside toplevel (subprocess) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1639:8: W0404: Reimport 'Path' (imported line 17) (reimported)\nscripts/claude_quality_patcher.py:1639:8: C0415: Import outside toplevel (pathlib.Path) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1737:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1689:22: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/claude_quality_patcher.py:1797:8: W0621: Redefining name 'shutil' from outer scope (line 12) (redefined-outer-name)\nscripts/claude_quality_patcher.py:1797:8: W0404: Reimport 'shutil' (imported line 12) (reimported)\nscripts/claude_quality_patcher.py:1797:8: C0415: Import outside toplevel (shutil) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1827:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1818:12: C0415: Import outside toplevel (tempfile) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:1911:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1889:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:1892:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:1915:4: R0914: Too many local variables (17/15) (too-many-locals)\nscripts/claude_quality_patcher.py:1999:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:1934:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:1937:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:2045:12: W0621: Redefining name 'Path' from outer scope (line 17) (redefined-outer-name)\nscripts/claude_quality_patcher.py:2047:12: W0621: Redefining name 'get_protocol' from outer scope (line 24) (redefined-outer-name)\nscripts/claude_quality_patcher.py:2099:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2045:12: W0404: Reimport 'Path' (imported line 17) (reimported)\nscripts/claude_quality_patcher.py:2045:12: C0415: Import outside toplevel (pathlib.Path) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:2047:12: C0415: Import outside toplevel (claude_agent_protocol.get_protocol) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:2105:12: W0621: Redefining name 'Path' from outer scope (line 17) (redefined-outer-name)\nscripts/claude_quality_patcher.py:2107:12: W0621: Redefining name 'get_protocol' from outer scope (line 24) (redefined-outer-name)\nscripts/claude_quality_patcher.py:2142:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2105:12: W0404: Reimport 'Path' (imported line 17) (reimported)\nscripts/claude_quality_patcher.py:2105:12: C0415: Import outside toplevel (pathlib.Path) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:2107:12: C0415: Import outside toplevel (claude_agent_protocol.get_protocol) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:2145:4: R0914: Too many local variables (17/15) (too-many-locals)\nscripts/claude_quality_patcher.py:2208:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2145:4: R0912: Too many branches (13/12) (too-many-branches)\nscripts/claude_quality_patcher.py:2327:8: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\nscripts/claude_quality_patcher.py:2384:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2357:12: C0415: Import outside toplevel (ast) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:2359:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:2412:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2392:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:2464:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2488:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2471:40: W0613: Unused argument 'target_file' (unused-argument)\nscripts/claude_quality_patcher.py:2519:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2536:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2539:4: R0914: Too many local variables (18/15) (too-many-locals)\nscripts/claude_quality_patcher.py:2539:4: R0915: Too many statements (71/50) (too-many-statements)\nscripts/claude_quality_patcher.py:2690:4: R0914: Too many local variables (20/15) (too-many-locals)\nscripts/claude_quality_patcher.py:2729:12: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/claude_quality_patcher.py:2690:4: R0911: Too many return statements (8/6) (too-many-return-statements)\nscripts/claude_quality_patcher.py:2690:4: R0912: Too many branches (25/12) (too-many-branches)\nscripts/claude_quality_patcher.py:2690:4: R0915: Too many statements (103/50) (too-many-statements)\nscripts/claude_quality_patcher.py:2994:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:2939:4: R0911: Too many return statements (7/6) (too-many-return-statements)\nscripts/claude_quality_patcher.py:3019:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/claude_quality_patcher.py:3119:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:31:0: R0904: Too many public methods (39/20) (too-many-public-methods)\nscripts/claude_quality_patcher.py:3128:4: W0621: Redefining name 'datetime' from outer scope (line 16) (redefined-outer-name)\nscripts/claude_quality_patcher.py:3128:4: W0404: Reimport 'datetime' (imported line 16) (reimported)\nscripts/claude_quality_patcher.py:3128:4: C0415: Import outside toplevel (datetime.datetime, datetime.timezone) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:3126:67: W0613: Unused argument 'report' (unused-argument)\nscripts/claude_quality_patcher.py:3280:0: R0913: Too many arguments (19/5) (too-many-arguments)\nscripts/claude_quality_patcher.py:3280:0: R0914: Too many local variables (36/15) (too-many-locals)\nscripts/claude_quality_patcher.py:3364:8: C0415: Import outside toplevel (threading) (import-outside-toplevel)\nscripts/claude_quality_patcher.py:3371:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/claude_quality_patcher.py:3468:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_quality_patcher.py:3280:0: R0912: Too many branches (19/12) (too-many-branches)\nscripts/claude_quality_patcher.py:3280:0: R0915: Too many statements (93/50) (too-many-statements)\nscripts/claude_quality_patcher.py:3292:4: W0613: Unused argument 'version_match' (unused-argument)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'lint_report' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'max_fixes' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'interactive' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'auto_mode' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'session_dir' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'protocol_dir' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'fresh_report' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'claude_agent' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'batch_mode' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'dry_run' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'non_interactive' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'version_match' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'debug' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'background' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'monitor_lint' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'claude_cli' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'output_format' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'output_file' in function call (no-value-for-parameter)\nscripts/claude_quality_patcher.py:3479:4: E1120: No value for argument 'auto_apply' in function call (no-value-for-parameter)\n************* Module scripts.version_keeper_1\nscripts/version_keeper_1.py:1:0: C0302: Too many lines in module (2487/1000) (too-many-lines)\nscripts/version_keeper_1.py:31:0: C0115: Missing class docstring (missing-class-docstring)\nscripts/version_keeper_1.py:31:0: R0902: Too many instance attributes (12/7) (too-many-instance-attributes)\nscripts/version_keeper_1.py:57:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:72:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper_1.py:108:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:117:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:183:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:138:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:179:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:387:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper_1.py:532:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:477:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper_1.py:580:12: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper_1.py:596:25: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper_1.py:606:16: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\nscripts/version_keeper_1.py:627:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:651:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:678:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:671:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper_1.py:697:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:686:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\nscripts/version_keeper_1.py:798:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:700:4: R0912: Too many branches (16/12) (too-many-branches)\nscripts/version_keeper_1.py:933:4: R0914: Too many local variables (19/15) (too-many-locals)\nscripts/version_keeper_1.py:1037:23: R1728: Consider using a generator instead 'sum(len(tool_data.get('fixes', [])) for tool_data in lint_report['quality_issues'].values())' (consider-using-generator)\nscripts/version_keeper_1.py:1040:13: R1728: Consider using a generator instead 'sum(len(tool_data.get('fixes', [])) for tool_data in lint_report['security_issues'].values())' (consider-using-generator)\nscripts/version_keeper_1.py:1063:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:1278:8: W0613: Unused argument 'stderr' (unused-argument)\nscripts/version_keeper_1.py:1421:12: W0612: Unused variable 'tool' (unused-variable)\nscripts/version_keeper_1.py:1512:4: R0914: Too many local variables (19/15) (too-many-locals)\nscripts/version_keeper_1.py:1577:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:1539:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/version_keeper_1.py:1539:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/version_keeper_1.py:1666:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:1587:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/version_keeper_1.py:1587:8: R1702: Too many nested blocks (7/5) (too-many-nested-blocks)\nscripts/version_keeper_1.py:1587:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\nscripts/version_keeper_1.py:1512:4: R0912: Too many branches (29/12) (too-many-branches)\nscripts/version_keeper_1.py:1512:4: R0915: Too many statements (53/50) (too-many-statements)\nscripts/version_keeper_1.py:1779:8: W0613: Unused argument 'function_registry' (unused-argument)\nscripts/version_keeper_1.py:1861:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:1843:16: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/version_keeper_1.py:1856:16: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\nscripts/version_keeper_1.py:1812:4: R0912: Too many branches (13/12) (too-many-branches)\nscripts/version_keeper_1.py:1958:19: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:1995:15: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:1992:23: W0718: Catching too general exception Exception (broad-exception-caught)\nscripts/version_keeper_1.py:2074:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:31:0: R0904: Too many public methods (38/20) (too-many-public-methods)\nscripts/version_keeper_1.py:2151:0: R0913: Too many arguments (14/5) (too-many-arguments)\nscripts/version_keeper_1.py:2151:0: R0914: Too many local variables (45/15) (too-many-locals)\nscripts/version_keeper_1.py:2345:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/version_keeper_1.py:2151:0: R0912: Too many branches (48/12) (too-many-branches)\nscripts/version_keeper_1.py:2151:0: R0915: Too many statements (145/50) (too-many-statements)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'bump_type' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'base_branch' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'skip_tests' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'skip_build' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'dry_run' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'output_dir' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'claude_lint' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'detect_duplicates' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'check_connections' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'lint_only' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'comprehensive_lint' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'session_id' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'session_dir' in function call (no-value-for-parameter)\nscripts/version_keeper_1.py:2487:4: E1120: No value for argument 'quick_check' in function call (no-value-for-parameter)\n************* Module scripts.claude_agent_protocol\nscripts/claude_agent_protocol.py:54:0: R0902: Too many instance attributes (14/7) (too-many-instance-attributes)\nscripts/claude_agent_protocol.py:87:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)\nscripts/claude_agent_protocol.py:152:4: R0913: Too many arguments (6/5) (too-many-arguments)\nscripts/claude_agent_protocol.py:161:8: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:213:18: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:227:31: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:261:12: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:277:12: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:283:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\nscripts/claude_agent_protocol.py:286:38: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:301:12: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:321:31: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:334:42: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:334:54: W0613: Unused argument 'success' (unused-argument)\nscripts/claude_agent_protocol.py:450:8: C0415: Import outside toplevel (collections.Counter) (import-outside-toplevel)\nscripts/claude_agent_protocol.py:523:42: W0621: Redefining name 'task' from outer scope (line 628) (redefined-outer-name)\nscripts/claude_agent_protocol.py:612:0: C0103: Constant name \"_protocol_instance\" doesn't conform to UPPER_CASE naming style (invalid-name)\nscripts/claude_agent_protocol.py:617:4: W0603: Using the global statement (global-statement)\n************* Module core.mcp-router\ncore/mcp-router.py:1:0: C0103: Module name \"mcp-router\" doesn't conform to snake_case naming style (invalid-name)\ncore/mcp-router.py:16:0: C0115: Missing class docstring (missing-class-docstring)\ncore/mcp-router.py:163:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-router.py:171:25: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-router.py:213:8: C0415: Import outside toplevel (requests) (import-outside-toplevel)\ncore/mcp-router.py:237:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-router.py:284:19: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-router.py:289:0: C0116: Missing function or method docstring (missing-function-docstring)\n************* Module core.claude-code-mcp-bridge\ncore/claude-code-mcp-bridge.py:1:0: C0103: Module name \"claude-code-mcp-bridge\" doesn't conform to snake_case naming style (invalid-name)\ncore/claude-code-mcp-bridge.py:15:0: C0115: Missing class docstring (missing-class-docstring)\ncore/claude-code-mcp-bridge.py:194:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/claude-code-mcp-bridge.py:209:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/claude-code-mcp-bridge.py:242:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/claude-code-mcp-bridge.py:239:17: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/claude-code-mcp-bridge.py:281:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/claude-code-mcp-bridge.py:324:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/claude-code-mcp-bridge.py:525:21: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/claude-code-mcp-bridge.py:534:0: C0116: Missing function or method docstring (missing-function-docstring)\n************* Module core.mcp-mem0-client\ncore/mcp-mem0-client.py:1:0: C0103: Module name \"mcp-mem0-client\" doesn't conform to snake_case naming style (invalid-name)\ncore/mcp-mem0-client.py:11:0: E0401: Unable to import 'aiohttp' (import-error)\ncore/mcp-mem0-client.py:14:0: C0115: Missing class docstring (missing-class-docstring)\ncore/mcp-mem0-client.py:102:0: C0116: Missing function or method docstring (missing-function-docstring)\n************* Module core.mcp-upgrader\ncore/mcp-upgrader.py:1:0: C0302: Too many lines in module (1700/1000) (too-many-lines)\ncore/mcp-upgrader.py:1:0: C0103: Module name \"mcp-upgrader\" doesn't conform to snake_case naming style (invalid-name)\ncore/mcp-upgrader.py:20:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)\ncore/mcp-upgrader.py:62:0: C0115: Missing class docstring (missing-class-docstring)\ncore/mcp-upgrader.py:85:28: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/mcp-upgrader.py:111:8: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\ncore/mcp-upgrader.py:139:19: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-upgrader.py:148:12: C0415: Import outside toplevel (tomllib) (import-outside-toplevel)\ncore/mcp-upgrader.py:174:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-upgrader.py:166:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-upgrader.py:185:19: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-upgrader.py:201:19: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-upgrader.py:458:4: R0914: Too many local variables (16/15) (too-many-locals)\ncore/mcp-upgrader.py:573:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-upgrader.py:553:29: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-upgrader.py:458:4: R0911: Too many return statements (9/6) (too-many-return-statements)\ncore/mcp-upgrader.py:669:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-upgrader.py:652:20: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-upgrader.py:930:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-upgrader.py:917:37: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/mcp-upgrader.py:1542:0: C0116: Missing function or method docstring (missing-function-docstring)\ncore/mcp-upgrader.py:1542:0: R0914: Too many local variables (22/15) (too-many-locals)\ncore/mcp-upgrader.py:1542:0: R0912: Too many branches (21/12) (too-many-branches)\ncore/mcp-upgrader.py:1542:0: R0915: Too many statements (72/50) (too-many-statements)\n************* Module core.mcp-create-server\ncore/mcp-create-server.py:1:0: C0302: Too many lines in module (1173/1000) (too-many-lines)\ncore/mcp-create-server.py:1:0: C0103: Module name \"mcp-create-server\" doesn't conform to snake_case naming style (invalid-name)\ncore/mcp-create-server.py:12:0: C0115: Missing class docstring (missing-class-docstring)\ncore/mcp-create-server.py:1011:4: R0913: Too many arguments (6/5) (too-many-arguments)\ncore/mcp-create-server.py:1011:4: R0912: Too many branches (13/12) (too-many-branches)\ncore/mcp-create-server.py:1111:0: C0116: Missing function or method docstring (missing-function-docstring)\n************* Module core.direct-mem0-usage\ncore/direct-mem0-usage.py:1:0: C0103: Module name \"direct-mem0-usage\" doesn't conform to snake_case naming style (invalid-name)\ncore/direct-mem0-usage.py:13:0: C0413: Import \"from dotenv import load_dotenv\" should be placed at the top of the module (wrong-import-position)\ncore/direct-mem0-usage.py:16:0: C0413: Import \"from utils import get_mem0_client\" should be placed at the top of the module (wrong-import-position)\ncore/direct-mem0-usage.py:22:0: C0116: Missing function or method docstring (missing-function-docstring)\n************* Module core.mcp-test-framework\ncore/mcp-test-framework.py:1:0: C0103: Module name \"mcp-test-framework\" doesn't conform to snake_case naming style (invalid-name)\ncore/mcp-test-framework.py:41:0: C0115: Missing class docstring (missing-class-docstring)\ncore/mcp-test-framework.py:51:26: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/mcp-test-framework.py:105:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-test-framework.py:82:12: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\ncore/mcp-test-framework.py:149:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-test-framework.py:206:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-test-framework.py:214:4: R0914: Too many local variables (19/15) (too-many-locals)\ncore/mcp-test-framework.py:284:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-test-framework.py:163:8: R1702: Too many nested blocks (6/5) (too-many-nested-blocks)\ncore/mcp-test-framework.py:224:12: R1705: Unnecessary \"elif\" after \"return\", remove the leading \"el\" from \"elif\" (no-else-return)\ncore/mcp-test-framework.py:257:16: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\ncore/mcp-test-framework.py:397:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-test-framework.py:368:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-test-framework.py:380:27: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-test-framework.py:387:12: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\ncore/mcp-test-framework.py:450:0: C0116: Missing function or method docstring (missing-function-docstring)\ncore/mcp-test-framework.py:530:8: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\n************* Module core.mcp-mem0-simple\ncore/mcp-mem0-simple.py:1:0: C0103: Module name \"mcp-mem0-simple\" doesn't conform to snake_case naming style (invalid-name)\ncore/mcp-mem0-simple.py:12:0: C0115: Missing class docstring (missing-class-docstring)\ncore/mcp-mem0-simple.py:29:12: W0621: Redefining name 'response' from outer scope (line 138) (redefined-outer-name)\ncore/mcp-mem0-simple.py:29:23: W3101: Missing timeout argument for method 'requests.post' can cause your program to hang indefinitely (missing-timeout)\ncore/mcp-mem0-simple.py:27:8: R1702: Too many nested blocks (8/5) (too-many-nested-blocks)\ncore/mcp-mem0-simple.py:12:0: R0903: Too few public methods (1/2) (too-few-public-methods)\ncore/mcp-mem0-simple.py:62:0: C0116: Missing function or method docstring (missing-function-docstring)\ncore/mcp-mem0-simple.py:124:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-mem0-simple.py:86:12: R1723: Unnecessary \"elif\" after \"break\", remove the leading \"el\" from \"elif\" (no-else-break)\ncore/mcp-mem0-simple.py:86:15: R1714: Consider merging these comparisons with 'in' by using 'cmd in ('quit', 'exit')'. Use a set instead if elements are hashable. (consider-using-in)\ncore/mcp-mem0-simple.py:62:0: R0912: Too many branches (13/12) (too-many-branches)\ncore/mcp-mem0-simple.py:139:11: W0718: Catching too general exception Exception (broad-exception-caught)\n************* Module core.mcp-manager\ncore/mcp-manager.py:1:0: C0103: Module name \"mcp-manager\" doesn't conform to snake_case naming style (invalid-name)\ncore/mcp-manager.py:19:0: C0115: Missing class docstring (missing-class-docstring)\ncore/mcp-manager.py:59:12: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/mcp-manager.py:62:26: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/mcp-manager.py:74:25: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-manager.py:83:35: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-manager.py:116:27: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-manager.py:118:24: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\ncore/mcp-manager.py:71:12: W0612: Unused variable 'dep_name' (unused-variable)\ncore/mcp-manager.py:154:8: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\ncore/mcp-manager.py:155:12: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/mcp-manager.py:174:12: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\ncore/mcp-manager.py:158:22: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)\ncore/mcp-manager.py:196:12: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\ncore/mcp-manager.py:221:16: R1705: Unnecessary \"else\" after \"return\", remove the \"else\" and de-indent the code inside it (no-else-return)\ncore/mcp-manager.py:284:15: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/mcp-manager.py:292:31: W0613: Unused argument 'signum' (unused-argument)\ncore/mcp-manager.py:292:39: W0613: Unused argument 'frame' (unused-argument)\ncore/mcp-manager.py:299:0: C0116: Missing function or method docstring (missing-function-docstring)\ncore/mcp-manager.py:299:0: R0912: Too many branches (18/12) (too-many-branches)\ncore/mcp-manager.py:299:0: R0915: Too many statements (51/50) (too-many-statements)\n************* Module core.auto-discovery-system\ncore/auto-discovery-system.py:1:0: C0103: Module name \"auto-discovery-system\" doesn't conform to snake_case naming style (invalid-name)\ncore/auto-discovery-system.py:19:0: C0115: Missing class docstring (missing-class-docstring)\ncore/auto-discovery-system.py:408:21: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/auto-discovery-system.py:493:35: C0201: Consider iterating the dictionary directly instead of calling .keys() (consider-iterating-dictionary)\ncore/auto-discovery-system.py:583:4: R0912: Too many branches (15/12) (too-many-branches)\ncore/auto-discovery-system.py:736:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)\ncore/auto-discovery-system.py:779:23: W0718: Catching too general exception Exception (broad-exception-caught)\ncore/auto-discovery-system.py:767:29: W1510: 'subprocess.run' used without explicitly defining the value for 'check'. (subprocess-run-check)\ncore/auto-discovery-system.py:785:4: R0914: Too many local variables (17/15) (too-many-locals)\ncore/auto-discovery-system.py:806:8: W0621: Redefining name 'platform' from outer scope (line 10) (redefined-outer-name)\ncore/auto-discovery-system.py:851:22: W0622: Redefining built-in 'vars' (redefined-builtin)\ncore/auto-discovery-system.py:897:0: C0116: Missing function or method docstring (missing-function-docstring)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1831:2037]\n==scripts.version_keeper_1:[1688:1895]\n            )\n\n        return connections_report\n\n    def is_function_defined(\n        self,\n        func_name: str,\n        current_file: Path,\n        function_registry: Dict,\n        import_registry: Dict,\n    ) -> bool:\n        \"\"\"Check if function is defined locally or imported\"\"\"\n        current_file_str = str(current_file)\n\n        # Check if defined in current file\n        if current_file_str in function_registry:\n            if func_name in function_registry[current_file_str]:\n                return True\n\n        # Check if it's a built-in function\n        builtins = [\n            \"print\",\n            \"len\",\n            \"str\",\n            \"int\",\n            \"float\",\n            \"list\",\n            \"dict\",\n            \"set\",\n            \"tuple\",\n            \"open\",\n            \"range\",\n            \"enumerate\",\n            \"zip\",\n            \"map\",\n            \"filter\",\n            \"sorted\",\n            \"sum\",\n            \"min\",\n            \"max\",\n            \"abs\",\n            \"all\",\n            \"any\",\n            \"bool\",\n            \"bytes\",\n            \"callable\",\n            \"chr\",\n            \"compile\",\n            \"dir\",\n            \"eval\",\n            \"exec\",\n            \"format\",\n            \"getattr\",\n            \"hasattr\",\n            \"hash\",\n            \"hex\",\n            \"id\",\n            \"input\",\n            \"isinstance\",\n            \"issubclass\",\n            \"iter\",\n            \"next\",\n            \"oct\",\n            \"ord\",\n            \"pow\",\n            \"repr\",\n            \"round\",\n            \"setattr\",\n            \"slice\",\n            \"super\",\n            \"type\",\n            \"vars\",\n        ]\n\n        if func_name in builtins:\n            return True\n\n        # Check if imported (simplified check)\n        if current_file_str in import_registry:\n            imports = import_registry[current_file_str]\n            for imp in imports:\n                if func_name in imp or imp.endswith(func_name):\n                    return True\n\n        return False\n\n    def is_method_defined(\n        self,\n        method_call: str,\n        current_file: Path,\n        function_registry: Dict,\n        import_registry: Dict,\n    ) -> bool:\n        \"\"\"Check if method call is valid\"\"\"\n        # This is a simplified check - in a real implementation you'd need more sophisticated analysis\n        # For now, assume imported modules have valid methods\n        current_file_str = str(current_file)\n\n        if current_file_str in import_registry:\n            imports = import_registry[current_file_str]\n            for imp in imports:\n                # If the object is imported, assume its methods are valid\n                if any(part in imp for part in method_call.split(\".\")):\n                    return True\n\n        # Check if it's a standard library method\n        std_objects = [\n            \"json\",\n            \"os\",\n            \"sys\",\n            \"subprocess\",\n            \"pathlib\",\n            \"datetime\",\n            \"re\",\n            \"ast\",\n        ]\n        for obj in std_objects:\n            if method_call.startswith(obj + \".\"):\n                return True\n\n        return False\n\n    def resolve_module_path(\n        self,\n        module_name: str,\n        current_file: Path,\n    ) -> Optional[Path]:\n        \"\"\"Resolve relative module import to file path\"\"\"\n        try:\n            if module_name.startswith(\".\"):\n                # Relative import\n                current_dir = current_file.parent\n                parts = module_name.split(\".\")\n\n                # Count leading dots for relative level\n                level = 0\n                for part in parts:\n                    if part == \"\":\n                        level += 1\n                    else:\n                        break\n\n                # Go up directories based on level\n                target_dir = current_dir\n                for _ in range(level):\n                    target_dir = target_dir.parent\n\n                # Add remaining path parts\n                remaining_parts = [p for p in parts if p]\n                for part in remaining_parts:\n                    target_dir = target_dir / part\n\n                # Check for .py file or __init__.py in directory\n                if target_dir.with_suffix(\".py\").exists():\n                    return target_dir.with_suffix(\".py\")\n                elif (target_dir / \"__init__.py\").exists():\n                    return target_dir / \"__init__.py\"\n\n            else:\n                # Absolute import - check if it's a local module\n                parts = module_name.split(\".\")\n                base_path = self.repo_path / \"src\"\n\n                for part in parts:\n                    base_path = base_path / part\n\n                if base_path.with_suffix(\".py\").exists():\n                    return base_path.with_suffix(\".py\")\n                elif (base_path / \"__init__.py\").exists():\n                    return base_path / \"__init__.py\"\n\n        except Exception:\n            pass\n\n        return None\n\n    def validate_lint_recommendations(\n        self, lint_report: Dict[str, Any]\n    ) -> Dict[str, Any]:\n        \"\"\"Validate that lint recommendations won't break code\"\"\"\n        print(\"\ud83d\udee1\ufe0f Validating lint recommendations for safety...\")\n\n        validation_report = {\n            \"safe_recommendations\": [],\n            \"risky_recommendations\": [],\n            \"blocked_recommendations\": [],\n            \"validation_errors\": [],\n        }\n\n        # Check each priority fix for safety\n        for pfix in lint_report.get(\"priority_fixes\", []):\n            fix = pfix.get(\"fix\", {})\n            fix_type = fix.get(\"type\", \"\")\n\n            try:\n                if fix_type == \"auto_fix\":\n                    # Auto-fixes like black/isort are generally safe\n                    validation_report[\"safe_recommendations\"].append(\n                        {\n                            \"fix\": fix,\n                            \"reason\": \"Auto-formatting tools are safe\",\n                        }\n                    )\n\n                elif fix_type == \"remove_duplicate\":\n                    # Check if removing duplicate would break imports/calls (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[110:252]\n==scripts.version_keeper_1:[107:251]\n        with open(self.version_file, \"r\") as f:\n            content = f.read()\n\n        content = re.sub(\n            r'version\\s*=\\s*\"[^\"]+\"',\n            f'version = \"{new_version}\"',\n            content,\n        )\n\n        with open(self.version_file, \"w\") as f:\n            f.write(content)\n\n        # Update other version references\n        version_files = [\n            self.repo_path / \"src\" / \"install-mcp-system.py\",\n            self.repo_path / \"README.md\",\n            self.docs_dir / \"INSTALLATION.md\",\n        ]\n\n        for file_path in version_files:\n            if file_path.exists():\n                self.update_version_in_file(file_path, new_version)\n\n    def update_version_in_file(\n        self,\n        file_path: Path,\n        new_version: str,\n    ):\n        \"\"\"Update version strings in a specific file\"\"\"\n        try:\n            with open(file_path, \"r\") as f:\n                content = f.read()\n\n            # Common version patterns\n            patterns = [\n                (\n                    r'version\\s*=\\s*\"[^\"]+\"',\n                    f'version = \"{new_version}\"',\n                ),\n                (\n                    r'__version__\\s*=\\s*\"[^\"]+\"',\n                    f'__version__ = \"{new_version}\"',\n                ),\n                (\n                    r\"v\\d+\\.\\d+\\.\\d+\",\n                    f\"v{new_version}\",\n                ),\n                (\n                    r\"Version \\d+\\.\\d+\\.\\d+\",\n                    f\"Version {new_version}\",\n                ),\n                (\n                    r\"MCP System v\\d+\\.\\d+\\.\\d+\",\n                    f\"MCP System v{new_version}\",\n                ),\n            ]\n\n            updated = False\n            for (\n                pattern,\n                replacement,\n            ) in patterns:\n                if re.search(pattern, content):\n                    content = re.sub(\n                        pattern,\n                        replacement,\n                        content,\n                    )\n                    updated = True\n\n            if updated:\n                with open(file_path, \"w\") as f:\n                    f.write(content)\n                print(f\"  \u2705 Updated {file_path.name}\")\n\n        except Exception as e:\n            print(f\"  \u26a0\ufe0f  Failed to update {file_path}: {e}\")\n\n    def run_quality_checks(\n        self, output_dir: str = None\n    ) -> Dict[str, bool]:\n        \"\"\"Run comprehensive quality checks\"\"\"\n        print(\"\ud83d\udd0d Running quality checks...\")\n\n        checks = {}\n\n        # Code formatting\n        print(\"  \ud83d\udcdd Checking code formatting...\")\n        checks[\"black\"] = self.run_command(\n            [\n                \"black\",\n                \"--check\",\n                \"core/\",\n                \"scripts/\",\n                \"guardrails/\",\n                \"tests/\",\n                \"utils/\",\n            ]\n        )\n        checks[\"isort\"] = self.run_command(\n            [\n                \"isort\",\n                \"--check-only\",\n                \"core/\",\n                \"scripts/\",\n                \"guardrails/\",\n                \"tests/\",\n                \"utils/\",\n            ]\n        )\n\n        # Type checking\n        print(\"  \ud83d\udd0d Type checking...\")\n        checks[\"mypy\"] = self.run_command([\"mypy\", \"scripts/\", \"core/\"])\n\n        # Linting\n        print(\"  \ud83e\uddf9 Linting...\")\n        checks[\"pylint\"] = self.run_command(\n            [\n                \"pylint\",\n                \"scripts/\",\n                \"core/\",\n                \"--exit-zero\",\n            ]\n        )\n        checks[\"flake8\"] = self.run_command(\n            [\n                \"flake8\",\n                \"scripts/\",\n                \"core/\",\n                \"guardrails/\",\n            ]\n        )\n\n        # Security scanning\n        print(\"  \ud83d\udd12 Security scanning...\")\n        if output_dir:\n            checks[\"bandit\"] = self.run_command(\n                [\n                    \"bandit\",\n                    \"-r\",\n                    \"scripts/\",\n                    \"core/\",\n                    \"guardrails/\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1054:1127]\n==scripts.version_keeper_1:[849:923]\n        return f\"{node.name}({','.join(args)})\"\n\n    def get_class_signature(self, node: ast.ClassDef) -> str:\n        \"\"\"Generate class signature for comparison\"\"\"\n        methods = []\n        for item in node.body:\n            if isinstance(item, ast.FunctionDef):\n                methods.append(item.name)\n\n        return f\"{node.name}::{','.join(sorted(methods))}\"\n\n    def detect_competing_implementations(\n        self,\n    ) -> List[Dict[str, Any]]:\n        \"\"\"Detect competing implementations (similar functionality in\n        different files)\"\"\"\n        competing = []\n\n        # Define known competing patterns\n        competing_patterns = [\n            {\n                \"pattern\": \"server.*management\",\n                \"files\": [\n                    \"mcp-universal\",\n                    \"mcp-router\",\n                    \"auto-discovery\",\n                ],\n                \"description\": \"Multiple server management implementations\",\n            },\n            {\n                \"pattern\": \"template.*creation\",\n                \"files\": [\n                    \"mcp-create-server\",\n                    \"template\",\n                ],\n                \"description\": \"Multiple template creation systems\",\n            },\n            {\n                \"pattern\": \"validation.*system\",\n                \"files\": [\n                    \"validate_templates\",\n                    \"validate_upgrade_modules\",\n                    \"version_keeper\",\n                ],\n                \"description\": \"Multiple validation frameworks\",\n            },\n            {\n                \"pattern\": \"upgrade.*module\",\n                \"files\": [\n                    \"mcp-upgrader\",\n                    \"claude-upgrade\",\n                ],\n                \"description\": \"Multiple upgrade systems\",\n            },\n        ]\n\n        for pattern_info in competing_patterns:\n            pattern = pattern_info[\"pattern\"]\n            found_files = []\n\n            for py_file in self.repo_path.rglob(\"*.py\"):\n                if re.search(\n                    pattern,\n                    py_file.name,\n                    re.IGNORECASE,\n                ):\n                    found_files.append(str(py_file))\n\n            if len(found_files) > 1:\n                competing.append(\n                    {\n                        \"pattern\": pattern,\n                        \"description\": pattern_info[\"description\"],\n                        \"files\": found_files, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[520:599]\n==scripts.version_keeper_1:[529:609]\n            return changes\n\n        except Exception:\n            return []\n\n    def build_package(self) -> bool:\n        \"\"\"Build distribution package\"\"\"\n        print(\"\ud83d\udce6 Building package...\")\n\n        # Clean previous builds\n        build_dirs = [\n            self.repo_path / \"build\",\n            self.repo_path / \"dist\",\n            self.repo_path / \"src\" / \"*.egg-info\",\n        ]\n\n        for build_dir in build_dirs:\n            if build_dir.exists():\n                shutil.rmtree(\n                    build_dir,\n                    ignore_errors=True,\n                )\n\n        # Build package\n        success = self.run_command([\"python\", \"-m\", \"build\"])\n\n        if success:\n            print(\"  \u2705 Package built successfully\")\n\n            # Validate package\n            dist_files = list((self.repo_path / \"dist\").glob(\"*\"))\n            print(f\"  \ud83d\udce6 Built {len(dist_files)} distribution files:\")\n            for dist_file in dist_files:\n                print(f\"    - {dist_file.name}\")\n\n            # Test package installation\n            return self.test_package_installation()\n\n        return False\n\n    def test_package_installation(\n        self,\n    ) -> bool:\n        \"\"\"Test package installation in isolated environment\"\"\"\n        print(\"  \ud83e\uddea Testing package installation...\")\n\n        with tempfile.TemporaryDirectory() as temp_dir:\n            venv_path = Path(temp_dir) / \"test_venv\"\n\n            # Create virtual environment\n            subprocess.run(\n                [\n                    sys.executable,\n                    \"-m\",\n                    \"venv\",\n                    str(venv_path),\n                ]\n            )\n\n            # Install package\n            pip_path = venv_path / \"bin\" / \"pip\"\n            if not pip_path.exists():\n                pip_path = venv_path / \"Scripts\" / \"pip.exe\"\n\n            dist_files = list((self.repo_path / \"dist\").glob(\"*.whl\"))\n            if dist_files:\n                result = subprocess.run(\n                    [\n                        str(pip_path),\n                        \"install\",\n                        str(dist_files[0]),\n                    ],\n                    capture_output=True,\n                    text=True,\n                )\n\n                if result.returncode == 0:\n                    print(\"    \u2705 Package installation successful\")\n                    return True\n                else: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[601:706]\n==scripts.version_keeper_1:[613:720]\n        return False\n\n    def update_changelog(\n        self,\n        new_version: str,\n        changes: List[str],\n    ):\n        \"\"\"Update changelog with new version\"\"\"\n        print(f\"\ud83d\udcdd Updating changelog for v{new_version}...\")\n\n        if not self.changelog_file.exists():\n            self.create_initial_changelog()\n\n        with open(self.changelog_file, \"r\") as f:\n            content = f.read()\n\n        # Create new entry\n        date_str = datetime.now().strftime(\"%Y-%m-%d\")\n        new_entry = f\"\"\"\n## [{new_version}] - {date_str}\n\n### Changed\n\"\"\"\n\n        for change in changes:\n            new_entry += f\"- {change}\\n\"\n\n        # Insert after the first header\n        lines = content.split(\"\\n\")\n        insert_index = 0\n        for i, line in enumerate(lines):\n            if line.startswith(\"## [\") and \"Unreleased\" not in line:\n                insert_index = i\n                break\n\n        lines.insert(insert_index, new_entry)\n\n        with open(self.changelog_file, \"w\") as f:\n            f.write(\"\\n\".join(lines))\n\n        print(\"  \u2705 Changelog updated\")\n\n    def create_initial_changelog(self):\n        \"\"\"Create initial changelog if it doesn't exist\"\"\"\n        initial_content = \"\"\"# Changelog\n\nAll notable changes to MCP System will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n\"\"\"\n        self.changelog_file.write_text(initial_content)\n\n    def run_command(self, cmd: List[str]) -> bool:\n        \"\"\"Run command and return success status\"\"\"\n        try:\n            result = subprocess.run(\n                cmd,\n                cwd=self.repo_path,\n                capture_output=True,\n                text=True,\n            )\n            return result.returncode == 0\n        except Exception:\n            return False\n\n    def run_command_with_output(self, cmd: List[str]) -> Tuple[bool, str, str]:\n        \"\"\"Run command and return success status, stdout, stderr\"\"\"\n        try:\n            result = subprocess.run(\n                cmd,\n                cwd=self.repo_path,\n                capture_output=True,\n                text=True,\n            )\n            return (\n                result.returncode == 0,\n                result.stdout,\n                result.stderr,\n            )\n        except Exception as e:\n            return False, \"\", str(e)\n\n    def detect_duplicate_implementations(\n        self, exclude_backups: bool = False, exclude_duplicates: bool = False\n    ) -> Dict[str, Any]:\n        \"\"\"Detect duplicate/competing implementations across all MCP-System modules\"\"\"\n        print(\"\ud83d\udd0d Scanning for duplicate/competing implementations...\")\n\n        duplicates = {\n            \"duplicate_functions\": [],\n            \"competing_implementations\": [],\n            \"similar_classes\": [],\n            \"redundant_files\": [],\n            \"recommendations\": [],\n        }\n\n        # Scan all Python files\n        python_files = list(self.repo_path.rglob(\"*.py\"))\n        functions_map = {}\n        classes_map = {}\n        file_hashes = {}\n\n        for py_file in python_files: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2108:2156]\n==scripts.version_keeper_1:[1980:2028]\n                    continue\n\n                try:\n                    content = py_file.read_text()\n                    # Look for function calls, imports, or references\n                    if (\n                        f\"{function_name}(\" in content\n                        or f\"from {file_path} import\" in content\n                        or f\"import {file_path}\" in content\n                    ):\n                        return True\n                except Exception:\n                    continue\n\n        except Exception:\n            pass\n\n        return False\n\n    def generate_release_report(\n        self,\n        version: str,\n        checks: Dict[str, bool],\n        tests: Dict[str, bool],\n        compatibility: Dict[str, Any],\n    ) -> Dict[str, Any]:\n        \"\"\"Generate comprehensive release report\"\"\"\n        report = {\n            \"version\": version,\n            \"timestamp\": datetime.now().isoformat(),\n            \"branch\": self.git_branch,\n            \"quality_checks\": checks,\n            \"test_results\": tests,\n            \"compatibility\": compatibility,\n            \"overall_status\": (\n                \"PASS\"\n                if self.all_checks_passed(\n                    checks,\n                    tests,\n                    compatibility,\n                )\n                else \"FAIL\"\n            ),\n            \"recommendations\": [],\n        }\n\n        # Add recommendations\n        if not all(checks.values()): (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1643:1686]\n==scripts.version_keeper_1:[1491:1534]\n                    },\n                }\n            )\n\n        # Priority 4: Quality issues\n        for tool, result in lint_report[\"quality_issues\"].items():\n            for fix in result.get(\"fixes\", []):\n                priority_fixes.append(\n                    {\n                        \"priority\": 4,\n                        \"category\": \"quality\",\n                        \"fix\": fix,\n                    }\n                )\n\n        return sorted(\n            priority_fixes,\n            key=lambda x: x[\"priority\"],\n        )\n\n    def run_connections_linter(\n        self, exclude_backups: bool = False, real_issues_only: bool = False\n    ) -> Dict[str, Any]:\n        \"\"\"Lint for broken function calls and connections across MCP-System\"\"\"\n        print(\"\ud83d\udd17 Running connections linter for broken function calls...\")\n\n        connections_report = {\n            \"broken_imports\": [],\n            \"undefined_functions\": [],\n            \"missing_dependencies\": [],\n            \"circular_imports\": [],\n            \"unused_imports\": [],\n            \"connection_errors\": [],\n            \"recommendations\": [],\n        }\n\n        # Build function registry from all Python files\n        function_registry = {}\n        import_registry = {}\n\n        python_files = [\n            f\n            for f in self.repo_path.rglob(\"*.py\") (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[53:94]\n==scripts.version_keeper_1:[49:90]\n        self.lint_start_time = None\n        self.issues_found = 0\n        self.files_scanned = 0\n\n    def get_current_version(self) -> str:\n        \"\"\"Get current version from pyproject.toml\"\"\"\n        try:\n            with open(self.version_file, \"r\") as f:\n                content = f.read()\n                match = re.search(\n                    r'version\\s*=\\s*\"([^\"]+)\"',\n                    content,\n                )\n                if match:\n                    return match.group(1)\n        except FileNotFoundError:\n            pass\n        return \"0.0.0\"\n\n    def get_current_branch(self) -> str:\n        \"\"\"Get current git branch\"\"\"\n        try:\n            result = subprocess.run(\n                [\n                    \"git\",\n                    \"branch\",\n                    \"--show-current\",\n                ],\n                capture_output=True,\n                text=True,\n                cwd=self.repo_path,\n            )\n            return result.stdout.strip()\n        except subprocess.SubprocessError:\n            return \"unknown\"\n\n    def bump_version(self, bump_type: str = \"patch\") -> str:\n        \"\"\"Bump version based on type (major, minor, patch)\"\"\"\n        current = semantic_version.Version(self.current_version)\n\n        if bump_type == \"major\": (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1521:1561]\n==scripts.version_keeper_1:[1331:1373]\n                            }\n                        )\n            except json.JSONDecodeError:\n                pass\n\n        return fixes\n\n    def generate_claude_recommendations(\n        self, lint_report: Dict[str, Any]\n    ) -> List[str]:\n        \"\"\"Generate Claude-specific recommendations based on lint results\"\"\"\n        recommendations = []\n\n        # Quality issues\n        failed_quality = [\n            tool\n            for tool, result in lint_report[\"quality_issues\"].items()\n            if not result[\"passed\"]\n        ]\n        if failed_quality:\n            recommendations.append(\n                f\"\ud83d\udd27 Run quality fixes for: {', '.join(failed_quality)}\"\n            )\n\n        # Security issues\n        security_count = sum(\n            len(result.get(\"fixes\", []))\n            for result in lint_report[\"security_issues\"].values()\n        )\n        if security_count > 0:\n            recommendations.append(\n                f\"\ud83d\udd12 Address {security_count} security issues found\"\n            )\n\n        # Duplicate issues\n        duplicates = lint_report[\"duplicate_issues\"]\n        if duplicates[\"duplicate_functions\"]:\n            recommendations.append(\n                f\"\ud83d\udd04 Remove {len(duplicates['duplicate_functions'])} duplicate functions\"\n            )\n        if duplicates[\"competing_implementations\"]:\n            recommendations.append( (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1318:1411]\n==scripts.version_keeper_1:[1099:1196]\n        return lint_report\n\n    def run_quality_check_with_details(self, tool: str) -> Tuple[bool, str, str]:\n        \"\"\"Run quality check tool with detailed output\"\"\"\n        commands = {\n            \"black\": [\n                \"black\",\n                \"--check\",\n                \"--diff\",\n                \"scripts/\",\n                \"core/\",\n                \"guardrails/\",\n            ],\n            \"isort\": [\n                \"isort\",\n                \"--check-only\",\n                \"--diff\",\n                \"scripts/\",\n                \"core/\",\n                \"guardrails/\",\n            ],\n            \"mypy\": [\n                \"mypy\",\n                \"scripts/\",\n                \"core/\",\n                \"--show-error-codes\",\n            ],\n            \"flake8\": [\n                \"flake8\",\n                \"scripts/\",\n                \"core/\",\n                \"guardrails/\",\n                \"--format=%(path)s:%(row)d:%(col)d: %(code)s %(text)s\",\n            ],\n            \"pylint\": [\n                \"pylint\",\n                \"scripts/\",\n                \"core/\",\n                \"--output-format=text\",\n            ],\n        }\n\n        if tool in commands:\n            return self.run_command_with_output(commands[tool])\n        return (\n            False,\n            \"\",\n            f\"Unknown tool: {tool}\",\n        )\n\n    def run_security_check_with_details(self, tool: str) -> Tuple[bool, str, str]:\n        \"\"\"Run security check tool with detailed output\"\"\"\n        commands = {\n            \"bandit\": [\n                \"bandit\",\n                \"-r\",\n                \"scripts/\",\n                \"core/\",\n                \"guardrails/\",\n                \"-f\",\n                \"json\",\n            ],\n            \"safety\": [\n                \"safety\",\n                \"check\",\n                \"--json\",\n            ],\n        }\n\n        if tool in commands:\n            return self.run_command_with_output(commands[tool])\n        return (\n            False,\n            \"\",\n            f\"Unknown security tool: {tool}\",\n        )\n\n    def generate_tool_fixes(\n        self,\n        tool: str,\n        stdout: str,\n        stderr: str,\n    ) -> List[Dict[str, str]]:\n        \"\"\"Generate specific fix recommendations for each tool\"\"\"\n        fixes = []\n\n        if tool == \"black\":\n            if \"would reformat\" in stdout:\n                fixes.append(\n                    {\n                        \"type\": \"auto_fix\",\n                        \"command\": \"black scripts/ core/ guardrails/\",\n                        \"description\": \"Auto-format code with Black\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2632:2661]\n==scripts.version_keeper_1:[2404:2433]\n    else:\n        output_path = None\n\n    keeper.save_report(report, output_path)\n\n    # Show summary\n    print(\"\\n\" + \"=\" * 50)\n    print(\"\ud83d\udcca RELEASE VALIDATION SUMMARY\")\n    print(\"=\" * 50)\n\n    status_icon = \"\u2705\" if report[\"overall_status\"] == \"PASS\" else \"\u274c\"\n    print(f\"{status_icon} Overall Status: {report['overall_status']}\")\n\n    print(\"\\n\ud83d\udd0d Quality Checks:\")\n    for check, result in checks.items():\n        icon = \"\u2705\" if result else \"\u274c\"\n        print(f\"  {icon} {check}\")\n\n    if not skip_tests:\n        print(\"\\n\ud83e\uddea Tests:\")\n        for test, result in tests.items():\n            icon = \"\u2705\" if result else \"\u274c\"\n            print(f\"  {icon} {test}\")\n\n    print(\"\\n\ud83d\udd04 Compatibility:\")\n    icon = \"\u2705\" if compatibility[\"compatible\"] else \"\u274c\"\n    print(f\"  {icon} Compatible with {base_branch}\")\n\n    if compatibility[\"breaking_changes\"]: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1423:1446]\n==scripts.version_keeper_1:[1211:1234]\n                    }\n                )\n\n        elif tool == \"mypy\":\n            if \"error:\" in stdout:\n                # Parse mypy errors for specific fixes\n                errors = re.findall(\n                    r\"(.+?):(\\d+):.*?error: (.+)\",\n                    stdout,\n                )\n                for (\n                    file_path,\n                    line_num,\n                    error_msg,\n                ) in errors[\n                    :5\n                ]:  # Limit to 5 errors\n                    fixes.append(\n                        {\n                            \"type\": \"manual_fix\",\n                            \"file\": file_path,\n                            \"line\": line_num,\n                            \"error\": error_msg, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[469:498]\n==scripts.version_keeper_1:[474:503]\n        try:\n            # Get file content from base branch\n            result = subprocess.run(\n                [\n                    \"git\",\n                    \"show\",\n                    f\"origin/{base_branch}:{file_path}\",\n                ],\n                capture_output=True,\n                text=True,\n                cwd=self.repo_path,\n            )\n\n            if result.returncode != 0:\n                return []  # File might be new\n\n            base_content = result.stdout\n            current_content = (self.repo_path / file_path).read_text()\n\n            # Simple API change detection\n            changes = []\n\n            # Check for removed functions/classes\n            base_functions = re.findall(r\"def\\s+(\\w+)\", base_content)\n            current_functions = re.findall(\n                r\"def\\s+(\\w+)\",\n                current_content,\n            )\n (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2052:2076]\n==scripts.version_keeper_1:[1917:1942]\n                            }\n                        )\n                    else:\n                        validation_report[\"safe_recommendations\"].append(\n                            {\n                                \"fix\": fix,\n                                \"reason\": \"Duplicate removal is safe\",\n                            }\n                        )\n\n                elif fix_type == \"manual_fix\":\n                    # Manual fixes need human review\n                    validation_report[\"risky_recommendations\"].append(\n                        {\n                            \"fix\": fix,\n                            \"reason\": \"Manual fixes require human validation\",\n                        }\n                    )\n\n                elif fix_type == \"security_fix\":\n                    # Security fixes are high priority but need careful review\n                    validation_report[\"risky_recommendations\"].append(\n                        {\n                            \"fix\": fix, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1586:1613]\n==scripts.version_keeper_1:[1409:1439]\n            commands.append(\"isort scripts/ core/ guardrails/\")\n        return commands\n\n    def prioritize_fixes(self, lint_report: Dict[str, Any]) -> List[Dict[str, Any]]:\n        \"\"\"Prioritize fixes by importance\"\"\"\n        priority_fixes = []\n\n        # Priority 1: Security issues\n        for tool, result in lint_report[\"security_issues\"].items():\n            for fix in result.get(\"fixes\", []):\n                priority_fixes.append(\n                    {\n                        \"priority\": 1,\n                        \"category\": \"security\",\n                        \"fix\": fix,\n                    }\n                )\n\n        # Priority 2: Duplicate implementations\n        duplicates = lint_report[\"duplicate_issues\"]\n        for dup in duplicates[\"duplicate_functions\"]:\n            priority_fixes.append(\n                {\n                    \"priority\": 2,\n                    \"category\": \"duplicates\",\n                    \"fix\": {\n                        \"type\": \"remove_duplicate\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2663:2694]\n==scripts.version_keeper_1:[2437:2468]\n    if compatibility[\"api_changes\"]:\n        print(f\"  \u26a0\ufe0f  API changes: {len(compatibility['api_changes'])}\")\n\n    # Recommendations\n    if report[\"recommendations\"]:\n        print(\"\\n\ud83d\udca1 Recommendations:\")\n        for rec in report[\"recommendations\"]:\n            print(f\"  \u2022 {rec}\")\n\n    # Apply changes if validation passes and not dry run\n    if report[\"overall_status\"] == \"PASS\" and not dry_run:\n        print(f\"\\n\ud83d\ude80 Applying version update to {new_version}...\")\n\n        # Update version files\n        keeper.update_version_files(new_version)\n\n        # Update changelog\n        changes = [f\"Version bump to {new_version}\"]\n        if compatibility[\"api_changes\"]:\n            changes.extend(compatibility[\"api_changes\"])\n\n        keeper.update_changelog(new_version, changes)\n\n        # Build package (unless skipped)\n        if not skip_build:\n            keeper.build_package()\n\n        print(\"\u2705 Version update complete!\")\n        print(\"\\n\ud83d\udccb Next steps:\")\n        print(\"  1. Review changes: git diff\")\n        print( (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2077:2107]\n==scripts.version_keeper_1:[1946:1976]\n                        }\n                    )\n\n                else:\n                    validation_report[\"risky_recommendations\"].append(\n                        {\n                            \"fix\": fix,\n                            \"reason\": f\"Unknown fix type: {fix_type}\",\n                        }\n                    )\n\n            except Exception as e:\n                validation_report[\"validation_errors\"].append(\n                    {\n                        \"fix\": fix,\n                        \"error\": str(e),\n                    }\n                )\n\n        return validation_report\n\n    def would_break_dependencies(\n        self,\n        file_path: str,\n        function_name: str,\n    ) -> bool:\n        \"\"\"Check if removing a function would break dependencies\"\"\"\n        try:\n            # Simple check: search for function calls across all files\n            for py_file in self.repo_path.rglob(\"*.py\"): (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2604:2631]\n==scripts.version_keeper_1:[2374:2401]\n        )\n        checks = {\n            tool: result[\"passed\"]\n            for tool, result in lint_report[\"quality_issues\"].items()\n        }\n    else:\n        checks = keeper.run_quality_checks(output_dir)\n\n    # Run tests (unless skipped)\n    if not skip_tests:\n        tests = keeper.run_tests()\n    else:\n        tests = {\"skipped\": True}\n\n    # Validate compatibility\n    compatibility = keeper.validate_compatibility(base_branch)\n\n    # Generate report\n    report = keeper.generate_release_report(\n        new_version,\n        checks,\n        tests,\n        compatibility,\n    )\n\n    # Save report\n    if output_dir: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1153:1171]\n==scripts.version_keeper_1:[954:972]\n            \"branch\": self.git_branch,\n            \"timestamp\": datetime.now().isoformat(),\n            \"session_id\": session_id,\n            \"total_issues\": 0,\n            \"critical_issues\": 0,\n            \"error_issues\": 0,\n            \"warning_issues\": 0,\n            \"info_issues\": 0,\n            \"files_analyzed\": 0,\n            \"linters_used\": [],\n            \"issues\": [],\n            \"quality_issues\": {},\n            \"security_issues\": {},\n            \"compatibility_issues\": {},\n            \"duplicate_issues\": {},\n            \"claude_recommendations\": [],\n            \"fix_commands\": [],\n            \"priority_fixes\": [], (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[826:848]\n==scripts.version_keeper_1:[797:819]\n            except Exception as e:\n                print(f\"  \u26a0\ufe0f Error parsing {py_file}: {e}\")\n\n        # Detect competing implementations\n        duplicates[\"competing_implementations\"] = (\n            self.detect_competing_implementations()\n        )\n\n        # Generate recommendations\n        if duplicates[\"duplicate_functions\"]:\n            duplicates[\"recommendations\"].append(\n                \"Remove duplicate function implementations\"\n            )\n        if duplicates[\"competing_implementations\"]:\n            duplicates[\"recommendations\"].append(\n                \"Consolidate competing implementations into single modules\"\n            )\n        if duplicates[\"similar_classes\"]:\n            duplicates[\"recommendations\"].append(\n                \"Consider merging similar class implementations\"\n            )\n        if duplicates[\"redundant_files\"]: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1473:1500]\n==scripts.version_keeper_1:[1268:1295]\n                        }\n                    )\n\n        return fixes\n\n    def generate_security_fixes(\n        self,\n        tool: str,\n        stdout: str,\n        stderr: str,\n    ) -> List[Dict[str, str]]:\n        \"\"\"Generate security fix recommendations\"\"\"\n        fixes = []\n\n        if tool == \"bandit\":\n            try:\n                if stdout:\n                    bandit_data = json.loads(stdout)\n                    for result in bandit_data.get(\"results\", [])[\n                        :3\n                    ]:  # Limit to 3 issues\n                        fixes.append(\n                            {\n                                \"type\": \"security_fix\",\n                                \"file\": result.get(\"filename\"),\n                                \"line\": result.get(\"line_number\"),\n                                \"severity\": result.get(\"issue_severity\"), (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==core.mcp-manager:[261:279]\n==core.mcp-router:[214:232]\n        url = f\"http://localhost:{port}/sse\"\n        payload = {\n            \"jsonrpc\": \"2.0\",\n            \"method\": \"tools/call\",\n            \"params\": {\"name\": tool, \"arguments\": data},\n            \"id\": 1,\n        }\n\n        try:\n            response = requests.post(url, json=payload, stream=True, timeout=5)\n\n            for line in response.iter_lines():\n                if line:\n                    line = line.decode(\"utf-8\")\n                    if line.startswith(\"data: \"):\n                        data = line[6:]\n                        if data:\n                            result = json.loads(data) (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1687:1707]\n==scripts.version_keeper_1:[1535:1555]\n        ]\n\n        # First pass: collect all functions and imports\n        for py_file in python_files:\n            try:\n                content = py_file.read_text()\n                tree = ast.parse(content)\n\n                # Collect function definitions\n                file_functions = []\n                for node in ast.walk(tree):\n                    if isinstance(node, ast.FunctionDef):\n                        file_functions.append(node.name)\n                    elif isinstance(node, ast.ClassDef):\n                        # Collect class methods\n                        for item in node.body:\n                            if isinstance(\n                                item,\n                                ast.FunctionDef,\n                            ): (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[707:728]\n==scripts.version_keeper_1:[721:742]\n                continue\n\n            try:\n                content = py_file.read_text()\n                file_hash = hashlib.md5(content.encode()).hexdigest()\n\n                # Check for duplicate file content\n                if file_hash in file_hashes:\n                    duplicates[\"redundant_files\"].append(\n                        {\n                            \"file1\": str(file_hashes[file_hash]),\n                            \"file2\": str(py_file),\n                            \"hash\": file_hash,\n                        }\n                    )\n                else:\n                    file_hashes[file_hash] = py_file\n\n                # Parse AST to find functions and classes\n                tree = ast.parse(content)\n (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1770:1783]\n==scripts.version_keeper_1:[1621:1634]\n                            attr_name = node.func.attr\n                            if isinstance(\n                                node.func.value,\n                                ast.Name,\n                            ):\n                                obj_name = node.func.value.id\n                                full_call = f\"{obj_name}.{attr_name}\"\n                                if not self.is_method_defined(\n                                    full_call,\n                                    py_file,\n                                    function_registry,\n                                    import_registry,\n                                ): (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1722:1754]\n==scripts.version_keeper_1:[1574:1605]\n                import_registry[str(py_file)] = file_imports\n\n            except Exception as e:\n                connections_report[\"connection_errors\"].append(\n                    {\n                        \"file\": str(py_file),\n                        \"error\": f\"Failed to parse: {e}\",\n                        \"type\": \"parse_error\",\n                    }\n                )\n\n        # Second pass: check for broken connections\n        for py_file in python_files:\n            try:\n                content = py_file.read_text()\n                tree = ast.parse(content)\n\n                # Check function calls\n                for node in ast.walk(tree):\n                    if isinstance(node, ast.Call):\n                        if isinstance(\n                            node.func,\n                            ast.Name,\n                        ):\n                            func_name = node.func.id\n                            if not self.is_function_defined(\n                                func_name,\n                                py_file,\n                                function_registry,\n                                import_registry,\n                            ):\n                                # Smart filtering for real issues only (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1784:1798]\n==scripts.version_keeper_1:[1637:1651]\n                                        {\n                                            \"file\": str(py_file),\n                                            \"line\": node.lineno,\n                                            \"function\": full_call,\n                                            \"type\": \"undefined_method_call\",\n                                        }\n                                    )\n\n                # Check imports\n                for node in ast.walk(tree):\n                    if isinstance(node, ast.ImportFrom):\n                        if node.module:\n                            module_path = self.resolve_module_path(\n                                node.module, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2500:2513]\n==scripts.version_keeper_1:[2291:2304]\n            print(\"\\n\ud83d\udcca CLAUDE LINT REPORT\")\n            print(\"=\" * 50)\n\n            # Show priority fixes\n            if lint_report[\"priority_fixes\"]:\n                print(\n                    f\"\\n\ud83d\udea8 PRIORITY FIXES ({len(lint_report['priority_fixes'])} total):\"\n                )\n                for i, pfix in enumerate(\n                    lint_report[\"priority_fixes\"][:10],\n                    1,\n                ):  # Show top 10\n                    priority_icon = ( (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1802:1822]\n==scripts.version_keeper_1:[1657:1677]\n                                    {\n                                        \"file\": str(py_file),\n                                        \"line\": node.lineno,\n                                        \"module\": node.module,\n                                        \"type\": \"missing_module\",\n                                    }\n                                )\n\n            except Exception as e:\n                connections_report[\"connection_errors\"].append(\n                    {\n                        \"file\": str(py_file),\n                        \"error\": f\"Failed to analyze connections: {e}\",\n                        \"type\": \"analysis_error\",\n                    }\n                )\n\n        # Generate recommendations\n        if connections_report[\"undefined_functions\"]:\n            connections_report[\"recommendations\"].append( (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1615:1628]\n==scripts.version_keeper_1:[1447:1460]\n                    },\n                }\n            )\n\n        # Priority 3: Connection issues\n        connections = lint_report.get(\"connection_issues\", {})\n        for func in connections.get(\"undefined_functions\", []):\n            priority_fixes.append(\n                {\n                    \"priority\": 3,\n                    \"category\": \"connections\",\n                    \"fix\": {\n                        \"type\": \"fix_undefined_function\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[23:40]\n==scripts.version_keeper_1:[23:39]\ntry:\n    from claude_agent_protocol import TaskType, get_protocol\n    PROTOCOL_AVAILABLE = True\nexcept ImportError:\n    PROTOCOL_AVAILABLE = False\n\n\nclass MCPVersionKeeper:\n    def __init__(self, repo_path: Path = None, session_dir: Path = None):\n        self.repo_path = repo_path or Path.cwd()\n        self.version_file = self.repo_path / \"pyproject.toml\"\n        self.changelog_file = self.repo_path / \"CHANGELOG.md\"\n        self.package_dir = self.repo_path / \"src\"\n        self.docs_dir = self.repo_path / \"docs\"\n\n        self.current_version = self.get_current_version() (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2588:2603]\n==scripts.version_keeper_1:[2358:2373]\n            print(\"\\n\u2705 Lint-only mode complete\")\n            return\n\n    # Calculate new version\n    new_version = keeper.bump_version(bump_type)\n    print(f\"\ud83c\udfaf Target version: {new_version}\")\n\n    if dry_run:\n        print(\"\ud83d\udd0d DRY RUN MODE - No changes will be made\")\n\n    # Run quality checks (enhanced with Claude integration if requested)\n    if claude_lint:\n        lint_report = keeper.run_claude_integrated_linting(\n            output_dir=Path(output_dir) if output_dir else None,\n            session_id=session_id, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2554:2565]\n==scripts.version_keeper_1:[2342:2353]\n                )\n\n            with open(report_file, \"w\") as f:\n                json.dump(\n                    lint_report,\n                    f,\n                    indent=2,\n                    default=str,\n                )\n            print(f\"\\n\ud83d\udcca Detailed Claude lint report saved: {report_file}\")\n            print(\"\\n\ud83d\udea8 FRESH REPORT READY \ud83d\udea8\") (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2161:2181]\n==scripts.version_keeper_1:[2037:2057]\n        if not compatibility[\"compatible\"]:\n            report[\"recommendations\"].append(\n                \"Review breaking changes and update documentation\"\n            )\n\n        if len(compatibility[\"api_changes\"]) > 0:\n            report[\"recommendations\"].append(\n                \"Consider bumping major version for API changes\"\n            )\n\n        return report\n\n    def all_checks_passed(\n        self,\n        checks: Dict[str, bool],\n        tests: Dict[str, bool],\n        compatibility: Dict[str, Any],\n    ) -> bool:\n        \"\"\"Check if all validation passes\"\"\"\n        return ( (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1447:1472]\n==scripts.version_keeper_1:[1238:1263]\n                        }\n                    )\n\n        elif tool == \"flake8\":\n            if stdout:\n                # Parse flake8 errors\n                errors = re.findall(\n                    r\"(.+?):(\\d+):(\\d+): (.+?) (.+)\",\n                    stdout,\n                )\n                for (\n                    file_path,\n                    line_num,\n                    col_num,\n                    code,\n                    msg,\n                ) in errors[:5]:\n                    fixes.append(\n                        {\n                            \"type\": \"manual_fix\",\n                            \"file\": file_path,\n                            \"line\": line_num,\n                            \"column\": col_num,\n                            \"code\": code,\n                            \"message\": msg, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[849:864]\n==scripts.version_keeper_1:[823:836]\n        return duplicates\n\n    def should_skip_file(self, file_path: Path) -> bool:\n        \"\"\"Check if file should be skipped during duplicate detection\"\"\"\n        skip_patterns = [\n            \"__pycache__\",\n            \".git\",\n            \"venv\",\n            \"env\",\n            \".pytest_cache\",\n            \"node_modules\",\n            \"dist\",\n            \"build\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[271:281]\n==scripts.version_keeper_1:[244:254]\n            checks[\"bandit\"] = self.run_command(\n                [\n                    \"bandit\",\n                    \"-r\",\n                    \"scripts/\",\n                    \"core/\",\n                    \"guardrails/\",\n                    \"-f\",\n                    \"json\",\n                    \"-o\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2698:2711]\n==scripts.version_keeper_1:[2474:2487]\n        )\n\n    elif report[\"overall_status\"] == \"FAIL\":\n        print(\"\\n\u274c Validation failed - version update aborted\")\n        print(\"Please fix issues and run again\")\n        sys.exit(1)\n\n    elif dry_run:\n        print(\"\\n\ud83d\udd0d Dry run complete - no changes applied\")\n\n\nif __name__ == \"__main__\":\n    main() (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2527:2540]\n==scripts.version_keeper_1:[2313:2326]\n            if lint_report[\"claude_recommendations\"]:\n                print(\"\\n\ud83e\udd16 CLAUDE RECOMMENDATIONS:\")\n                for rec in lint_report[\"claude_recommendations\"]:\n                    print(f\"  \u2022 {rec}\")\n\n            # Show automated fix commands\n            if lint_report[\"fix_commands\"]:\n                print(\"\\n\u26a1 AUTO-FIX COMMANDS:\")\n                for cmd in lint_report[\"fix_commands\"]:\n                    print(f\"  \u2022 {cmd}\")\n\n            # Save detailed report\n            if output_dir: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2038:2048]\n==scripts.version_keeper_1:[1898:1908]\n                    function_name = (\n                        fix.get(\"description\", \"\")\n                        .split(\"function \")[-1]\n                        .split(\" in\")[0]\n                    )\n\n                    if self.would_break_dependencies(\n                        file_path,\n                        function_name,\n                    ): (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1709:1720]\n==scripts.version_keeper_1:[1559:1570]\n                function_registry[str(py_file)] = file_functions\n\n                # Collect imports\n                file_imports = []\n                for node in ast.walk(tree):\n                    if isinstance(node, ast.Import):\n                        for alias in node.names:\n                            file_imports.append(alias.name)\n                    elif isinstance(node, ast.ImportFrom):\n                        if node.module:\n                            for alias in node.names: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1412:1422]\n==scripts.version_keeper_1:[1199:1209]\n                    }\n                )\n\n        elif tool == \"isort\":\n            if \"ERROR\" in stderr or \"Skipped\" in stdout:\n                fixes.append(\n                    {\n                        \"type\": \"auto_fix\",\n                        \"command\": \"isort scripts/ core/ guardrails/\",\n                        \"description\": \"Sort imports with isort\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1172:1184]\n==scripts.version_keeper_1:[973:984]\n        }\n\n        # Run quality checks with detailed output\n        quality_tools = [\n            \"black\",\n            \"isort\",\n            \"mypy\",\n            \"flake8\",\n            \"pylint\",\n        ]\n\n        for tool in quality_tools: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[808:819]\n==scripts.version_keeper_1:[760:770]\n                                        \"line2\": node.lineno,\n                                    }\n                                )\n                        else:\n                            functions_map[func_signature] = {\n                                \"file\": py_file,\n                                \"line\": node.lineno,\n                                \"name\": node.name,\n                            }\n\n                    # Recursively process child nodes (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[782:792]\n==scripts.version_keeper_1:[787:797]\n                                    \"line2\": node.lineno,\n                                }\n                            )\n                        else:\n                            classes_map[class_signature] = {\n                                \"file\": py_file,\n                                \"line\": node.lineno,\n                                \"name\": node.name,\n                            }\n (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[439:453]\n==scripts.version_keeper_1:[442:456]\n            compatibility[\"compatible\"] = (\n                len(compatibility[\"breaking_changes\"]) == 0\n                and len(compatibility[\"api_changes\"]) == 0\n            )\n\n        except subprocess.SubprocessError as e:\n            print(f\"  \u274c Failed to validate compatibility: {e}\")\n            compatibility[\"compatible\"] = False\n\n        return compatibility\n\n    def is_critical_file(self, file_path: Path) -> bool:\n        \"\"\"Check if file is critical for compatibility\"\"\"\n        critical_patterns = [ (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==core.mcp-mem0-simple:[39:47]\n==core.mcp-test-framework:[180:188]\n            for line in response.iter_lines():\n                if line:\n                    line = line.decode(\"utf-8\")\n                    if line.startswith(\"data: \"):\n                        data = line[6:]\n                        if data:\n                            try:\n                                result = json.loads(data) (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2382:2395]\n==scripts.version_keeper_1:[2168:2181]\n    print(\"\ud83d\ude80 MCP System Version Keeper v2.0\")\n    print(\"=\" * 50)\n\n    # Initialize with protocol support\n    session_path = Path(session_dir) if session_dir else None\n    keeper = MCPVersionKeeper(session_dir=session_path)\n\n    print(f\"\ud83d\udccd Current version: {keeper.current_version}\")\n    print(f\"\ud83c\udf3f Current branch: {keeper.git_branch}\")\n\n    # Handle comprehensive lint mode\n    if comprehensive_lint:\n        claude_lint = True (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1503:1512]\n==scripts.version_keeper_1:[1305:1314]\n                            }\n                        )\n            except json.JSONDecodeError:\n                pass\n\n        elif tool == \"safety\":\n            try:\n                if stdout:\n                    safety_data = json.loads(stdout) (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1141:1152]\n==scripts.version_keeper_1:[943:954]\n        )\n\n        # Update protocol if available\n        if self.protocol:\n            self.protocol.update_phase(\"linting\", {\n                \"lint_type\": \"quick\" if quick_check else \"comprehensive\",\n                \"started_at\": datetime.now().isoformat()\n            })\n\n        lint_report = {\n            \"version\": self.current_version, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[282:290]\n==scripts.version_keeper_1:[255:263]\n                ]\n            )\n            checks[\"safety\"] = self.run_command(\n                [\n                    \"safety\",\n                    \"check\",\n                    \"--json\",\n                    \"--output\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[95:107]\n==scripts.version_keeper_1:[90:102]\n            new_version = current.next_major()\n        elif bump_type == \"minor\":\n            new_version = current.next_minor()\n        elif bump_type == \"patch\":\n            new_version = current.next_patch()\n        else:\n            raise ValueError(f\"Invalid bump type: {bump_type}\")\n\n        return str(new_version)\n\n    def update_version_files(self, new_version: str):\n        \"\"\"Update version in all relevant files\"\"\" (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2464:2472]\n==scripts.version_keeper_1:[2256:2264]\n                    )\n                if len(connections[\"undefined_functions\"]) > 10:\n                    print(\n                        f\"  ... and {len(connections['undefined_functions']) - 10} more\"\n                    )\n\n            if connections[\"broken_imports\"]:\n                print(\"\\n\ud83d\udce6 BROKEN IMPORTS:\") (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1823:1830]\n==scripts.version_keeper_1:[1679:1686]\n            )\n        if connections_report[\"broken_imports\"]:\n            connections_report[\"recommendations\"].append(\n                f\"Fix {len(connections_report['broken_imports'])} broken imports\"\n            )\n        if connections_report[\"connection_errors\"]:\n            connections_report[\"recommendations\"].append( (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1569:1582]\n==scripts.version_keeper_1:[1383:1398]\n            )\n        if connections.get(\"broken_imports\"):\n            recommendations.append(\n                f\"\ud83d\udce6 Fix {len(connections['broken_imports'])} broken imports\"\n            )\n\n        return recommendations\n\n    def generate_fix_commands(self, lint_report: Dict[str, Any]) -> List[str]:\n        \"\"\"Generate automated fix commands\"\"\"\n        commands = []\n\n        # Auto-fixable quality issues (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1210:1219]\n==scripts.version_keeper_1:[1036:1043]\n        total_issues = sum([\n            len(tool_data.get(\"fixes\", []))\n            for tool_data in lint_report[\"quality_issues\"].values()\n        ]) + sum([\n            len(tool_data.get(\"fixes\", []))\n            for tool_data in lint_report[\"security_issues\"].values()\n        ]) (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2418:2426]\n==scripts.version_keeper_1:[705:714]\n        duplicates = {\n            \"duplicate_functions\": [],\n            \"competing_implementations\": [],\n            \"similar_classes\": [],\n            \"redundant_files\": [],\n            \"recommendations\": [],\n        }\n\n        # Scan all Python files (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[670:677]\n==scripts.version_keeper_1:[669:676]\n        try:\n            result = subprocess.run(\n                cmd,\n                cwd=self.repo_path,\n                capture_output=True,\n                text=True,\n            ) (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[657:664]\n==scripts.version_keeper_1:[684:691]\n        try:\n            result = subprocess.run(\n                cmd,\n                cwd=self.repo_path,\n                capture_output=True,\n                text=True,\n            ) (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[415:432]\n==scripts.version_keeper_1:[414:431]\n                if file_path.suffix == \".py\" and any(\n                    dir in str(file_path)\n                    for dir in [\n                        \"scripts/\",\n                        \"core/\",\n                        \"guardrails/\",\n                    ]\n                ):\n                    api_changes = self.detect_api_changes(\n                        file_path,\n                        base_branch,\n                    )\n                    if api_changes:\n                        compatibility[\"api_changes\"].extend(api_changes)\n\n                # Check template changes\n                if \"templates/\" in str(file_path): (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1372:1379]\n==scripts.version_keeper_1:[246:253]\n                    \"bandit\",\n                    \"-r\",\n                    \"scripts/\",\n                    \"core/\",\n                    \"guardrails/\",\n                    \"-f\",\n                    \"json\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[273:280]\n==scripts.version_keeper_1:[1157:1164]\n                \"bandit\",\n                \"-r\",\n                \"scripts/\",\n                \"core/\",\n                \"guardrails/\",\n                \"-f\",\n                \"json\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[245:252]\n==scripts.version_keeper_1:[267:274]\n            checks[\"bandit\"] = self.run_command(\n                [\n                    \"bandit\",\n                    \"-r\",\n                    \"scripts/\",\n                    \"core/\",\n                    \"guardrails/\", (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[211:220]\n==scripts.version_keeper_1:[199:206]\n                \"core/\",\n                \"scripts/\",\n                \"guardrails/\",\n                \"tests/\",\n                \"utils/\",\n            ]\n        )\n\n        # Type checking (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[200:207]\n==scripts.version_keeper_1:[210:219]\n                \"core/\",\n                \"scripts/\",\n                \"guardrails/\",\n                \"tests/\",\n                \"utils/\",\n            ]\n        )\n\n        # Type checking (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[41:50]\n==scripts.version_keeper_1:[39:47]\n        self.git_branch = self.get_current_branch()\n\n        # Protocol integration\n        self.protocol = None  # Enhanced with sync monitoring and real-time validation\n        self.session_dir = session_dir\n        if PROTOCOL_AVAILABLE and session_dir:\n            claude_session = session_dir / \".claude-session\"\n            if claude_session.exists():\n                self.protocol = get_protocol(claude_session) (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2225:2232]\n==scripts.version_keeper_working:[69:76]\n            \"summary\": {\n                \"total_issues\": total_issues,\n                \"fixes_applied\": 0,\n                \"remaining_issues\": total_issues,\n                \"success_rate\": 0.0 if total_issues > 0 else 100.0\n            },\n            \"details\": { (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==core.mcp-manager:[272:278]\n==core.mcp-mem0-simple:[39:45]\n            for line in response.iter_lines():\n                if line:\n                    line = line.decode(\"utf-8\")\n                    if line.startswith(\"data: \"):\n                        data = line[6:]\n                        if data: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==core.mcp-router:[225:231]\n==core.mcp-test-framework:[180:186]\n            for line in response.iter_lines():\n                if line:\n                    line = line.decode(\"utf-8\")\n                    if line.startswith(\"data: \"):\n                        data = line[6:]\n                        if data: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2442:2449]\n==scripts.version_keeper_1:[2227:2234]\n            if duplicates[\"recommendations\"]:\n                print(\"\\n\ud83d\udca1 RECOMMENDATIONS:\")\n                for rec in duplicates[\"recommendations\"]:\n                    print(f\"  \u2022 {rec}\")\n\n        if check_connections:\n            print(\"\\n\ud83d\udd17 Running connections linter...\") (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1513:1519]\n==scripts.version_keeper_1:[1317:1323]\n                        fixes.append(\n                            {\n                                \"type\": \"dependency_fix\",\n                                \"package\": vuln.get(\"package_name\"),\n                                \"version\": vuln.get(\"installed_version\"),\n                                \"vulnerability\": vuln.get(\"vulnerability_id\"), (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1296:1302]\n==scripts.version_keeper_1:[1076:1082]\n            critical_fixes = []\n            for tool, data in lint_report[\"quality_issues\"].items():\n                for fix in data.get(\"fixes\", []):\n                    if fix.get(\"type\") == \"auto_fix\":\n                        critical_fixes.append({\n                            \"tool\": tool, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1250:1257]\n==scripts.version_keeper_1:[1043:1050]\n        lint_report[\"total_issues\"] = total_issues\n        lint_report[\"files_analyzed\"] = self.files_scanned\n        # Performance metrics\n        if self.lint_start_time:\n            lint_duration = time.time() - self.lint_start_time\n            lint_report[\"performance\"] = {\n                \"duration_seconds\": lint_duration, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1185:1192]\n==scripts.version_keeper_1:[987:995]\n            lint_report[\"quality_issues\"][tool] = {\n                \"passed\": success,\n                \"stdout\": stdout,\n                \"stderr\": stderr,\n                \"fixes\": self.generate_tool_fixes(tool, stdout, stderr),\n            }\n\n        # Run security checks with detailed output (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[773:779]\n==scripts.version_keeper_1:[771:777]\n                        class_signature = self.get_class_signature(node)\n                        if class_signature in classes_map:\n                            duplicates[\"similar_classes\"].append(\n                                {\n                                    \"class\": node.name,\n                                    \"signature\": class_signature, (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.claude_quality_patcher:[3462:3469]\n==scripts.version_keeper:[2576:2583]\n                )\n\n                if output_file:\n                    output_path = Path(output_file)\n                    output_path.parent.mkdir(parents=True, exist_ok=True)\n                    with open(output_path, 'w') as f:\n                        json.dump(json_report, f, indent=2, default=str) (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[2482:2489]\n==scripts.version_keeper_1:[2275:2281]\n            if connections[\"recommendations\"]:\n                print(\"\\n\ud83d\udca1 CONNECTION RECOMMENDATIONS:\")\n                for rec in connections[\"recommendations\"]:\n                    print(f\"  \u2022 {rec}\")\n\n        if claude_lint: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1278:1286]\n==scripts.version_keeper_1:[1062:1069]\n            with open(report_file, \"w\") as f:\n                json.dump(lint_report, f, indent=2)\n            print(f\"\ud83d\udcca Lint report saved to: {report_file}\")\n            lint_report[\"report_file\"] = str(report_file)\n\n        # Protocol integration - update state and create tasks\n        if self.protocol: (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[1267:1273]\n==scripts.version_keeper_1:[1057:1062]\n        if output_dir:\n            output_dir = Path(output_dir)\n            output_dir.mkdir(parents=True, exist_ok=True)\n            timestamp = datetime.now().strftime(\"%Y%m%d-%H%M%S\")\n            report_file = output_dir / f\"claude-lint-report-{timestamp}.json\" (duplicate-code)\ncore/auto-discovery-system.py:1:0: R0801: Similar lines in 2 files\n==scripts.version_keeper:[247:252]\n==scripts.version_keeper_1:[1157:1162]\n                    \"bandit\",\n                    \"-r\",\n                    \"scripts/\",\n                    \"core/\",\n                    \"guardrails/\", (duplicate-code)\n\n------------------------------------------------------------------\nYour code has been rated at 7.99/10 (previous run: 7.99/10, +0.00)\n\n",
        "stderr": "",
        "fixes": []
      }
    },
    "security_issues": {
      "bandit": {
        "passed": false,
        "stdout": "{\n  \"errors\": [\n    {\n      \"filename\": \"scripts/claude_code_integration_loop.py\",\n      \"reason\": \"syntax error while parsing AST from file\"\n    }\n  ],\n  \"generated_at\": \"2025-08-21T16:40:23Z\",\n  \"metrics\": {\n    \"_totals\": {\n      \"CONFIDENCE.HIGH\": 70,\n      \"CONFIDENCE.LOW\": 1,\n      \"CONFIDENCE.MEDIUM\": 1,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 14,\n      \"SEVERITY.LOW\": 56,\n      \"SEVERITY.MEDIUM\": 2,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 14736,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/auto-discovery-system.py\": {\n      \"CONFIDENCE.HIGH\": 5,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 5,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 786,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/claude-code-mcp-bridge.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 435,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/direct-mem0-usage.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 58,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/mcp-create-server.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 878,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/mcp-manager.py\": {\n      \"CONFIDENCE.HIGH\": 7,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 6,\n      \"SEVERITY.LOW\": 1,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 299,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/mcp-mem0-client.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 117,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/mcp-mem0-simple.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 1,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 1,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 110,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/mcp-router.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 2,\n      \"SEVERITY.LOW\": 1,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 278,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/mcp-test-framework.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 1,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 2,\n      \"SEVERITY.LOW\": 1,\n      \"SEVERITY.MEDIUM\": 1,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 439,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"core/mcp-upgrader.py\": {\n      \"CONFIDENCE.HIGH\": 8,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 2,\n      \"SEVERITY.LOW\": 6,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 1320,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"guardrails/__init__.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 0,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"scripts/claude_agent_protocol.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 497,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"scripts/claude_code_integration_loop.py\": {\n      \"loc\": 2084,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"scripts/claude_oversight_loop.py\": {\n      \"CONFIDENCE.HIGH\": 0,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 0,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 212,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"scripts/claude_quality_patcher.py\": {\n      \"CONFIDENCE.HIGH\": 10,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 10,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 2700,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"scripts/version_keeper.py\": {\n      \"CONFIDENCE.HIGH\": 16,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 1,\n      \"SEVERITY.LOW\": 15,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 2201,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"scripts/version_keeper_1.py\": {\n      \"CONFIDENCE.HIGH\": 15,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 1,\n      \"SEVERITY.LOW\": 14,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 2086,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    },\n    \"scripts/version_keeper_working.py\": {\n      \"CONFIDENCE.HIGH\": 3,\n      \"CONFIDENCE.LOW\": 0,\n      \"CONFIDENCE.MEDIUM\": 0,\n      \"CONFIDENCE.UNDEFINED\": 0,\n      \"SEVERITY.HIGH\": 0,\n      \"SEVERITY.LOW\": 3,\n      \"SEVERITY.MEDIUM\": 0,\n      \"SEVERITY.UNDEFINED\": 0,\n      \"loc\": 236,\n      \"nosec\": 0,\n      \"skipped_tests\": 0\n    }\n  },\n  \"results\": [\n    {\n      \"code\": \"11 import re\\n12 import subprocess\\n13 import sys\\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"core/auto-discovery-system.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 12,\n      \"line_range\": [\n        12\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"407             # Get running processes\\n408             result = subprocess.run(\\n409                 [\\\"ps\\\", \\\"aux\\\"],\\n410                 capture_output=True,\\n411                 text=True,\\n412             )\\n413             processes = result.stdout.lower()\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/auto-discovery-system.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 408,\n      \"line_range\": [\n        408,\n        409,\n        410,\n        411,\n        412\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"407             # Get running processes\\n408             result = subprocess.run(\\n409                 [\\\"ps\\\", \\\"aux\\\"],\\n410                 capture_output=True,\\n411                 text=True,\\n412             )\\n413             processes = result.stdout.lower()\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/auto-discovery-system.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 408,\n      \"line_range\": [\n        408,\n        409,\n        410,\n        411,\n        412\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"523                 return False\\n524             subprocess.run(\\n525                 [tool, \\\"--version\\\"],\\n526                 capture_output=True,\\n527                 timeout=5,\\n528                 check=False,\\n529             )\\n530             return True\\n\",\n      \"col_offset\": 12,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/auto-discovery-system.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 524,\n      \"line_range\": [\n        524,\n        525,\n        526,\n        527,\n        528,\n        529\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"766 \\n767                     result = subprocess.run(\\n768                         cmd_parts,\\n769                         capture_output=True,\\n770                         text=True,\\n771                         timeout=30,\\n772                     )\\n773 \\n\",\n      \"col_offset\": 29,\n      \"end_col_offset\": 21,\n      \"filename\": \"core/auto-discovery-system.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 767,\n      \"line_range\": [\n        767,\n        768,\n        769,\n        770,\n        771,\n        772\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"9 import signal\\n10 import subprocess\\n11 import sys\\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"core/mcp-manager.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 10,\n      \"line_range\": [\n        10\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"75                     f\\\"docker ps -q -f name={dep_config['name']}\\\",\\n76                     shell=True,\\n77                     capture_output=True,\\n78                     text=True,\\n79                 )\\n80 \\n81                 if not result.stdout.strip():\\n82                     # Try to start existing container\\n\",\n      \"col_offset\": 25,\n      \"end_col_offset\": 17,\n      \"filename\": \"core/mcp-manager.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 76,\n      \"line_range\": [\n        74,\n        75,\n        76,\n        77,\n        78,\n        79\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"84                         f\\\"docker start {dep_config['name']}\\\",\\n85                         shell=True,\\n86                         capture_output=True,\\n87                     )\\n88 \\n89                     if start_result.returncode != 0:\\n90                         # Create new container\\n\",\n      \"col_offset\": 35,\n      \"end_col_offset\": 21,\n      \"filename\": \"core/mcp-manager.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 85,\n      \"line_range\": [\n        83,\n        84,\n        85,\n        86,\n        87\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"107                         )\\n108                         subprocess.run(cmd, shell=True, check=True)\\n109                         time.sleep(3)  # Wait for container to start\\n\",\n      \"col_offset\": 24,\n      \"end_col_offset\": 67,\n      \"filename\": \"core/mcp-manager.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 108,\n      \"line_range\": [\n        108\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"119                             dep_config[\\\"command\\\"],\\n120                             shell=True,\\n121                             stdout=subprocess.DEVNULL,\\n122                             stderr=subprocess.DEVNULL,\\n123                         )\\n124                         time.sleep(2)\\n125 \\n126         return True\\n\",\n      \"col_offset\": 24,\n      \"end_col_offset\": 25,\n      \"filename\": \"core/mcp-manager.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 120,\n      \"line_range\": [\n        118,\n        119,\n        120,\n        121,\n        122,\n        123\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"154         if foreground:\\n155             subprocess.run(command, shell=True, cwd=path)\\n156             return {\\\"success\\\": True, \\\"message\\\": \\\"Server stopped\\\"}\\n\",\n      \"col_offset\": 12,\n      \"end_col_offset\": 57,\n      \"filename\": \"core/mcp-manager.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 155,\n      \"line_range\": [\n        155\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"159                 command,\\n160                 shell=True,\\n161                 cwd=path,\\n162                 stdout=subprocess.PIPE,\\n163                 stderr=subprocess.PIPE,\\n164             )\\n165 \\n166             self.running_servers[server_name] = {\\n167                 \\\"process\\\": process,\\n\",\n      \"col_offset\": 22,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/mcp-manager.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 160,\n      \"line_range\": [\n        158,\n        159,\n        160,\n        161,\n        162,\n        163,\n        164\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"28             # Send POST request with SSE headers\\n29             response = requests.post(\\n30                 f\\\"{self.base_url}/sse\\\",\\n31                 json=payload,\\n32                 headers={\\n33                     \\\"Content-Type\\\": \\\"application/json\\\",\\n34                     \\\"Accept\\\": \\\"text/event-stream\\\",\\n35                 },\\n36                 stream=True,\\n37             )\\n38 \\n\",\n      \"col_offset\": 23,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/mcp-mem0-simple.py\",\n      \"issue_confidence\": \"LOW\",\n      \"issue_cwe\": {\n        \"id\": 400,\n        \"link\": \"https://cwe.mitre.org/data/definitions/400.html\"\n      },\n      \"issue_severity\": \"MEDIUM\",\n      \"issue_text\": \"Call to requests without timeout\",\n      \"line_number\": 29,\n      \"line_range\": [\n        29,\n        30,\n        31,\n        32,\n        33,\n        34,\n        35,\n        36,\n        37\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b113_request_without_timeout.html\",\n      \"test_id\": \"B113\",\n      \"test_name\": \"request_without_timeout\"\n    },\n    {\n      \"code\": \"9 import re\\n10 import subprocess\\n11 import sys\\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"core/mcp-router.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 10,\n      \"line_range\": [\n        10\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"162             cmd = f\\\"cross_platform.get_path("home") / mcp {server} status\\\"\\n163             result = subprocess.run(cmd, shell=True, capture_output=True, text=True)\\n164 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 84,\n      \"filename\": \"core/mcp-router.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 163,\n      \"line_range\": [\n        163\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"171                 result = subprocess.run(\\n172                     cmd, shell=True, capture_output=True, text=True\\n173                 )\\n174                 results[server] = result.returncode == 0\\n175 \\n\",\n      \"col_offset\": 25,\n      \"end_col_offset\": 17,\n      \"filename\": \"core/mcp-router.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 172,\n      \"line_range\": [\n        171,\n        172,\n        173\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"8 import json\\n9 import subprocess\\n10 import sys\\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"core/mcp-test-framework.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 9,\n      \"line_range\": [\n        9\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"369                 f\\\"mcp {server_name} status\\\",\\n370                 shell=True,\\n371                 capture_output=True,\\n372                 text=True,\\n373             )\\n374 \\n375             if \\\"running\\\" in result.stdout.lower():\\n376                 print(f\\\"Server {server_name} is already running\\\")\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/mcp-test-framework.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 370,\n      \"line_range\": [\n        368,\n        369,\n        370,\n        371,\n        372,\n        373\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"381                 f\\\"mcp {server_name} start\\\",\\n382                 shell=True,\\n383                 capture_output=True,\\n384                 text=True,\\n385             )\\n386 \\n387             if start_result.returncode == 0:\\n388                 print(f\\\"Server {server_name} started successfully\\\")\\n\",\n      \"col_offset\": 27,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/mcp-test-framework.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 382,\n      \"line_range\": [\n        380,\n        381,\n        382,\n        383,\n        384,\n        385\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"436                 \\\"tool\\\": \\\"list_directory\\\",\\n437                 \\\"args\\\": {\\\"path\\\": \\\"/tmp\\\"},\\n438             },\\n\",\n      \"col_offset\": 33,\n      \"end_col_offset\": 39,\n      \"filename\": \"core/mcp-test-framework.py\",\n      \"issue_confidence\": \"MEDIUM\",\n      \"issue_cwe\": {\n        \"id\": 377,\n        \"link\": \"https://cwe.mitre.org/data/definitions/377.html\"\n      },\n      \"issue_severity\": \"MEDIUM\",\n      \"issue_text\": \"Probable insecure usage of temp file/directory.\",\n      \"line_number\": 437,\n      \"line_range\": [\n        437\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b108_hardcoded_tmp_directory.html\",\n      \"test_id\": \"B108\",\n      \"test_name\": \"hardcoded_tmp_directory\"\n    },\n    {\n      \"code\": \"9 import shutil\\n10 import subprocess\\n11 import sys\\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"core/mcp-upgrader.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 10,\n      \"line_range\": [\n        10\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"138                     return version\\n139             except Exception:\\n140                 continue\\n141 \\n\",\n      \"col_offset\": 12,\n      \"end_col_offset\": 24,\n      \"filename\": \"core/mcp-upgrader.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Continue detected.\",\n      \"line_number\": 139,\n      \"line_range\": [\n        139,\n        140\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b112_try_except_continue.html\",\n      \"test_id\": \"B112\",\n      \"test_name\": \"try_except_continue\"\n    },\n    {\n      \"code\": \"165         try:\\n166             result = subprocess.run(\\n167                 [\\\"git\\\", \\\"describe\\\", \\\"--tags\\\", \\\"--abbrev=0\\\"],\\n168                 cwd=path,\\n169                 capture_output=True,\\n170                 text=True,\\n171             )\\n172             if result.returncode == 0:\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/mcp-upgrader.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 166,\n      \"line_range\": [\n        166,\n        167,\n        168,\n        169,\n        170,\n        171\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"165         try:\\n166             result = subprocess.run(\\n167                 [\\\"git\\\", \\\"describe\\\", \\\"--tags\\\", \\\"--abbrev=0\\\"],\\n168                 cwd=path,\\n169                 capture_output=True,\\n170                 text=True,\\n171             )\\n172             if result.returncode == 0:\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"core/mcp-upgrader.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 166,\n      \"line_range\": [\n        166,\n        167,\n        168,\n        169,\n        170,\n        171\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"173                 return result.stdout.strip().lstrip(\\\"v\\\")\\n174         except Exception:\\n175             pass\\n176         return None\\n\",\n      \"col_offset\": 8,\n      \"end_col_offset\": 16,\n      \"filename\": \"core/mcp-upgrader.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 174,\n      \"line_range\": [\n        174,\n        175\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"184                 return data.get(\\\"installed_modules\\\", [])\\n185             except Exception:\\n186                 pass\\n187         return []\\n\",\n      \"col_offset\": 12,\n      \"end_col_offset\": 20,\n      \"filename\": \"core/mcp-upgrader.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 185,\n      \"line_range\": [\n        185,\n        186\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"554                     command,\\n555                     shell=True,\\n556                     cwd=server.path,\\n557                     capture_output=True,\\n558                     text=True,\\n559                 )\\n560                 if result_cmd.returncode != 0:\\n561                     result.errors.append(f\\\"Command failed: {command}\\\")\\n562                     result.errors.append(f\\\"Error: {result_cmd.stderr}\\\")\\n\",\n      \"col_offset\": 29,\n      \"end_col_offset\": 17,\n      \"filename\": \"core/mcp-upgrader.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 555,\n      \"line_range\": [\n        553,\n        554,\n        555,\n        556,\n        557,\n        558,\n        559\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"651                     print(f\\\"  Rolling back: {command}\\\")\\n652                     subprocess.run(command, shell=True, cwd=server.path)\\n653 \\n\",\n      \"col_offset\": 20,\n      \"end_col_offset\": 72,\n      \"filename\": \"core/mcp-upgrader.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"subprocess call with shell=True identified, security issue.\",\n      \"line_number\": 652,\n      \"line_range\": [\n        652\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b602_subprocess_popen_with_shell_equals_true.html\",\n      \"test_id\": \"B602\",\n      \"test_name\": \"subprocess_popen_with_shell_equals_true\"\n    },\n    {\n      \"code\": \"12 import shutil\\n13 import subprocess\\n14 import sys\\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 13,\n      \"line_range\": [\n        13\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"163         try:\\n164             subprocess.run(\\n165                 cmd, capture_output=True, text=True, cwd=self.repo_path\\n166             )\\n167 \\n\",\n      \"col_offset\": 12,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 164,\n      \"line_range\": [\n        164,\n        165,\n        166\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"288                 # Run version keeper to generate new report\\n289                 result = subprocess.run(\\n290                     [\\n291                         \\\"python3\\\",\\n292                         str(version_keeper_path),\\n293                         \\\"--comprehensive-lint\\\",\\n294                         \\\"--lint-only\\\",\\n295                         \\\"--output-dir=reports/\\\",\\n296                     ],\\n297                     capture_output=True,\\n298                     text=True,\\n299                     cwd=self.repo_path,\\n300                 )\\n301 \\n\",\n      \"col_offset\": 25,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 289,\n      \"line_range\": [\n        289,\n        290,\n        291,\n        292,\n        293,\n        294,\n        295,\n        296,\n        297,\n        298,\n        299,\n        300\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"288                 # Run version keeper to generate new report\\n289                 result = subprocess.run(\\n290                     [\\n291                         \\\"python3\\\",\\n292                         str(version_keeper_path),\\n293                         \\\"--comprehensive-lint\\\",\\n294                         \\\"--lint-only\\\",\\n295                         \\\"--output-dir=reports/\\\",\\n296                     ],\\n297                     capture_output=True,\\n298                     text=True,\\n299                     cwd=self.repo_path,\\n300                 )\\n301 \\n\",\n      \"col_offset\": 25,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 289,\n      \"line_range\": [\n        289,\n        290,\n        291,\n        292,\n        293,\n        294,\n        295,\n        296,\n        297,\n        298,\n        299,\n        300\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"516                             )\\n517                 except Exception:\\n518                     pass\\n519 \\n\",\n      \"col_offset\": 16,\n      \"end_col_offset\": 24,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 517,\n      \"line_range\": [\n        517,\n        518\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"773                 # Run flake8 on specific line\\n774                 result = subprocess.run(\\n775                     [\\n776                         \\\"flake8\\\",\\n777                         \\\"--select\\\",\\n778                         error_code,\\n779                         \\\"--max-line-length=120\\\",\\n780                         file_path,\\n781                     ],\\n782                     capture_output=True,\\n783                     text=True,\\n784                 )\\n785 \\n\",\n      \"col_offset\": 25,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 774,\n      \"line_range\": [\n        774,\n        775,\n        776,\n        777,\n        778,\n        779,\n        780,\n        781,\n        782,\n        783,\n        784\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"773                 # Run flake8 on specific line\\n774                 result = subprocess.run(\\n775                     [\\n776                         \\\"flake8\\\",\\n777                         \\\"--select\\\",\\n778                         error_code,\\n779                         \\\"--max-line-length=120\\\",\\n780                         file_path,\\n781                     ],\\n782                     capture_output=True,\\n783                     text=True,\\n784                 )\\n785 \\n\",\n      \"col_offset\": 25,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 774,\n      \"line_range\": [\n        774,\n        775,\n        776,\n        777,\n        778,\n        779,\n        780,\n        781,\n        782,\n        783,\n        784\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"1637         import json\\n1638         import subprocess\\n1639         from pathlib import Path\\n\",\n      \"col_offset\": 8,\n      \"end_col_offset\": 25,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 1638,\n      \"line_range\": [\n        1638\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"1688 \\n1689             process = subprocess.run(\\n1690                 claude_cmd,\\n1691                 capture_output=True,\\n1692                 text=True,\\n1693                 timeout=30,  # 30 second timeout\\n1694                 cwd=str(Path.cwd()),\\n1695             )\\n1696 \\n\",\n      \"col_offset\": 22,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 1689,\n      \"line_range\": [\n        1689,\n        1690,\n        1691,\n        1692,\n        1693,\n        1694,\n        1695\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"1826 \\n1827         except Exception:\\n1828             pass  # If we can't check, assume it's available\\n1829 \\n\",\n      \"col_offset\": 8,\n      \"end_col_offset\": 16,\n      \"filename\": \"scripts/claude_quality_patcher.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 1827,\n      \"line_range\": [\n        1827,\n        1828\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"11 import shutil\\n12 import subprocess\\n13 import sys\\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 12,\n      \"line_range\": [\n        12\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"75         try:\\n76             result = subprocess.run(\\n77                 [\\n78                     \\\"git\\\",\\n79                     \\\"branch\\\",\\n80                     \\\"--show-current\\\",\\n81                 ],\\n82                 capture_output=True,\\n83                 text=True,\\n84                 cwd=self.repo_path,\\n85             )\\n86             return result.stdout.strip()\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 76,\n      \"line_range\": [\n        76,\n        77,\n        78,\n        79,\n        80,\n        81,\n        82,\n        83,\n        84,\n        85\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"75         try:\\n76             result = subprocess.run(\\n77                 [\\n78                     \\\"git\\\",\\n79                     \\\"branch\\\",\\n80                     \\\"--show-current\\\",\\n81                 ],\\n82                 capture_output=True,\\n83                 text=True,\\n84                 cwd=self.repo_path,\\n85             )\\n86             return result.stdout.strip()\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 76,\n      \"line_range\": [\n        76,\n        77,\n        78,\n        79,\n        80,\n        81,\n        82,\n        83,\n        84,\n        85\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"389             # Get diff with base branch\\n390             result = subprocess.run(\\n391                 [\\n392                     \\\"git\\\",\\n393                     \\\"diff\\\",\\n394                     f\\\"origin/{base_branch}...HEAD\\\",\\n395                     \\\"--name-only\\\",\\n396                 ],\\n397                 capture_output=True,\\n398                 text=True,\\n399                 cwd=self.repo_path,\\n400             )\\n401 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 390,\n      \"line_range\": [\n        390,\n        391,\n        392,\n        393,\n        394,\n        395,\n        396,\n        397,\n        398,\n        399,\n        400\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"389             # Get diff with base branch\\n390             result = subprocess.run(\\n391                 [\\n392                     \\\"git\\\",\\n393                     \\\"diff\\\",\\n394                     f\\\"origin/{base_branch}...HEAD\\\",\\n395                     \\\"--name-only\\\",\\n396                 ],\\n397                 capture_output=True,\\n398                 text=True,\\n399                 cwd=self.repo_path,\\n400             )\\n401 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 390,\n      \"line_range\": [\n        390,\n        391,\n        392,\n        393,\n        394,\n        395,\n        396,\n        397,\n        398,\n        399,\n        400\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"471             # Get file content from base branch\\n472             result = subprocess.run(\\n473                 [\\n474                     \\\"git\\\",\\n475                     \\\"show\\\",\\n476                     f\\\"origin/{base_branch}:{file_path}\\\",\\n477                 ],\\n478                 capture_output=True,\\n479                 text=True,\\n480                 cwd=self.repo_path,\\n481             )\\n482 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 472,\n      \"line_range\": [\n        472,\n        473,\n        474,\n        475,\n        476,\n        477,\n        478,\n        479,\n        480,\n        481\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"471             # Get file content from base branch\\n472             result = subprocess.run(\\n473                 [\\n474                     \\\"git\\\",\\n475                     \\\"show\\\",\\n476                     f\\\"origin/{base_branch}:{file_path}\\\",\\n477                 ],\\n478                 capture_output=True,\\n479                 text=True,\\n480                 cwd=self.repo_path,\\n481             )\\n482 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 472,\n      \"line_range\": [\n        472,\n        473,\n        474,\n        475,\n        476,\n        477,\n        478,\n        479,\n        480,\n        481\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"569             # Create virtual environment\\n570             subprocess.run(\\n571                 [\\n572                     sys.executable,\\n573                     \\\"-m\\\",\\n574                     \\\"venv\\\",\\n575                     str(venv_path),\\n576                 ]\\n577             )\\n578 \\n\",\n      \"col_offset\": 12,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 570,\n      \"line_range\": [\n        570,\n        571,\n        572,\n        573,\n        574,\n        575,\n        576,\n        577\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"585             if dist_files:\\n586                 result = subprocess.run(\\n587                     [\\n588                         str(pip_path),\\n589                         \\\"install\\\",\\n590                         str(dist_files[0]),\\n591                     ],\\n592                     capture_output=True,\\n593                     text=True,\\n594                 )\\n595 \\n\",\n      \"col_offset\": 25,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 586,\n      \"line_range\": [\n        586,\n        587,\n        588,\n        589,\n        590,\n        591,\n        592,\n        593,\n        594\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"658         try:\\n659             result = subprocess.run(\\n660                 cmd,\\n661                 cwd=self.repo_path,\\n662                 capture_output=True,\\n663                 text=True,\\n664             )\\n665             return result.returncode == 0\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 659,\n      \"line_range\": [\n        659,\n        660,\n        661,\n        662,\n        663,\n        664\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"671         try:\\n672             result = subprocess.run(\\n673                 cmd,\\n674                 cwd=self.repo_path,\\n675                 capture_output=True,\\n676                 text=True,\\n677             )\\n678             return (\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 672,\n      \"line_range\": [\n        672,\n        673,\n        674,\n        675,\n        676,\n        677\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"711                 content = py_file.read_text()\\n712                 file_hash = hashlib.md5(content.encode()).hexdigest()\\n713 \\n\",\n      \"col_offset\": 28,\n      \"end_col_offset\": 57,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 327,\n        \"link\": \"https://cwe.mitre.org/data/definitions/327.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"Use of weak MD5 hash for security. Consider usedforsecurity=False\",\n      \"line_number\": 712,\n      \"line_range\": [\n        712\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html\",\n      \"test_id\": \"B324\",\n      \"test_name\": \"hashlib\"\n    },\n    {\n      \"code\": \"982 \\n983         except Exception:\\n984             pass\\n985 \\n\",\n      \"col_offset\": 8,\n      \"end_col_offset\": 16,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 983,\n      \"line_range\": [\n        983,\n        984\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"2002 \\n2003         except Exception:\\n2004             pass\\n2005 \\n\",\n      \"col_offset\": 8,\n      \"end_col_offset\": 16,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 2003,\n      \"line_range\": [\n        2003,\n        2004\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"2119                         return True\\n2120                 except Exception:\\n2121                     continue\\n2122 \\n\",\n      \"col_offset\": 16,\n      \"end_col_offset\": 28,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Continue detected.\",\n      \"line_number\": 2120,\n      \"line_range\": [\n        2120,\n        2121\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b112_try_except_continue.html\",\n      \"test_id\": \"B112\",\n      \"test_name\": \"try_except_continue\"\n    },\n    {\n      \"code\": \"2122 \\n2123         except Exception:\\n2124             pass\\n2125 \\n\",\n      \"col_offset\": 8,\n      \"end_col_offset\": 16,\n      \"filename\": \"scripts/version_keeper.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 2123,\n      \"line_range\": [\n        2123,\n        2124\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"11 import shutil\\n12 import subprocess\\n13 import sys\\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 12,\n      \"line_range\": [\n        12\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"71         try:\\n72             result = subprocess.run(\\n73                 [\\n74                     \\\"git\\\",\\n75                     \\\"branch\\\",\\n76                     \\\"--show-current\\\",\\n77                 ],\\n78                 capture_output=True,\\n79                 text=True,\\n80                 cwd=self.repo_path,\\n81             )\\n82             return result.stdout.strip()\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 72,\n      \"line_range\": [\n        72,\n        73,\n        74,\n        75,\n        76,\n        77,\n        78,\n        79,\n        80,\n        81\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"71         try:\\n72             result = subprocess.run(\\n73                 [\\n74                     \\\"git\\\",\\n75                     \\\"branch\\\",\\n76                     \\\"--show-current\\\",\\n77                 ],\\n78                 capture_output=True,\\n79                 text=True,\\n80                 cwd=self.repo_path,\\n81             )\\n82             return result.stdout.strip()\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 72,\n      \"line_range\": [\n        72,\n        73,\n        74,\n        75,\n        76,\n        77,\n        78,\n        79,\n        80,\n        81\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"386             # Get diff with base branch\\n387             result = subprocess.run(\\n388                 [\\n389                     \\\"git\\\",\\n390                     \\\"diff\\\",\\n391                     f\\\"origin/{base_branch}...HEAD\\\",\\n392                     \\\"--name-only\\\",\\n393                 ],\\n394                 capture_output=True,\\n395                 text=True,\\n396                 cwd=self.repo_path,\\n397             )\\n398 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 387,\n      \"line_range\": [\n        387,\n        388,\n        389,\n        390,\n        391,\n        392,\n        393,\n        394,\n        395,\n        396,\n        397\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"386             # Get diff with base branch\\n387             result = subprocess.run(\\n388                 [\\n389                     \\\"git\\\",\\n390                     \\\"diff\\\",\\n391                     f\\\"origin/{base_branch}...HEAD\\\",\\n392                     \\\"--name-only\\\",\\n393                 ],\\n394                 capture_output=True,\\n395                 text=True,\\n396                 cwd=self.repo_path,\\n397             )\\n398 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 387,\n      \"line_range\": [\n        387,\n        388,\n        389,\n        390,\n        391,\n        392,\n        393,\n        394,\n        395,\n        396,\n        397\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"476             # Get file content from base branch\\n477             result = subprocess.run(\\n478                 [\\n479                     \\\"git\\\",\\n480                     \\\"show\\\",\\n481                     f\\\"origin/{base_branch}:{file_path}\\\",\\n482                 ],\\n483                 capture_output=True,\\n484                 text=True,\\n485                 cwd=self.repo_path,\\n486             )\\n487 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 477,\n      \"line_range\": [\n        477,\n        478,\n        479,\n        480,\n        481,\n        482,\n        483,\n        484,\n        485,\n        486\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"476             # Get file content from base branch\\n477             result = subprocess.run(\\n478                 [\\n479                     \\\"git\\\",\\n480                     \\\"show\\\",\\n481                     f\\\"origin/{base_branch}:{file_path}\\\",\\n482                 ],\\n483                 capture_output=True,\\n484                 text=True,\\n485                 cwd=self.repo_path,\\n486             )\\n487 \\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 477,\n      \"line_range\": [\n        477,\n        478,\n        479,\n        480,\n        481,\n        482,\n        483,\n        484,\n        485,\n        486\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"579             # Create virtual environment\\n580             subprocess.run(\\n581                 [\\n582                     sys.executable,\\n583                     \\\"-m\\\",\\n584                     \\\"venv\\\",\\n585                     str(venv_path),\\n586                 ]\\n587             )\\n588 \\n\",\n      \"col_offset\": 12,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 580,\n      \"line_range\": [\n        580,\n        581,\n        582,\n        583,\n        584,\n        585,\n        586,\n        587\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"595             if dist_files:\\n596                 result = subprocess.run(\\n597                     [\\n598                         str(pip_path),\\n599                         \\\"install\\\",\\n600                         str(dist_files[0]),\\n601                     ],\\n602                     capture_output=True,\\n603                     text=True,\\n604                 )\\n605 \\n\",\n      \"col_offset\": 25,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 596,\n      \"line_range\": [\n        596,\n        597,\n        598,\n        599,\n        600,\n        601,\n        602,\n        603,\n        604\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"670         try:\\n671             result = subprocess.run(\\n672                 cmd,\\n673                 cwd=self.repo_path,\\n674                 capture_output=True,\\n675                 text=True,\\n676             )\\n677             return result.returncode == 0\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 671,\n      \"line_range\": [\n        671,\n        672,\n        673,\n        674,\n        675,\n        676\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"685         try:\\n686             result = subprocess.run(\\n687                 cmd,\\n688                 cwd=self.repo_path,\\n689                 capture_output=True,\\n690                 text=True,\\n691             )\\n692             return (\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 686,\n      \"line_range\": [\n        686,\n        687,\n        688,\n        689,\n        690,\n        691\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    },\n    {\n      \"code\": \"725                 content = py_file.read_text()\\n726                 file_hash = hashlib.md5(content.encode()).hexdigest()\\n727 \\n\",\n      \"col_offset\": 28,\n      \"end_col_offset\": 57,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 327,\n        \"link\": \"https://cwe.mitre.org/data/definitions/327.html\"\n      },\n      \"issue_severity\": \"HIGH\",\n      \"issue_text\": \"Use of weak MD5 hash for security. Consider usedforsecurity=False\",\n      \"line_number\": 726,\n      \"line_range\": [\n        726\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b324_hashlib.html\",\n      \"test_id\": \"B324\",\n      \"test_name\": \"hashlib\"\n    },\n    {\n      \"code\": \"1860 \\n1861         except Exception:\\n1862             pass\\n1863 \\n\",\n      \"col_offset\": 8,\n      \"end_col_offset\": 16,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 1861,\n      \"line_range\": [\n        1861,\n        1862\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"1991                         return True\\n1992                 except Exception:\\n1993                     continue\\n1994 \\n\",\n      \"col_offset\": 16,\n      \"end_col_offset\": 28,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Continue detected.\",\n      \"line_number\": 1992,\n      \"line_range\": [\n        1992,\n        1993\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b112_try_except_continue.html\",\n      \"test_id\": \"B112\",\n      \"test_name\": \"try_except_continue\"\n    },\n    {\n      \"code\": \"1994 \\n1995         except Exception:\\n1996             pass\\n1997 \\n\",\n      \"col_offset\": 8,\n      \"end_col_offset\": 16,\n      \"filename\": \"scripts/version_keeper_1.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 703,\n        \"link\": \"https://cwe.mitre.org/data/definitions/703.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Try, Except, Pass detected.\",\n      \"line_number\": 1995,\n      \"line_range\": [\n        1995,\n        1996\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b110_try_except_pass.html\",\n      \"test_id\": \"B110\",\n      \"test_name\": \"try_except_pass\"\n    },\n    {\n      \"code\": \"12 import click\\n13 import subprocess\\n14 \\n\",\n      \"col_offset\": 0,\n      \"end_col_offset\": 17,\n      \"filename\": \"scripts/version_keeper_working.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Consider possible security implications associated with the subprocess module.\",\n      \"line_number\": 13,\n      \"line_range\": [\n        13\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/blacklists/blacklist_imports.html#b404-import-subprocess\",\n      \"test_id\": \"B404\",\n      \"test_name\": \"blacklist\"\n    },\n    {\n      \"code\": \"38         try:\\n39             result = subprocess.run(\\n40                 [\\\"flake8\\\", \\\"--format=json\\\", \\\".\\\"], \\n41                 capture_output=True, \\n42                 text=True, \\n43                 timeout=30\\n44             )\\n45             if result.stdout:\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_working.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"Starting a process with a partial executable path\",\n      \"line_number\": 39,\n      \"line_range\": [\n        39,\n        40,\n        41,\n        42,\n        43,\n        44\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b607_start_process_with_partial_path.html\",\n      \"test_id\": \"B607\",\n      \"test_name\": \"start_process_with_partial_path\"\n    },\n    {\n      \"code\": \"38         try:\\n39             result = subprocess.run(\\n40                 [\\\"flake8\\\", \\\"--format=json\\\", \\\".\\\"], \\n41                 capture_output=True, \\n42                 text=True, \\n43                 timeout=30\\n44             )\\n45             if result.stdout:\\n\",\n      \"col_offset\": 21,\n      \"end_col_offset\": 13,\n      \"filename\": \"scripts/version_keeper_working.py\",\n      \"issue_confidence\": \"HIGH\",\n      \"issue_cwe\": {\n        \"id\": 78,\n        \"link\": \"https://cwe.mitre.org/data/definitions/78.html\"\n      },\n      \"issue_severity\": \"LOW\",\n      \"issue_text\": \"subprocess call - check for execution of untrusted input.\",\n      \"line_number\": 39,\n      \"line_range\": [\n        39,\n        40,\n        41,\n        42,\n        43,\n        44\n      ],\n      \"more_info\": \"https://bandit.readthedocs.io/en/1.8.6/plugins/b603_subprocess_without_shell_equals_true.html\",\n      \"test_id\": \"B603\",\n      \"test_name\": \"subprocess_without_shell_equals_true\"\n    }\n  ]\n}",
        "stderr": "[main]\tINFO\tprofile include tests: None\n[main]\tINFO\tprofile exclude tests: None\n[main]\tINFO\tcli include tests: None\n[main]\tINFO\tcli exclude tests: None\n",
        "fixes": [
          {
            "type": "security_fix",
            "file": "core/auto-discovery-system.py",
            "line": 12,
            "severity": "LOW",
            "confidence": "HIGH",
            "issue": "Consider possible security implications associated with the subprocess module.",
            "claude_prompt": "Please review and fix the security issue in core/auto-discovery-system.py:12: Consider possible security implications associated with the subprocess module."
          },
          {
            "type": "security_fix",
            "file": "core/auto-discovery-system.py",
            "line": 408,
            "severity": "LOW",
            "confidence": "HIGH",
            "issue": "Starting a process with a partial executable path",
            "claude_prompt": "Please review and fix the security issue in core/auto-discovery-system.py:408: Starting a process with a partial executable path"
          },
          {
            "type": "security_fix",
            "file": "core/auto-discovery-system.py",
            "line": 408,
            "severity": "LOW",
            "confidence": "HIGH",
            "issue": "subprocess call - check for execution of untrusted input.",
            "claude_prompt": "Please review and fix the security issue in core/auto-discovery-system.py:408: subprocess call - check for execution of untrusted input."
          }
        ]
      },
      "safety": {
        "passed": false,
        "stdout": "\n\n+===========================================================================================================================================================================================+\n\n\nDEPRECATED: this command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.\n\n\nWe highly encourage switching to the new `scan` command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.\n\n\n+===========================================================================================================================================================================================+\n\n\n{\n    \"report_meta\": {\n        \"scan_target\": \"environment\",\n        \"scanned\": [\n            \"cross_platform.get_path("home") / mcp-mem0/src\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/bin\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/lib-dynload\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python312.zip\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12\"\n        ],\n        \"scanned_full_path\": [\n            \"/Library/Frameworks/Python.framework/Versions/3.12/bin\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python312.zip\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/lib-dynload\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\",\n            \"cross_platform.get_path("home") / mcp-mem0/src\",\n            \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n        ],\n        \"target_languages\": [\n            \"python\"\n        ],\n        \"policy_file\": null,\n        \"policy_file_source\": \"local\",\n        \"audit_and_monitor\": false,\n        \"api_key\": false,\n        \"account\": \"\",\n        \"local_database_path\": null,\n        \"safety_version\": \"3.6.0\",\n        \"timestamp\": \"2025-08-21 11:40:25\",\n        \"packages_found\": 176,\n        \"vulnerabilities_found\": 1,\n        \"vulnerabilities_ignored\": 0,\n        \"remediations_recommended\": 0,\n        \"telemetry\": {\n            \"safety_options\": {\n                \"json\": {\n                    \"--json\": 1\n                }\n            },\n            \"safety_version\": \"3.6.0\",\n            \"safety_source\": \"cli\",\n            \"os_type\": \"Darwin\",\n            \"os_release\": \"24.5.0\",\n            \"os_description\": \"macOS-15.5-arm64-arm-64bit\",\n            \"python_version\": \"3.12.2\",\n            \"safety_command\": \"check\"\n        },\n        \"git\": {\n            \"branch\": \"main\",\n            \"tag\": \"\",\n            \"commit\": \"5bc1874f6eae0a2eb14d1f7a6c365aa973d61598\",\n            \"dirty\": \"False\",\n            \"origin\": \"https://github.com/Dezocode/mcp-system.git\"\n        },\n        \"project\": null,\n        \"json_version\": \"1.1\",\n        \"remediations_attempted\": 0,\n        \"remediations_completed\": 0,\n        \"remediation_mode\": \"NON_INTERACTIVE\"\n    },\n    \"scanned_packages\": {\n        \"deprecated\": {\n            \"name\": \"deprecated\",\n            \"version\": \"1.2.18\",\n            \"requirements\": [\n                {\n                    \"raw\": \"deprecated==1.2.18\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"deprecated\",\n                    \"specifier\": \"==1.2.18\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"markupsafe\": {\n            \"name\": \"markupsafe\",\n            \"version\": \"2.1.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"markupsafe==2.1.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"markupsafe\",\n                    \"specifier\": \"==2.1.5\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pyjwt\": {\n            \"name\": \"pyjwt\",\n            \"version\": \"2.10.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyjwt==2.10.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyjwt\",\n                    \"specifier\": \"==2.10.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pysocks\": {\n            \"name\": \"pysocks\",\n            \"version\": \"1.7.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pysocks==1.7.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pysocks\",\n                    \"specifier\": \"==1.7.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pyyaml\": {\n            \"name\": \"pyyaml\",\n            \"version\": \"6.0.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyyaml==6.0.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyyaml\",\n                    \"specifier\": \"==6.0.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"alembic\": {\n            \"name\": \"alembic\",\n            \"version\": \"1.16.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"alembic==1.16.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"alembic\",\n                    \"specifier\": \"==1.16.4\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"annotated-types\": {\n            \"name\": \"annotated-types\",\n            \"version\": \"0.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"annotated-types==0.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"annotated-types\",\n                    \"specifier\": \"==0.7.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"anyio\": {\n            \"name\": \"anyio\",\n            \"version\": \"4.10.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"anyio==4.10.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"anyio\",\n                    \"specifier\": \"==4.10.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"astroid\": {\n            \"name\": \"astroid\",\n            \"version\": \"3.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"astroid==3.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"astroid\",\n                    \"specifier\": \"==3.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"attrs\": {\n            \"name\": \"attrs\",\n            \"version\": \"25.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"attrs==25.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"attrs\",\n                    \"specifier\": \"==25.3.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"authlib\": {\n            \"name\": \"authlib\",\n            \"version\": \"1.6.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"authlib==1.6.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"authlib\",\n                    \"specifier\": \"==1.6.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"autoflake\": {\n            \"name\": \"autoflake\",\n            \"version\": \"2.3.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"autoflake==2.3.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"autoflake\",\n                    \"specifier\": \"==2.3.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"backoff\": {\n            \"name\": \"backoff\",\n            \"version\": \"2.2.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"backoff==2.2.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"backoff\",\n                    \"specifier\": \"==2.2.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"bandit\": {\n            \"name\": \"bandit\",\n            \"version\": \"1.8.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"bandit==1.8.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"bandit\",\n                    \"specifier\": \"==1.8.6\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"bcrypt\": {\n            \"name\": \"bcrypt\",\n            \"version\": \"4.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"bcrypt==4.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"bcrypt\",\n                    \"specifier\": \"==4.3.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"black\": {\n            \"name\": \"black\",\n            \"version\": \"25.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"black==25.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"black\",\n                    \"specifier\": \"==25.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"cachetools\": {\n            \"name\": \"cachetools\",\n            \"version\": \"5.5.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"cachetools==5.5.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"cachetools\",\n                    \"specifier\": \"==5.5.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"certifi\": {\n            \"name\": \"certifi\",\n            \"version\": \"2025.7.14\",\n            \"requirements\": [\n                {\n                    \"raw\": \"certifi==2025.7.14\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"certifi\",\n                    \"specifier\": \"==2025.7.14\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"cffi\": {\n            \"name\": \"cffi\",\n            \"version\": \"1.17.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"cffi==1.17.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"cffi\",\n                    \"specifier\": \"==1.17.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"charset-normalizer\": {\n            \"name\": \"charset-normalizer\",\n            \"version\": \"3.4.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"charset-normalizer==3.4.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"charset-normalizer\",\n                    \"specifier\": \"==3.4.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"click\": {\n            \"name\": \"click\",\n            \"version\": \"8.2.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"click==8.2.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"click\",\n                    \"specifier\": \"==8.2.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"cryptography\": {\n            \"name\": \"cryptography\",\n            \"version\": \"45.0.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"cryptography==45.0.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"cryptography\",\n                    \"specifier\": \"==45.0.6\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"cyclopts\": {\n            \"name\": \"cyclopts\",\n            \"version\": \"3.22.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"cyclopts==3.22.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"cyclopts\",\n                    \"specifier\": \"==3.22.5\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"dill\": {\n            \"name\": \"dill\",\n            \"version\": \"0.4.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"dill==0.4.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"dill\",\n                    \"specifier\": \"==0.4.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"distro\": {\n            \"name\": \"distro\",\n            \"version\": \"1.9.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"distro==1.9.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"distro\",\n                    \"specifier\": \"==1.9.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"dnspython\": {\n            \"name\": \"dnspython\",\n            \"version\": \"2.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"dnspython==2.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"dnspython\",\n                    \"specifier\": \"==2.7.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"docker\": {\n            \"name\": \"docker\",\n            \"version\": \"7.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"docker==7.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"docker\",\n                    \"specifier\": \"==7.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"docstring-parser\": {\n            \"name\": \"docstring-parser\",\n            \"version\": \"0.17.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"docstring-parser==0.17.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"docstring-parser\",\n                    \"specifier\": \"==0.17.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"docutils\": {\n            \"name\": \"docutils\",\n            \"version\": \"0.22\",\n            \"requirements\": [\n                {\n                    \"raw\": \"docutils==0.22\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"docutils\",\n                    \"specifier\": \"==0.22\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"dparse\": {\n            \"name\": \"dparse\",\n            \"version\": \"0.6.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"dparse==0.6.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"dparse\",\n                    \"specifier\": \"==0.6.4\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"durationpy\": {\n            \"name\": \"durationpy\",\n            \"version\": \"0.10\",\n            \"requirements\": [\n                {\n                    \"raw\": \"durationpy==0.10\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"durationpy\",\n                    \"specifier\": \"==0.10\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"email-validator\": {\n            \"name\": \"email-validator\",\n            \"version\": \"2.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"email-validator==2.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"email-validator\",\n                    \"specifier\": \"==2.2.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"exceptiongroup\": {\n            \"name\": \"exceptiongroup\",\n            \"version\": \"1.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"exceptiongroup==1.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"exceptiongroup\",\n                    \"specifier\": \"==1.3.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"fastapi\": {\n            \"name\": \"fastapi\",\n            \"version\": \"0.116.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"fastapi==0.116.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"fastapi\",\n                    \"specifier\": \"==0.116.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"fastmcp\": {\n            \"name\": \"fastmcp\",\n            \"version\": \"2.11.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"fastmcp==2.11.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"fastmcp\",\n                    \"specifier\": \"==2.11.3\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"filelock\": {\n            \"name\": \"filelock\",\n            \"version\": \"3.16.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"filelock==3.16.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"filelock\",\n                    \"specifier\": \"==3.16.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"flake8\": {\n            \"name\": \"flake8\",\n            \"version\": \"7.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"flake8==7.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"flake8\",\n                    \"specifier\": \"==7.0.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"flupy\": {\n            \"name\": \"flupy\",\n            \"version\": \"1.2.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"flupy==1.2.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"flupy\",\n                    \"specifier\": \"==1.2.3\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"fsspec\": {\n            \"name\": \"fsspec\",\n            \"version\": \"2025.5.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"fsspec==2025.5.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"fsspec\",\n                    \"specifier\": \"==2025.5.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"google-auth\": {\n            \"name\": \"google-auth\",\n            \"version\": \"2.40.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"google-auth==2.40.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"google-auth\",\n                    \"specifier\": \"==2.40.3\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"grpcio\": {\n            \"name\": \"grpcio\",\n            \"version\": \"1.74.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"grpcio==1.74.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"grpcio\",\n                    \"specifier\": \"==1.74.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"h11\": {\n            \"name\": \"h11\",\n            \"version\": \"0.16.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"h11==0.16.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"h11\",\n                    \"specifier\": \"==0.16.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"h2\": {\n            \"name\": \"h2\",\n            \"version\": \"4.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"h2==4.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"h2\",\n                    \"specifier\": \"==4.2.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"hpack\": {\n            \"name\": \"hpack\",\n            \"version\": \"4.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"hpack==4.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"hpack\",\n                    \"specifier\": \"==4.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"httpcore\": {\n            \"name\": \"httpcore\",\n            \"version\": \"1.0.9\",\n            \"requirements\": [\n                {\n                    \"raw\": \"httpcore==1.0.9\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"httpcore\",\n                    \"specifier\": \"==1.0.9\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"httpx\": {\n            \"name\": \"httpx\",\n            \"version\": \"0.28.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"httpx==0.28.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"httpx\",\n                    \"specifier\": \"==0.28.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"httpx-sse\": {\n            \"name\": \"httpx-sse\",\n            \"version\": \"0.4.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"httpx-sse==0.4.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"httpx-sse\",\n                    \"specifier\": \"==0.4.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"hyperframe\": {\n            \"name\": \"hyperframe\",\n            \"version\": \"6.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"hyperframe==6.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"hyperframe\",\n                    \"specifier\": \"==6.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"idna\": {\n            \"name\": \"idna\",\n            \"version\": \"3.10\",\n            \"requirements\": [\n                {\n                    \"raw\": \"idna==3.10\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"idna\",\n                    \"specifier\": \"==3.10\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"iniconfig\": {\n            \"name\": \"iniconfig\",\n            \"version\": \"2.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"iniconfig==2.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"iniconfig\",\n                    \"specifier\": \"==2.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"isodate\": {\n            \"name\": \"isodate\",\n            \"version\": \"0.7.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"isodate==0.7.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"isodate\",\n                    \"specifier\": \"==0.7.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"isort\": {\n            \"name\": \"isort\",\n            \"version\": \"6.0.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"isort==6.0.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"isort\",\n                    \"specifier\": \"==6.0.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"jinja2\": {\n            \"name\": \"jinja2\",\n            \"version\": \"3.1.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jinja2==3.1.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jinja2\",\n                    \"specifier\": \"==3.1.6\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"jiter\": {\n            \"name\": \"jiter\",\n            \"version\": \"0.10.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jiter==0.10.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jiter\",\n                    \"specifier\": \"==0.10.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"joblib\": {\n            \"name\": \"joblib\",\n            \"version\": \"1.5.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"joblib==1.5.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"joblib\",\n                    \"specifier\": \"==1.5.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"jsonschema\": {\n            \"name\": \"jsonschema\",\n            \"version\": \"4.25.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jsonschema==4.25.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jsonschema\",\n                    \"specifier\": \"==4.25.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"jsonschema-path\": {\n            \"name\": \"jsonschema-path\",\n            \"version\": \"0.3.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jsonschema-path==0.3.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jsonschema-path\",\n                    \"specifier\": \"==0.3.4\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"jsonschema-specifications\": {\n            \"name\": \"jsonschema-specifications\",\n            \"version\": \"2025.4.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jsonschema-specifications==2025.4.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jsonschema-specifications\",\n                    \"specifier\": \"==2025.4.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"kubernetes\": {\n            \"name\": \"kubernetes\",\n            \"version\": \"33.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"kubernetes==33.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"kubernetes\",\n                    \"specifier\": \"==33.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"lazy-object-proxy\": {\n            \"name\": \"lazy-object-proxy\",\n            \"version\": \"1.11.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"lazy-object-proxy==1.11.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"lazy-object-proxy\",\n                    \"specifier\": \"==1.11.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mako\": {\n            \"name\": \"mako\",\n            \"version\": \"1.3.10\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mako==1.3.10\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mako\",\n                    \"specifier\": \"==1.3.10\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"markdown-it-py\": {\n            \"name\": \"markdown-it-py\",\n            \"version\": \"4.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"markdown-it-py==4.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"markdown-it-py\",\n                    \"specifier\": \"==4.0.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"marshmallow\": {\n            \"name\": \"marshmallow\",\n            \"version\": \"4.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"marshmallow==4.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"marshmallow\",\n                    \"specifier\": \"==4.0.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mccabe\": {\n            \"name\": \"mccabe\",\n            \"version\": \"0.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mccabe==0.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mccabe\",\n                    \"specifier\": \"==0.7.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mcp\": {\n            \"name\": \"mcp\",\n            \"version\": \"1.13.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mcp==1.13.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mcp\",\n                    \"specifier\": \"==1.13.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mdurl\": {\n            \"name\": \"mdurl\",\n            \"version\": \"0.1.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mdurl==0.1.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mdurl\",\n                    \"specifier\": \"==0.1.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mem0-mcp\": {\n            \"name\": \"mem0-mcp\",\n            \"version\": \"0.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mem0-mcp==0.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mem0-mcp\",\n                    \"specifier\": \"==0.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mem0ai\": {\n            \"name\": \"mem0ai\",\n            \"version\": \"0.1.116\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mem0ai==0.1.116\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mem0ai\",\n                    \"specifier\": \"==0.1.116\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"more-itertools\": {\n            \"name\": \"more-itertools\",\n            \"version\": \"10.7.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"more-itertools==10.7.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"more-itertools\",\n                    \"specifier\": \"==10.7.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mpmath\": {\n            \"name\": \"mpmath\",\n            \"version\": \"1.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mpmath==1.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mpmath\",\n                    \"specifier\": \"==1.3.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mypy\": {\n            \"name\": \"mypy\",\n            \"version\": \"1.17.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mypy==1.17.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mypy\",\n                    \"specifier\": \"==1.17.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"mypy-extensions\": {\n            \"name\": \"mypy-extensions\",\n            \"version\": \"1.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"mypy-extensions==1.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"mypy-extensions\",\n                    \"specifier\": \"==1.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"networkx\": {\n            \"name\": \"networkx\",\n            \"version\": \"3.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"networkx==3.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"networkx\",\n                    \"specifier\": \"==3.5\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"nltk\": {\n            \"name\": \"nltk\",\n            \"version\": \"3.9.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"nltk==3.9.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"nltk\",\n                    \"specifier\": \"==3.9.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"numpy\": {\n            \"name\": \"numpy\",\n            \"version\": \"2.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"numpy==2.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"numpy\",\n                    \"specifier\": \"==2.3.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"oauthlib\": {\n            \"name\": \"oauthlib\",\n            \"version\": \"3.3.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"oauthlib==3.3.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"oauthlib\",\n                    \"specifier\": \"==3.3.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"ollama\": {\n            \"name\": \"ollama\",\n            \"version\": \"0.5.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"ollama==0.5.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"ollama\",\n                    \"specifier\": \"==0.5.3\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"openai\": {\n            \"name\": \"openai\",\n            \"version\": \"1.99.9\",\n            \"requirements\": [\n                {\n                    \"raw\": \"openai==1.99.9\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"openai\",\n                    \"specifier\": \"==1.99.9\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"openapi-core\": {\n            \"name\": \"openapi-core\",\n            \"version\": \"0.19.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"openapi-core==0.19.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"openapi-core\",\n                    \"specifier\": \"==0.19.5\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"openapi-pydantic\": {\n            \"name\": \"openapi-pydantic\",\n            \"version\": \"0.5.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"openapi-pydantic==0.5.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"openapi-pydantic\",\n                    \"specifier\": \"==0.5.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"openapi-schema-validator\": {\n            \"name\": \"openapi-schema-validator\",\n            \"version\": \"0.6.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"openapi-schema-validator==0.6.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"openapi-schema-validator\",\n                    \"specifier\": \"==0.6.3\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"openapi-spec-validator\": {\n            \"name\": \"openapi-spec-validator\",\n            \"version\": \"0.7.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"openapi-spec-validator==0.7.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"openapi-spec-validator\",\n                    \"specifier\": \"==0.7.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"outcome\": {\n            \"name\": \"outcome\",\n            \"version\": \"1.3.0.post0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"outcome==1.3.0.post0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"outcome\",\n                    \"specifier\": \"==1.3.0.post0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"packaging\": {\n            \"name\": \"packaging\",\n            \"version\": \"25.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"packaging==25.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"packaging\",\n                    \"specifier\": \"==25.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"parse\": {\n            \"name\": \"parse\",\n            \"version\": \"1.20.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"parse==1.20.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"parse\",\n                    \"specifier\": \"==1.20.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"passlib\": {\n            \"name\": \"passlib\",\n            \"version\": \"1.7.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"passlib==1.7.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"passlib\",\n                    \"specifier\": \"==1.7.4\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pathable\": {\n            \"name\": \"pathable\",\n            \"version\": \"0.4.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pathable==0.4.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pathable\",\n                    \"specifier\": \"==0.4.4\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pathspec\": {\n            \"name\": \"pathspec\",\n            \"version\": \"0.12.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pathspec==0.12.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pathspec\",\n                    \"specifier\": \"==0.12.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pbr\": {\n            \"name\": \"pbr\",\n            \"version\": \"7.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pbr==7.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pbr\",\n                    \"specifier\": \"==7.0.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pgvector\": {\n            \"name\": \"pgvector\",\n            \"version\": \"0.3.6\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pgvector==0.3.6\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pgvector\",\n                    \"specifier\": \"==0.3.6\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pillow\": {\n            \"name\": \"pillow\",\n            \"version\": \"11.2.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pillow==11.2.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pillow\",\n                    \"specifier\": \"==11.2.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pip\": {\n            \"name\": \"pip\",\n            \"version\": \"25.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pip==25.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pip\",\n                    \"specifier\": \"==25.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"platformdirs\": {\n            \"name\": \"platformdirs\",\n            \"version\": \"4.3.8\",\n            \"requirements\": [\n                {\n                    \"raw\": \"platformdirs==4.3.8\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"platformdirs\",\n                    \"specifier\": \"==4.3.8\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pluggy\": {\n            \"name\": \"pluggy\",\n            \"version\": \"1.6.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pluggy==1.6.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pluggy\",\n                    \"specifier\": \"==1.6.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"portalocker\": {\n            \"name\": \"portalocker\",\n            \"version\": \"3.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"portalocker==3.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"portalocker\",\n                    \"specifier\": \"==3.2.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"posthog\": {\n            \"name\": \"posthog\",\n            \"version\": \"6.5.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"posthog==6.5.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"posthog\",\n                    \"specifier\": \"==6.5.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"prometheus-client\": {\n            \"name\": \"prometheus-client\",\n            \"version\": \"0.22.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"prometheus-client==0.22.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"prometheus-client\",\n                    \"specifier\": \"==0.22.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"protobuf\": {\n            \"name\": \"protobuf\",\n            \"version\": \"5.29.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"protobuf==5.29.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"protobuf\",\n                    \"specifier\": \"==5.29.5\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"psutil\": {\n            \"name\": \"psutil\",\n            \"version\": \"6.1.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"psutil==6.1.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"psutil\",\n                    \"specifier\": \"==6.1.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"psycopg2-binary\": {\n            \"name\": \"psycopg2-binary\",\n            \"version\": \"2.9.10\",\n            \"requirements\": [\n                {\n                    \"raw\": \"psycopg2-binary==2.9.10\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"psycopg2-binary\",\n                    \"specifier\": \"==2.9.10\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pyasn1\": {\n            \"name\": \"pyasn1\",\n            \"version\": \"0.6.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyasn1==0.6.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyasn1\",\n                    \"specifier\": \"==0.6.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pyasn1-modules\": {\n            \"name\": \"pyasn1-modules\",\n            \"version\": \"0.4.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyasn1-modules==0.4.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyasn1-modules\",\n                    \"specifier\": \"==0.4.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pycodestyle\": {\n            \"name\": \"pycodestyle\",\n            \"version\": \"2.11.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pycodestyle==2.11.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pycodestyle\",\n                    \"specifier\": \"==2.11.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pycparser\": {\n            \"name\": \"pycparser\",\n            \"version\": \"2.22\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pycparser==2.22\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pycparser\",\n                    \"specifier\": \"==2.22\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pydantic\": {\n            \"name\": \"pydantic\",\n            \"version\": \"2.11.7\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pydantic==2.11.7\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pydantic\",\n                    \"specifier\": \"==2.11.7\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pydantic-core\": {\n            \"name\": \"pydantic-core\",\n            \"version\": \"2.33.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pydantic-core==2.33.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pydantic-core\",\n                    \"specifier\": \"==2.33.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pydantic-settings\": {\n            \"name\": \"pydantic-settings\",\n            \"version\": \"2.10.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pydantic-settings==2.10.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pydantic-settings\",\n                    \"specifier\": \"==2.10.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pyflakes\": {\n            \"name\": \"pyflakes\",\n            \"version\": \"3.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyflakes==3.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyflakes\",\n                    \"specifier\": \"==3.2.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pygments\": {\n            \"name\": \"pygments\",\n            \"version\": \"2.19.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pygments==2.19.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pygments\",\n                    \"specifier\": \"==2.19.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pylint\": {\n            \"name\": \"pylint\",\n            \"version\": \"3.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pylint==3.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pylint\",\n                    \"specifier\": \"==3.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pyperclip\": {\n            \"name\": \"pyperclip\",\n            \"version\": \"1.9.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pyperclip==1.9.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pyperclip\",\n                    \"specifier\": \"==1.9.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pytest\": {\n            \"name\": \"pytest\",\n            \"version\": \"8.4.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pytest==8.4.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pytest\",\n                    \"specifier\": \"==8.4.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pytest-asyncio\": {\n            \"name\": \"pytest-asyncio\",\n            \"version\": \"1.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pytest-asyncio==1.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pytest-asyncio\",\n                    \"specifier\": \"==1.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"python-dateutil\": {\n            \"name\": \"python-dateutil\",\n            \"version\": \"2.9.0.post0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"python-dateutil==2.9.0.post0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"python-dateutil\",\n                    \"specifier\": \"==2.9.0.post0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"python-dotenv\": {\n            \"name\": \"python-dotenv\",\n            \"version\": \"1.1.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"python-dotenv==1.1.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"python-dotenv\",\n                    \"specifier\": \"==1.1.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"python-multipart\": {\n            \"name\": \"python-multipart\",\n            \"version\": \"0.0.20\",\n            \"requirements\": [\n                {\n                    \"raw\": \"python-multipart==0.0.20\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"python-multipart\",\n                    \"specifier\": \"==0.0.20\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"pytz\": {\n            \"name\": \"pytz\",\n            \"version\": \"2025.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pytz==2025.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pytz\",\n                    \"specifier\": \"==2025.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"qdrant-client\": {\n            \"name\": \"qdrant-client\",\n            \"version\": \"1.15.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"qdrant-client==1.15.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"qdrant-client\",\n                    \"specifier\": \"==1.15.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"redis\": {\n            \"name\": \"redis\",\n            \"version\": \"6.4.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"redis==6.4.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"redis\",\n                    \"specifier\": \"==6.4.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"referencing\": {\n            \"name\": \"referencing\",\n            \"version\": \"0.36.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"referencing==0.36.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"referencing\",\n                    \"specifier\": \"==0.36.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"regex\": {\n            \"name\": \"regex\",\n            \"version\": \"2025.7.34\",\n            \"requirements\": [\n                {\n                    \"raw\": \"regex==2025.7.34\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"regex\",\n                    \"specifier\": \"==2025.7.34\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"requests\": {\n            \"name\": \"requests\",\n            \"version\": \"2.32.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"requests==2.32.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"requests\",\n                    \"specifier\": \"==2.32.4\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"requests-oauthlib\": {\n            \"name\": \"requests-oauthlib\",\n            \"version\": \"2.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"requests-oauthlib==2.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"requests-oauthlib\",\n                    \"specifier\": \"==2.0.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"rfc3339-validator\": {\n            \"name\": \"rfc3339-validator\",\n            \"version\": \"0.1.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"rfc3339-validator==0.1.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"rfc3339-validator\",\n                    \"specifier\": \"==0.1.4\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"rich\": {\n            \"name\": \"rich\",\n            \"version\": \"14.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"rich==14.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"rich\",\n                    \"specifier\": \"==14.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"rich-rst\": {\n            \"name\": \"rich-rst\",\n            \"version\": \"1.3.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"rich-rst==1.3.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"rich-rst\",\n                    \"specifier\": \"==1.3.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"rpds-py\": {\n            \"name\": \"rpds-py\",\n            \"version\": \"0.27.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"rpds-py==0.27.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"rpds-py\",\n                    \"specifier\": \"==0.27.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"rsa\": {\n            \"name\": \"rsa\",\n            \"version\": \"4.9.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"rsa==4.9.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"rsa\",\n                    \"specifier\": \"==4.9.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"ruamel.yaml\": {\n            \"name\": \"ruamel.yaml\",\n            \"version\": \"0.18.14\",\n            \"requirements\": [\n                {\n                    \"raw\": \"ruamel.yaml==0.18.14\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"ruamel.yaml\",\n                    \"specifier\": \"==0.18.14\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"ruamel.yaml.clib\": {\n            \"name\": \"ruamel.yaml.clib\",\n            \"version\": \"0.2.12\",\n            \"requirements\": [\n                {\n                    \"raw\": \"ruamel.yaml.clib==0.2.12\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"ruamel.yaml.clib\",\n                    \"specifier\": \"==0.2.12\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"safety\": {\n            \"name\": \"safety\",\n            \"version\": \"3.6.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"safety==3.6.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"safety\",\n                    \"specifier\": \"==3.6.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"safety-schemas\": {\n            \"name\": \"safety-schemas\",\n            \"version\": \"0.0.14\",\n            \"requirements\": [\n                {\n                    \"raw\": \"safety-schemas==0.0.14\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"safety-schemas\",\n                    \"specifier\": \"==0.0.14\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"selenium\": {\n            \"name\": \"selenium\",\n            \"version\": \"4.34.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"selenium==4.34.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"selenium\",\n                    \"specifier\": \"==4.34.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"semantic-version\": {\n            \"name\": \"semantic-version\",\n            \"version\": \"2.10.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"semantic-version==2.10.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"semantic-version\",\n                    \"specifier\": \"==2.10.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"setuptools\": {\n            \"name\": \"setuptools\",\n            \"version\": \"80.9.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"setuptools==80.9.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"setuptools\",\n                    \"specifier\": \"==80.9.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"shellingham\": {\n            \"name\": \"shellingham\",\n            \"version\": \"1.5.4\",\n            \"requirements\": [\n                {\n                    \"raw\": \"shellingham==1.5.4\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"shellingham\",\n                    \"specifier\": \"==1.5.4\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"six\": {\n            \"name\": \"six\",\n            \"version\": \"1.17.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"six==1.17.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"six\",\n                    \"specifier\": \"==1.17.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"sniffio\": {\n            \"name\": \"sniffio\",\n            \"version\": \"1.3.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"sniffio==1.3.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"sniffio\",\n                    \"specifier\": \"==1.3.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"sortedcontainers\": {\n            \"name\": \"sortedcontainers\",\n            \"version\": \"2.4.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"sortedcontainers==2.4.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"sortedcontainers\",\n                    \"specifier\": \"==2.4.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"sqlalchemy\": {\n            \"name\": \"sqlalchemy\",\n            \"version\": \"2.0.43\",\n            \"requirements\": [\n                {\n                    \"raw\": \"sqlalchemy==2.0.43\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"sqlalchemy\",\n                    \"specifier\": \"==2.0.43\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"sse-starlette\": {\n            \"name\": \"sse-starlette\",\n            \"version\": \"3.0.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"sse-starlette==3.0.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"sse-starlette\",\n                    \"specifier\": \"==3.0.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"starlette\": {\n            \"name\": \"starlette\",\n            \"version\": \"0.47.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"starlette==0.47.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"starlette\",\n                    \"specifier\": \"==0.47.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"stevedore\": {\n            \"name\": \"stevedore\",\n            \"version\": \"5.4.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"stevedore==5.4.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"stevedore\",\n                    \"specifier\": \"==5.4.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"sympy\": {\n            \"name\": \"sympy\",\n            \"version\": \"1.14.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"sympy==1.14.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"sympy\",\n                    \"specifier\": \"==1.14.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tenacity\": {\n            \"name\": \"tenacity\",\n            \"version\": \"9.1.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tenacity==9.1.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tenacity\",\n                    \"specifier\": \"==9.1.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tomlkit\": {\n            \"name\": \"tomlkit\",\n            \"version\": \"0.13.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tomlkit==0.13.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tomlkit\",\n                    \"specifier\": \"==0.13.3\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"torch\": {\n            \"name\": \"torch\",\n            \"version\": \"2.8.0.dev20250613\",\n            \"requirements\": [\n                {\n                    \"raw\": \"torch==2.8.0.dev20250613\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"torch\",\n                    \"specifier\": \"==2.8.0.dev20250613\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"torchaudio\": {\n            \"name\": \"torchaudio\",\n            \"version\": \"2.8.0.dev20250613\",\n            \"requirements\": [\n                {\n                    \"raw\": \"torchaudio==2.8.0.dev20250613\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"torchaudio\",\n                    \"specifier\": \"==2.8.0.dev20250613\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"torchvision\": {\n            \"name\": \"torchvision\",\n            \"version\": \"0.23.0.dev20250613\",\n            \"requirements\": [\n                {\n                    \"raw\": \"torchvision==0.23.0.dev20250613\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"torchvision\",\n                    \"specifier\": \"==0.23.0.dev20250613\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"tqdm\": {\n            \"name\": \"tqdm\",\n            \"version\": \"4.67.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tqdm==4.67.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tqdm\",\n                    \"specifier\": \"==4.67.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"trio\": {\n            \"name\": \"trio\",\n            \"version\": \"0.30.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"trio==0.30.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"trio\",\n                    \"specifier\": \"==0.30.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"trio-websocket\": {\n            \"name\": \"trio-websocket\",\n            \"version\": \"0.12.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"trio-websocket==0.12.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"trio-websocket\",\n                    \"specifier\": \"==0.12.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"typer\": {\n            \"name\": \"typer\",\n            \"version\": \"0.16.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"typer==0.16.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"typer\",\n                    \"specifier\": \"==0.16.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"typing-extensions\": {\n            \"name\": \"typing-extensions\",\n            \"version\": \"4.14.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"typing-extensions==4.14.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"typing-extensions\",\n                    \"specifier\": \"==4.14.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"typing-inspection\": {\n            \"name\": \"typing-inspection\",\n            \"version\": \"0.4.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"typing-inspection==0.4.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"typing-inspection\",\n                    \"specifier\": \"==0.4.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"urllib3\": {\n            \"name\": \"urllib3\",\n            \"version\": \"2.5.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"urllib3==2.5.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"urllib3\",\n                    \"specifier\": \"==2.5.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"uv\": {\n            \"name\": \"uv\",\n            \"version\": \"0.8.11\",\n            \"requirements\": [\n                {\n                    \"raw\": \"uv==0.8.11\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"uv\",\n                    \"specifier\": \"==0.8.11\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"uvicorn\": {\n            \"name\": \"uvicorn\",\n            \"version\": \"0.35.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"uvicorn==0.35.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"uvicorn\",\n                    \"specifier\": \"==0.35.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"vecs\": {\n            \"name\": \"vecs\",\n            \"version\": \"0.4.5\",\n            \"requirements\": [\n                {\n                    \"raw\": \"vecs==0.4.5\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"vecs\",\n                    \"specifier\": \"==0.4.5\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"watchdog\": {\n            \"name\": \"watchdog\",\n            \"version\": \"6.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"watchdog==6.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"watchdog\",\n                    \"specifier\": \"==6.0.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"websocket-client\": {\n            \"name\": \"websocket-client\",\n            \"version\": \"1.8.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"websocket-client==1.8.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"websocket-client\",\n                    \"specifier\": \"==1.8.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"werkzeug\": {\n            \"name\": \"werkzeug\",\n            \"version\": \"3.1.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"werkzeug==3.1.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"werkzeug\",\n                    \"specifier\": \"==3.1.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"wrapt\": {\n            \"name\": \"wrapt\",\n            \"version\": \"1.17.3\",\n            \"requirements\": [\n                {\n                    \"raw\": \"wrapt==1.17.3\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"wrapt\",\n                    \"specifier\": \"==1.17.3\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"wsproto\": {\n            \"name\": \"wsproto\",\n            \"version\": \"1.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"wsproto==1.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"wsproto\",\n                    \"specifier\": \"==1.2.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ]\n        },\n        \"autocommand\": {\n            \"name\": \"autocommand\",\n            \"version\": \"2.2.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"autocommand==2.2.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"autocommand\",\n                    \"specifier\": \"==2.2.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"backports.tarfile\": {\n            \"name\": \"backports.tarfile\",\n            \"version\": \"1.2.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"backports.tarfile==1.2.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"backports.tarfile\",\n                    \"specifier\": \"==1.2.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"importlib-metadata\": {\n            \"name\": \"importlib-metadata\",\n            \"version\": \"8.0.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"importlib-metadata==8.0.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"importlib-metadata\",\n                    \"specifier\": \"==8.0.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"inflect\": {\n            \"name\": \"inflect\",\n            \"version\": \"7.3.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"inflect==7.3.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"inflect\",\n                    \"specifier\": \"==7.3.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"jaraco.collections\": {\n            \"name\": \"jaraco.collections\",\n            \"version\": \"5.1.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jaraco.collections==5.1.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jaraco.collections\",\n                    \"specifier\": \"==5.1.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"jaraco.context\": {\n            \"name\": \"jaraco.context\",\n            \"version\": \"5.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jaraco.context==5.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jaraco.context\",\n                    \"specifier\": \"==5.3.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"jaraco.functools\": {\n            \"name\": \"jaraco.functools\",\n            \"version\": \"4.0.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jaraco.functools==4.0.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jaraco.functools\",\n                    \"specifier\": \"==4.0.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"jaraco.text\": {\n            \"name\": \"jaraco.text\",\n            \"version\": \"3.12.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"jaraco.text==3.12.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"jaraco.text\",\n                    \"specifier\": \"==3.12.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"tomli\": {\n            \"name\": \"tomli\",\n            \"version\": \"2.0.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"tomli==2.0.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"tomli\",\n                    \"specifier\": \"==2.0.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"typeguard\": {\n            \"name\": \"typeguard\",\n            \"version\": \"4.3.0\",\n            \"requirements\": [\n                {\n                    \"raw\": \"typeguard==4.3.0\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"typeguard\",\n                    \"specifier\": \"==4.3.0\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"wheel\": {\n            \"name\": \"wheel\",\n            \"version\": \"0.45.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"wheel==0.45.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"wheel\",\n                    \"specifier\": \"==0.45.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        },\n        \"zipp\": {\n            \"name\": \"zipp\",\n            \"version\": \"3.19.2\",\n            \"requirements\": [\n                {\n                    \"raw\": \"zipp==3.19.2\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"zipp\",\n                    \"specifier\": \"==3.19.2\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/setuptools/_vendor\"\n                }\n            ]\n        }\n    },\n    \"affected_packages\": {\n        \"pillow\": {\n            \"name\": \"pillow\",\n            \"version\": \"11.2.1\",\n            \"requirements\": [\n                {\n                    \"raw\": \"pillow==11.2.1\",\n                    \"extras\": [],\n                    \"marker\": null,\n                    \"name\": \"pillow\",\n                    \"specifier\": \"==11.2.1\",\n                    \"url\": null,\n                    \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                }\n            ],\n            \"found\": null,\n            \"insecure_versions\": [\n                \"1.0\",\n                \"10.0.0\",\n                \"10.0.1\",\n                \"10.1.0\",\n                \"10.2.0\",\n                \"1.1\",\n                \"11.2.1\",\n                \"1.2\",\n                \"1.3\",\n                \"1.4\",\n                \"1.5\",\n                \"1.6\",\n                \"1.7.0\",\n                \"1.7.1\",\n                \"1.7.2\",\n                \"1.7.3\",\n                \"1.7.4\",\n                \"1.7.5\",\n                \"1.7.6\",\n                \"1.7.7\",\n                \"1.7.8\",\n                \"2.0.0\",\n                \"2.1.0\",\n                \"2.2.0\",\n                \"2.2.1\",\n                \"2.2.2\",\n                \"2.3.0\",\n                \"2.3.1\",\n                \"2.3.2\",\n                \"2.4.0\",\n                \"2.5.0\",\n                \"2.5.1\",\n                \"2.5.2\",\n                \"2.5.3\",\n                \"2.6.0\",\n                \"2.6.1\",\n                \"2.6.2\",\n                \"2.7.0\",\n                \"2.8.0\",\n                \"2.8.1\",\n                \"2.8.2\",\n                \"2.9.0\",\n                \"3.0.0\",\n                \"3.1.0\",\n                \"3.1.0rc1\",\n                \"3.1.1\",\n                \"3.1.2\",\n                \"3.2.0\",\n                \"3.3.0\",\n                \"3.3.1\",\n                \"3.3.2\",\n                \"3.3.3\",\n                \"3.4.0\",\n                \"3.4.1\",\n                \"3.4.2\",\n                \"4.0.0\",\n                \"4.1.0\",\n                \"4.1.1\",\n                \"4.2.0\",\n                \"4.2.1\",\n                \"4.3.0\",\n                \"5.0.0\",\n                \"5.1.0\",\n                \"5.2.0\",\n                \"5.3.0\",\n                \"5.4.0\",\n                \"5.4.0.dev0\",\n                \"5.4.1\",\n                \"6.0.0\",\n                \"6.1.0\",\n                \"6.2.0\",\n                \"6.2.1\",\n                \"6.2.2\",\n                \"7.0.0\",\n                \"7.1.0\",\n                \"7.1.1\",\n                \"7.1.2\",\n                \"7.2.0\",\n                \"8.0.0\",\n                \"8.0.1\",\n                \"8.1.0\",\n                \"8.1.1\",\n                \"8.1.2\",\n                \"8.2.0\",\n                \"8.3.0\",\n                \"8.3.1\",\n                \"8.3.2\",\n                \"8.4.0\",\n                \"9.0.0\",\n                \"9.0.1\",\n                \"9.1.0\",\n                \"9.1.1\",\n                \"9.2.0\",\n                \"9.3.0\",\n                \"9.4.0\",\n                \"9.5.0\"\n            ],\n            \"secure_versions\": [\n                \"11.3.0\",\n                \"11.1.0\",\n                \"11.0.0\",\n                \"10.4.0\",\n                \"10.3.0\"\n            ],\n            \"latest_version_without_known_vulnerabilities\": \"11.3.0\",\n            \"latest_version\": \"11.3.0\",\n            \"more_info_url\": \"https://data.safetycli.com/p/pypi/pillow/97c/\"\n        }\n    },\n    \"announcements\": [],\n    \"vulnerabilities\": [\n        {\n            \"vulnerability_id\": \"77942\",\n            \"package_name\": \"pillow\",\n            \"ignored\": {},\n            \"ignored_reason\": null,\n            \"ignored_expires\": null,\n            \"vulnerable_spec\": [\n                \">=11.2.0,<11.3.0\"\n            ],\n            \"all_vulnerable_specs\": [\n                \">=11.2.0,<11.3.0\"\n            ],\n            \"analyzed_version\": \"11.2.1\",\n            \"analyzed_requirement\": {\n                \"raw\": \"pillow==11.2.1\",\n                \"extras\": [],\n                \"marker\": null,\n                \"name\": \"pillow\",\n                \"specifier\": \"==11.2.1\",\n                \"url\": null,\n                \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n            },\n            \"advisory\": \"Affected versions of this package are vulnerable to a Buffer Overflow when saving sufficiently large compressed DDS images (>64KB with default settings). The DDS encoding functionality fails to perform bounds checking when writing to the destination buffer, leading to a heap buffer overflow condition. This vulnerability was introduced in Pillow 11.2.0 when BCn compression support for DDS format was added.\",\n            \"is_transitive\": false,\n            \"published_date\": null,\n            \"fixed_versions\": [],\n            \"closest_versions_without_known_vulnerabilities\": [],\n            \"resources\": [],\n            \"CVE\": \"CVE-2025-48379\",\n            \"severity\": null,\n            \"affected_versions\": [],\n            \"more_info_url\": \"https://data.safetycli.com/v/77942/97c\"\n        }\n    ],\n    \"ignored_vulnerabilities\": [],\n    \"remediations\": {\n        \"pillow\": {\n            \"requirements\": {\n                \"==11.2.1\": {\n                    \"vulnerabilities_found\": 1,\n                    \"version\": \"11.2.1\",\n                    \"requirement\": {\n                        \"raw\": \"pillow==11.2.1\",\n                        \"extras\": [],\n                        \"marker\": null,\n                        \"name\": \"pillow\",\n                        \"specifier\": \"==11.2.1\",\n                        \"url\": null,\n                        \"found\": \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages\"\n                    },\n                    \"more_info_url\": \"https://data.safetycli.com/p/pypi/pillow/97c/\"\n                }\n            },\n            \"current_version\": null,\n            \"vulnerabilities_found\": null,\n            \"recommended_version\": null,\n            \"other_recommended_versions\": [],\n            \"more_info_url\": null\n        }\n    },\n    \"remediations_results\": {\n        \"vulnerabilities_fixed\": [],\n        \"remediations_applied\": {},\n        \"remediations_skipped\": {}\n    }\n}\n\n\n+===========================================================================================================================================================================================+\n\n\nDEPRECATED: this command (`check`) has been DEPRECATED, and will be unsupported beyond 01 June 2024.\n\n\nWe highly encourage switching to the new `scan` command which is easier to use, more powerful, and can be set up to mimic the deprecated command if required.\n\n\n+===========================================================================================================================================================================================+\n\n\n",
        "stderr": "/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/safety/safety.py:1853: UserWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html. The pkg_resources package is slated for removal as early as 2025-11-30. Refrain from using this package or pin to Setuptools<81.\n  import pkg_resources\n",
        "fixes": []
      }
    },
    "duplicate_issues": {},
    "connection_issues": {
      "broken_imports": [],
      "undefined_functions": [
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 576,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 579,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 580,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 583,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 585,
          "function": "parser.parse_args",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 587,
          "function": "MCPFileSyncManager",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 610,
          "function": "sync_manager.save_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 180,
          "function": "self.load_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 181,
          "function": "self._ensure_trash_structure",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 204,
          "function": "file_path.relative_to",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 217,
          "function": "file_name.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 233,
          "function": "self.is_protected_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 237,
          "function": "file_path.relative_to",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 312,
          "function": "patterns.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 463,
          "function": "self.save_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 590,
          "function": "sync_manager.scan_and_organize",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 219,
          "function": "file_name.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 219,
          "function": "file_name.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 229,
          "function": "file_path.is_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 247,
          "function": "self._matches_pattern",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 259,
          "function": "target_dir.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 263,
          "function": "rules.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 264,
          "function": "rules.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 346,
          "function": "target.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 386,
          "function": "file_path.is_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 399,
          "function": "self.should_move_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 409,
          "function": "self.should_move_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 445,
          "function": "entry.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 492,
          "function": "dir_path.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 499,
          "function": "moved_files_log.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 500,
          "function": "moved_files_log.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 505,
          "function": "restore_guide.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 506,
          "function": "restore_guide.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 536,
          "function": "file_path.is_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 563,
          "function": "rules.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 592,
          "function": "sync_manager.start_monitoring",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 221,
          "function": "file_name.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 289,
          "function": "target_dir.rstrip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 350,
          "function": "target.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 361,
          "function": "now.strftime",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 362,
          "function": "now.strftime",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 387,
          "function": "self.should_move_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 403,
          "function": "self.move_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 411,
          "function": "self.move_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 538,
          "function": "self.is_protected_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 543,
          "function": "self._get_trash_target",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 560,
          "function": "target_dir.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 565,
          "function": "self._matches_pattern",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 188,
          "function": "config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 189,
          "function": "config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 275,
          "function": "file_name.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 285,
          "function": "self._matches_pattern",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 389,
          "function": "self.move_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 545,
          "function": "self.move_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 594,
          "function": "sync_manager.generate_sync_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 596,
          "function": "sync_manager.list_rules",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 249,
          "function": "target_dir.relative_to",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 268,
          "function": "self._matches_pattern",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 330,
          "function": "dt.timestamp",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 331,
          "function": "dt.strftime",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 332,
          "function": "dt.strftime",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 371,
          "function": "source.relative_to",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 372,
          "function": "target.relative_to",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 473,
          "function": "rules.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 474,
          "function": "rules.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 601,
          "function": "sync_manager.add_directory_rule",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py",
          "line": 607,
          "function": "sync_manager.clean_non_functional_files",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 293,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 296,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 297,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 298,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 299,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 303,
          "function": "parser.parse_args",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 305,
          "function": "MCPRouter",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 127,
          "function": "prompt.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 186,
          "function": "self.analyze_prompt",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 201,
          "function": "self.start_required_servers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 210,
          "function": "server_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 308,
          "function": "router.interactive_mode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 226,
          "function": "response.iter_lines",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 311,
          "function": "router.analyze_prompt",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 257,
          "function": "self.analyze_prompt",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 325,
          "function": "router.route_request",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 145,
          "function": "scores.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 190,
          "function": "tool.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 190,
          "function": "tool.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 228,
          "function": "line.decode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 229,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 251,
          "function": "prompt.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 332,
          "function": "router.analyze_prompt",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 141,
          "function": "scores.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 192,
          "function": "tool.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 192,
          "function": "tool.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 270,
          "function": "self.start_required_servers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 272,
          "function": "results.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 335,
          "function": "router.start_required_servers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py",
          "line": 263,
          "function": "config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 535,
          "function": "ClaudeCodeMCPBridge",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 120,
          "function": "self.detect_project_type",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 182,
          "function": "self.get_claude_config_path",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 205,
          "function": "claude_config_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 250,
          "function": "self.detect_project_type",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 340,
          "function": "launchers.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 386,
          "function": "env_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 428,
          "function": "self.check_integration_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 505,
          "function": "indicators.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 539,
          "function": "bridge.detect_claude_code_usage",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 544,
          "function": "bridge.run_bridge_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 206,
          "function": "claude_config_path.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 300,
          "function": "self.create_project_mcp_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 304,
          "function": "self.create_safe_mcp_integration",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 307,
          "function": "self.merge_claude_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 314,
          "function": "self.create_project_launchers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 317,
          "function": "self.setup_project_environment",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 371,
          "function": "launcher_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 372,
          "function": "launcher_path.chmod",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 387,
          "function": "env_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 391,
          "function": "env_file.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 393,
          "function": "env_file.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 402,
          "function": "self.detect_claude_code_usage",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 406,
          "function": "self.detect_project_type",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 425,
          "function": "self.detect_claude_code_usage",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 437,
          "function": "self.setup_permissionless_integration",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 449,
          "function": "self.show_help",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 455,
          "function": "self.setup_permissionless_integration",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 517,
          "function": "self.get_claude_config_path",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 524,
          "function": "config_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 540,
          "function": "bridge.auto_init_if_needed",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 542,
          "function": "bridge.show_help",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 405,
          "function": "self.get_claude_config_path",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 457,
          "function": "self.check_integration_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 458,
          "function": "self.show_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 89,
          "function": "detected_types.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 200,
          "function": "claude_config_path.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 201,
          "function": "claude_config_path.rename",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 275,
          "function": "self.get_claude_config_path",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 460,
          "function": "self.auto_init_if_needed",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 374,
          "function": "launchers.keys",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 389,
          "function": "addition.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 462,
          "function": "self.show_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
          "line": 465,
          "function": "self.show_help",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 104,
          "function": "MCPMem0Client",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 111,
          "function": "client.save_memory",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 120,
          "function": "client.save_memory",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 129,
          "function": "client.search_memories",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 133,
          "function": "client.get_all_memories",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 148,
          "function": "main",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 55,
          "function": "self.send_request",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 62,
          "function": "self.send_request",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 75,
          "function": "self.send_request",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 84,
          "function": "self.send_request",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 94,
          "function": "self.send_request",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 38,
          "function": "session.post",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 45,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 58,
          "function": "result.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 69,
          "function": "result.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 78,
          "function": "result.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 88,
          "function": "result.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 97,
          "function": "result.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py",
          "line": 44,
          "function": "line.decode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1556,
          "function": "parser.add_subparsers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1561,
          "function": "subparsers.add_parser",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1564,
          "function": "analyze_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1567,
          "function": "subparsers.add_parser",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1570,
          "function": "suggest_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1573,
          "function": "suggest_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1578,
          "function": "subparsers.add_parser",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1581,
          "function": "install_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1582,
          "function": "install_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1585,
          "function": "install_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1592,
          "function": "subparsers.add_parser",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1595,
          "function": "rollback_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1596,
          "function": "rollback_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1599,
          "function": "subparsers.add_parser",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1602,
          "function": "list_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1605,
          "function": "subparsers.add_parser",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1608,
          "function": "custom_parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1612,
          "function": "parser.parse_args",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1618,
          "function": "MCPUpgrader",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 74,
          "function": "self._load_servers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 75,
          "function": "self._load_upgrade_modules",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 78,
          "function": "self._initialize_default_modules",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 88,
          "function": "config.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 147,
          "function": "pyproject.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 158,
          "function": "package_json.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 181,
          "function": "upgrade_manifest.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 208,
          "function": "self._get_default_modules",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 432,
          "function": "backup_path.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 466,
          "function": "UpgradeResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 586,
          "function": "manifest_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 608,
          "function": "manifest_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 618,
          "function": "UpgradeResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 684,
          "function": "manifest_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 716,
          "function": "self._sort_modules_by_dependencies",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 782,
          "function": "prompt.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 830,
          "function": "upgrade_keywords.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1615,
          "function": "parser.print_help",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1621,
          "function": "upgrader.analyze_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 94,
          "function": "self._detect_template",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 95,
          "function": "self._detect_version",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 96,
          "function": "self._detect_installed_modules",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 98,
          "function": "ServerInfo",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 424,
          "function": "ValueError",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 540,
          "function": "self.create_backup",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 566,
          "function": "self._update_server_manifest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 662,
          "function": "self._remove_from_server_manifest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 700,
          "function": "manifest_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 723,
          "function": "self.apply_upgrade_module",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 726,
          "function": "results.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 894,
          "function": "modules.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 918,
          "function": "UpgradeModule",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 922,
          "function": "target_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1625,
          "function": "upgrader.suggest_upgrades_for_prompt",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 128,
          "function": "self._version_from_pyproject",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 129,
          "function": "self._version_from_package_json",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 130,
          "function": "self._version_from_git",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 136,
          "function": "method",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 159,
          "function": "package_json.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 199,
          "function": "UpgradeModule",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 214,
          "function": "module_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 215,
          "function": "module_file.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 547,
          "function": "target_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 587,
          "function": "manifest_path.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 685,
          "function": "manifest_path.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 762,
          "function": "sorted_modules.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 767,
          "function": "sorted_modules.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 768,
          "function": "remaining.remove",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 912,
          "function": "module_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 917,
          "function": "module_path.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1631,
          "function": "upgrader.batch_upgrade",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 183,
          "function": "upgrade_manifest.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 198,
          "function": "module_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 235,
          "function": "self._get_logging_enhancement_code",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 257,
          "function": "self._get_auth_middleware_code",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 280,
          "function": "self._get_redis_cache_code",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 295,
          "function": "self._get_migration_env_code",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 296,
          "function": "self._get_migration_template_code",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 297,
          "function": "self._get_database_utils_code",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 320,
          "function": "self._get_metrics_code",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 342,
          "function": "self._get_versioning_code",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 657,
          "function": "target_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 758,
          "function": "installable.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1662,
          "function": "upgrader.rollback_module",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 89,
          "function": "server_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 658,
          "function": "target_path.unlink",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1673,
          "function": "upgrader.list_available_modules",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py",
          "line": 1694,
          "function": "upgrader.install_custom_module",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1123,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1124,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1135,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1142,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1143,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1144,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1150,
          "function": "parser.parse_args",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1152,
          "function": "MCPServerGenerator",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1160,
          "function": "generator.create_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1057,
          "function": "files.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1064,
          "function": "self._add_to_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1069,
          "function": "template.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1083,
          "function": "config_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1107,
          "function": "config_file.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 848,
          "function": "self._generate_readme",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 956,
          "function": "self._generate_readme",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1047,
          "function": "self.create_python_fastmcp_template",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1060,
          "function": "full_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1071,
          "function": "template.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 224,
          "function": "server_name.upper",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 231,
          "function": "server_name.replace",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 343,
          "function": "server_name.replace",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 424,
          "function": "server_name.replace",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1039,
          "function": "response.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1049,
          "function": "self.create_typescript_template",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1084,
          "function": "config_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1051,
          "function": "self.create_minimal_python_template",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 84,
          "function": "server_name.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 92,
          "function": "server_name.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 105,
          "function": "server_name.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 237,
          "function": "server_name.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 353,
          "function": "server_name.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 970,
          "function": "server_name.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 995,
          "function": "server_name.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
          "line": 1099,
          "function": "name.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 404,
          "function": "ServerTestSuite",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 429,
          "function": "ServerTestSuite",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 463,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 469,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 474,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 475,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 479,
          "function": "parser.parse_args",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 481,
          "function": "MCPTester",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 515,
          "function": "tester.generate_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 44,
          "function": "self._load_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 302,
          "function": "results.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 311,
          "function": "results.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 506,
          "function": "DEFAULT_TEST_SUITES.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 510,
          "function": "all_results.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 530,
          "function": "report_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 541,
          "function": "main",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 67,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 119,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 142,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 165,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 181,
          "function": "response.iter_lines",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 199,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 221,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 222,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 301,
          "function": "self.test_server_health",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 310,
          "function": "self.test_mcp_protocol",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 320,
          "function": "results.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 509,
          "function": "tester.run_server_tests",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 59,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 70,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 83,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 91,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 99,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 106,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 133,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 150,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 207,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 225,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 226,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 227,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 285,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 319,
          "function": "self.test_tool_execution",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 331,
          "function": "results.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 499,
          "function": "tester.start_server_if_needed",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 183,
          "function": "line.decode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 184,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 229,
          "function": "self.test_tool_execution",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 247,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 248,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 249,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 252,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 277,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 328,
          "function": "self.run_custom_test",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 258,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 267,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 286,
          "function": "test_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
          "line": 189,
          "function": "TestResult",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 63,
          "function": "SimpleMCPClient",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 40,
          "function": "response.iter_lines",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 83,
          "function": "command.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 42,
          "function": "line.decode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 43,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 92,
          "function": "client.call_tool",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 97,
          "function": "client.call_tool",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 103,
          "function": "client.call_tool",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 108,
          "function": "client.call_tool",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 113,
          "function": "confirm.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
          "line": 114,
          "function": "client.call_tool",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 301,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 305,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 306,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 307,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 308,
          "function": "parser.add_argument",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 310,
          "function": "parser.parse_args",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 312,
          "function": "MCPManager",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 22,
          "function": "self.load_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 70,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 71,
          "function": "deps.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 140,
          "function": "self.start_dependencies",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 144,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 251,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 257,
          "function": "self.status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 295,
          "function": "self.cleanup",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 317,
          "function": "servers.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 258,
          "function": "status.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 273,
          "function": "response.iter_lines",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 290,
          "function": "self.stop_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 321,
          "function": "manager.start_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 239,
          "function": "self.status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 329,
          "function": "manager.stop_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 143,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 178,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 275,
          "function": "line.decode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 276,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 336,
          "function": "manager.stop_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 338,
          "function": "manager.start_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 228,
          "function": "server_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 318,
          "function": "config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 345,
          "function": "manager.status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 179,
          "function": "server.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 346,
          "function": "result.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 357,
          "function": "manager.send_data",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 94,
          "function": "dep_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
          "line": 100,
          "function": "dep_config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 898,
          "function": "MCPAutoDiscovery",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 487,
          "function": "env_patterns.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 564,
          "function": "self.scan_directory",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 567,
          "function": "self.check_running_processes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 570,
          "function": "self.check_environment_variables",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 573,
          "function": "self.check_installed_tools",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 576,
          "function": "self.calculate_environment_scores",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 579,
          "function": "self.generate_suggestions",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 724,
          "function": "mcp_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 876,
          "function": "self.analyze_environment",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 879,
          "function": "self.create_environment_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 886,
          "function": "report_file.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 921,
          "function": "discovery.run_discovery",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 310,
          "function": "file_path.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 372,
          "function": "keywords_to_check.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 446,
          "function": "process_indicators.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 514,
          "function": "self.is_tool_installed",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 676,
          "function": "actions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 694,
          "function": "actions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 704,
          "function": "actions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 718,
          "function": "self.analyze_environment",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 892,
          "function": "self.auto_initialize_project",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 904,
          "function": "discovery.run_discovery",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 273,
          "function": "current_path.iterdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 490,
          "function": "matches.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 511,
          "function": "all_tools.update",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 651,
          "function": "scores.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 670,
          "function": "suggested_servers.update",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 908,
          "function": "discovery.run_discovery",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 282,
          "function": "item.is_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 757,
          "function": "command.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 803,
          "function": "env_type.title",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 911,
          "function": "discovery.analyze_environment",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 912,
          "function": "discovery.create_environment_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 449,
          "function": "detected_processes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 289,
          "function": "self.scan_file_contents",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 291,
          "function": "item.is_dir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 374,
          "function": "keyword.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 494,
          "function": "key.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 284,
          "function": "item.relative_to",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 288,
          "function": "item.stat",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 374,
          "function": "content.lower",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
          "line": 293,
          "function": "item.relative_to",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/conftest.py",
          "line": 107,
          "function": "claude_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 348,
          "function": "loader.loadTestsFromTestCase",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 352,
          "function": "runner.run",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 46,
          "function": "self.copy_project_files",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 60,
          "function": "source_scripts.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 68,
          "function": "source_src.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 98,
          "function": "self.assertEqual",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 102,
          "function": "self.assertTrue",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 131,
          "function": "self.test_version_keeper_json_output",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 142,
          "function": "self.assertEqual",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 146,
          "function": "self.assertTrue",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 271,
          "function": "self.assertNotIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 272,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 273,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 336,
          "function": "self.assertGreaterEqual",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 338,
          "function": "self.assertGreaterEqual",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 69,
          "function": "source_src.glob",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 83,
          "function": "pyproject_content.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 91,
          "function": "script_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 92,
          "function": "self.skipTest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 102,
          "function": "json_report_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 115,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 121,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 135,
          "function": "script_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 136,
          "function": "self.skipTest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 146,
          "function": "fixes_report_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 159,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 168,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 174,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 186,
          "function": "server_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 187,
          "function": "self.skipTest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 231,
          "function": "workflow_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 232,
          "function": "self.skipTest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 257,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 267,
          "function": "self.assertIn",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 287,
          "function": "server_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 288,
          "function": "self.skipTest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 63,
          "function": "source_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 205,
          "function": "server_module.PipelineMCPServer",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 206,
          "function": "self.assertIsNotNone",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 209,
          "function": "server.create_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 210,
          "function": "self.assertIsNotNone",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 211,
          "function": "self.assertTrue",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 214,
          "function": "server.get_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 215,
          "function": "self.assertIsNotNone",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 222,
          "function": "self.skipTest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 224,
          "function": "self.fail",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 252,
          "function": "self.fail",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 211,
          "function": "session_id.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_pipeline_integration.py",
          "line": 243,
          "function": "self.skipTest",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_installer.py",
          "line": 34,
          "function": "installer.create_directories",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/tests/test_installer.py",
          "line": 49,
          "function": "claude_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/utils/test-mcp.py",
          "line": 27,
          "function": "response.iter_lines",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/utils/test-mcp.py",
          "line": 29,
          "function": "line.decode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/utils/test-mcp.py",
          "line": 30,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_oversight_loop.py",
          "line": 182,
          "function": "loop_system.run_continuous_rerun_until_resolved",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_oversight_loop.py",
          "line": 191,
          "function": "results.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_oversight_loop.py",
          "line": 192,
          "function": "results.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_oversight_loop.py",
          "line": 193,
          "function": "pipeline_executed.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_oversight_loop.py",
          "line": 194,
          "function": "pipeline_executed.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_oversight_loop.py",
          "line": 217,
          "function": "results.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py",
          "line": 243,
          "function": "MinimalVersionKeeper",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py",
          "line": 249,
          "function": "keeper.run_comprehensive_lint",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py",
          "line": 49,
          "function": "issues.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py",
          "line": 52,
          "function": "item.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py",
          "line": 53,
          "function": "item.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py",
          "line": 54,
          "function": "item.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_working.py",
          "line": 55,
          "function": "item.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2388,
          "function": "MCPVersionKeeper",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2593,
          "function": "keeper.bump_version",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2620,
          "function": "keeper.validate_compatibility",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2623,
          "function": "keeper.generate_release_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2636,
          "function": "keeper.save_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2647,
          "function": "checks.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 40,
          "function": "self.get_current_version",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 42,
          "function": "self.get_current_branch",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 197,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 208,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 222,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 226,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 234,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 325,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 338,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 347,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 357,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 367,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 544,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 630,
          "function": "content.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 637,
          "function": "lines.insert",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 832,
          "function": "self.detect_competing_implementations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 950,
          "function": "self.is_duplicate_reference_issue",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1193,
          "function": "self.generate_fix_commands",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1194,
          "function": "self.validate_lint_recommendations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1208,
          "function": "self.detect_duplicate_implementations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1220,
          "function": "self.run_connections_linter",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1223,
          "function": "self.generate_claude_recommendations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1228,
          "function": "self.generate_fix_commands",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1231,
          "function": "self.prioritize_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1234,
          "function": "self.validate_lint_recommendations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2601,
          "function": "keeper.run_claude_integrated_linting",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2611,
          "function": "keeper.run_quality_checks",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2615,
          "function": "keeper.run_tests",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2653,
          "function": "tests.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2678,
          "function": "keeper.update_version_files",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2685,
          "function": "keeper.update_changelog",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 49,
          "function": "claude_session.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 96,
          "function": "current.next_major",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 131,
          "function": "file_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 246,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 261,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 272,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 285,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 298,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 307,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 537,
          "function": "build_dir.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 556,
          "function": "self.test_package_installation",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 613,
          "function": "self.create_initial_changelog",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 707,
          "function": "self.should_skip_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 970,
          "function": "file_path.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1049,
          "function": "args.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1185,
          "function": "self.run_quality_check_with_details",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1199,
          "function": "self.run_security_check_with_details",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1270,
          "function": "output_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1362,
          "function": "self.run_command_with_output",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1389,
          "function": "self.run_command_with_output",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1540,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1550,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1557,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1561,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1568,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1572,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1585,
          "function": "commands.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1587,
          "function": "commands.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1608,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1623,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1636,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1949,
          "function": "method_call.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1961,
          "function": "module_name.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2412,
          "function": "keeper.detect_duplicate_implementations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2441,
          "function": "keeper.detect_duplicate_implementations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2450,
          "function": "keeper.run_connections_linter",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2481,
          "function": "keeper.run_connections_linter",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2491,
          "function": "keeper.run_claude_integrated_linting",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2683,
          "function": "changes.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2689,
          "function": "keeper.build_package",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 98,
          "function": "current.next_minor",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 132,
          "function": "self.update_version_in_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 412,
          "function": "self.is_critical_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 501,
          "function": "changes.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 515,
          "function": "changes.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 519,
          "function": "changes.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 581,
          "function": "pip_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 633,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 711,
          "function": "py_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1062,
          "function": "methods.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1123,
          "function": "competing.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1190,
          "function": "self.generate_tool_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1204,
          "function": "self.generate_security_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1407,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1597,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1651,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1693,
          "function": "py_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1737,
          "function": "py_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1964,
          "function": "module_name.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1992,
          "function": "module_name.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2145,
          "function": "self.all_checks_passed",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2156,
          "function": "checks.values",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2159,
          "function": "tests.values",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2182,
          "function": "checks.values",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2182,
          "function": "tests.values",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2548,
          "function": "reports_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 68,
          "function": "match.group",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 100,
          "function": "current.next_patch",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 102,
          "function": "ValueError",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 424,
          "function": "self.detect_api_changes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1120,
          "function": "found_files.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1418,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1687,
          "function": "self.should_skip_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1913,
          "function": "imp.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1986,
          "function": "target_dir.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1999,
          "function": "base_path.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2108,
          "function": "self.should_skip_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2112,
          "function": "py_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 774,
          "function": "self.get_class_signature",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1301,
          "function": "critical_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1495,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1700,
          "function": "file_functions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1985,
          "function": "target_dir.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1998,
          "function": "base_path.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 2045,
          "function": "self.would_break_dependencies",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 712,
          "function": "content.encode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 795,
          "function": "self.get_function_signature",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1441,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1514,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1717,
          "function": "file_imports.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1797,
          "function": "self.resolve_module_path",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1934,
          "function": "method_call.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 735,
          "function": "self.get_function_signature",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1465,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1748,
          "function": "self.is_function_defined",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1708,
          "function": "file_functions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1721,
          "function": "file_imports.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1755,
          "function": "self.is_likely_false_positive",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1801,
          "function": "module_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 1778,
          "function": "self.is_method_defined",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper.py",
          "line": 755,
          "function": "self.is_legitimate_duplicate_vs_legacy",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3324,
          "function": "EnhancedClaudeQualityPatcher",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3355,
          "function": "patcher.start_claude_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3451,
          "function": "patcher.generate_session_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3455,
          "function": "patcher.save_session_log",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 124,
          "function": "lint_reports.sort",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 149,
          "function": "output_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 391,
          "function": "priority_fixes.sort",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 408,
          "function": "self.extract_target_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 412,
          "function": "self.extract_line_numbers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 415,
          "function": "self._extract_linter_context",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 425,
          "function": "self._get_enhanced_fix_description",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 475,
          "function": "prompt.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 745,
          "function": "file_path.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 850,
          "function": "versioned_backup_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 854,
          "function": "legacy_backup_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1095,
          "function": "content.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1131,
          "function": "content.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1238,
          "function": "content.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1647,
          "function": "self._generate_claude_cli_prompt",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2246,
          "function": "self.get_priority_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2302,
          "function": "self.validate_via_ast_analysis",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2303,
          "function": "validation_methods.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2306,
          "function": "self.validate_via_content_inspection",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2307,
          "function": "validation_methods.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2310,
          "function": "self.validate_via_web_research",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2311,
          "function": "validation_methods.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2314,
          "function": "self.validate_via_cross_reference",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2315,
          "function": "validation_methods.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2318,
          "function": "self.validate_via_semantic_analysis",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2319,
          "function": "validation_methods.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2568,
          "function": "self.get_priority_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2704,
          "function": "self.generate_claude_fix_prompt",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2707,
          "function": "self.extract_target_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2747,
          "function": "self.create_backup",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2834,
          "function": "self.validate_fix_applied",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2856,
          "function": "self.verify_file_modification",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2859,
          "function": "self.validate_line_level_changes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2924,
          "function": "self.update_react_protocol_fix_success",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2927,
          "function": "self.cleanup_backup_if_successful",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3082,
          "function": "report_lines.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3101,
          "function": "log_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3337,
          "function": "patcher.auto_integrate_with_version_keeper",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3375,
          "function": "lint_thread.start",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3380,
          "function": "patcher.get_priority_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3443,
          "function": "patcher.run_batch_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3446,
          "function": "patcher.run_step_by_step_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 77,
          "function": "self.generate_fresh_lint_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 97,
          "function": "reports_dir.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 106,
          "function": "vk.get_current_version",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 107,
          "function": "vk.get_current_branch",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 127,
          "function": "self.is_report_compatible",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 161,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 279,
          "function": "version_keeper_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 332,
          "function": "time_diff.total_seconds",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 497,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 526,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 528,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 530,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 535,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 542,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 543,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 548,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 816,
          "function": "vk.get_current_version",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 817,
          "function": "vk.get_current_branch",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 900,
          "function": "versioned_backup_path.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1068,
          "function": "self.perform_surgical_restoration",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1098,
          "function": "content.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1167,
          "function": "current_lines.copy",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1273,
          "function": "content_stripped.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1273,
          "function": "content_stripped.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1342,
          "function": "FileChangeHandler",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1516,
          "function": "LintReportHandler",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1650,
          "function": "self._is_claude_cli_available",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1781,
          "function": "prompt_parts.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1784,
          "function": "prompt_parts.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1787,
          "function": "prompt_parts.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1941,
          "function": "self.extract_target_lines",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2015,
          "function": "target_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2270,
          "function": "self.process_single_fix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2590,
          "function": "self.extract_target_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2591,
          "function": "self.extract_line_numbers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2592,
          "function": "self._get_enhanced_fix_description",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2781,
          "function": "self.apply_fix_with_claude_cli",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2867,
          "function": "self.extract_target_lines",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2868,
          "function": "self.analyze_diff_and_restore_deleted",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2888,
          "function": "self.update_react_protocol_fix_failure",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2905,
          "function": "self.extract_target_lines",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2906,
          "function": "self.analyze_diff_and_restore_deleted",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2949,
          "function": "path_obj.resolve",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2969,
          "function": "path_parts.intersection",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3067,
          "function": "report_lines.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 80,
          "function": "self.find_latest_compatible_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 88,
          "function": "self.validate_report_compatibility",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 202,
          "function": "filename_match.group",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 226,
          "function": "time_diff.total_seconds",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 284,
          "function": "self.is_report_fresh",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 431,
          "function": "category.upper",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 464,
          "function": "self._get_fix_context",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 489,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 490,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 976,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1174,
          "function": "self.find_safe_insertion_point",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1287,
          "function": "content_stripped.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1287,
          "function": "content_stripped.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1373,
          "function": "self._fallback_stat_monitoring",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1376,
          "function": "self._fallback_stat_monitoring",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1549,
          "function": "self._fallback_lint_monitoring",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1552,
          "function": "self._fallback_lint_monitoring",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2179,
          "function": "backup_path_obj.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2184,
          "function": "backup_path_obj.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2185,
          "function": "qp_metadata_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2190,
          "function": "backup_path_obj.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2191,
          "function": "legacy_metadata_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2201,
          "function": "legacy_backup_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2215,
          "function": "retained_reasons.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2217,
          "function": "retained_reasons.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2219,
          "function": "retained_reasons.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2221,
          "function": "retained_reasons.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2223,
          "function": "retained_reasons.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2370,
          "function": "self.extract_function_name_from_fix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2397,
          "function": "self.extract_function_name_from_fix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2447,
          "function": "target_file.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2532,
          "function": "description.find",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2612,
          "function": "created_tasks.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2842,
          "function": "self.validate_fix_applied",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2846,
          "function": "self.five_way_skip_validation",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2946,
          "function": "path_obj.is_absolute",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2954,
          "function": "resolved_path.relative_to",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2982,
          "function": "resolved_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2987,
          "function": "resolved_path.is_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3080,
          "function": "report_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3368,
          "function": "patcher.monitor_lint_report_freshness",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 223,
          "function": "report_path.stat",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 306,
          "function": "self.find_latest_compatible_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 492,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 715,
          "function": "code.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 876,
          "function": "self._calculate_checksum_fallback",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1049,
          "function": "self.is_critical_code_deletion",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1183,
          "function": "modified_lines.insert",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1186,
          "function": "restoration_log.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1203,
          "function": "restoration_log.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1459,
          "function": "existing_dirs.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1710,
          "function": "self.verify_file_modification",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1850,
          "function": "category.upper",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1957,
          "function": "changed_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2034,
          "function": "target_lines.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2036,
          "function": "target_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2180,
          "function": "backup_path_obj.unlink",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2186,
          "function": "qp_metadata_path.unlink",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2192,
          "function": "legacy_metadata_path.unlink",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2202,
          "function": "legacy_backup_path.unlink",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2366,
          "function": "functions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2372,
          "function": "functions.count",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2400,
          "function": "content.count",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2506,
          "function": "target_file.count",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2531,
          "function": "description.find",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2699,
          "function": "category.upper",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2805,
          "function": "self._provide_enhanced_claude_code_instructions",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2812,
          "function": "self.wait_for_file_sync",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2825,
          "function": "self.wait_for_file_sync",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3024,
          "function": "file_path.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3025,
          "function": "file_path.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3036,
          "function": "self._is_safe_file_path",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 209,
          "function": "time_diff.total_seconds",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 511,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 717,
          "function": "code.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1043,
          "function": "self.is_likely_unintentional_deletion",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1050,
          "function": "unintentional_deletions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1486,
          "function": "self._is_lint_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1495,
          "function": "self._is_lint_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 2620,
          "function": "category.upper",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3027,
          "function": "file_path.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3393,
          "function": "category.upper",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 514,
          "function": "context_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 719,
          "function": "code.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 983,
          "function": "match.group",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 984,
          "function": "match.group",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1044,
          "function": "unintentional_deletions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1190,
          "function": "content.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1207,
          "function": "content.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1282,
          "function": "line.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3070,
          "function": "status.upper",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 721,
          "function": "code.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 990,
          "function": "deleted_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1279,
          "function": "line.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1280,
          "function": "line.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1281,
          "function": "line.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 3032,
          "function": "candidate.is_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 215,
          "function": "time_diff.total_seconds",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 679,
          "function": "self._get_fix_instruction",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 723,
          "function": "code.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1009,
          "function": "added_lines.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1196,
          "function": "content.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 1201,
          "function": "content.strip",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_quality_patcher.py",
          "line": 725,
          "function": "code.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2174,
          "function": "MCPVersionKeeper",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2363,
          "function": "keeper.bump_version",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2390,
          "function": "keeper.validate_compatibility",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2393,
          "function": "keeper.generate_release_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2408,
          "function": "keeper.save_report",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2419,
          "function": "checks.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 39,
          "function": "self.get_current_version",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 40,
          "function": "self.get_current_branch",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 196,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 207,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 221,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 225,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 233,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 320,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 333,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 342,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 352,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 362,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 554,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 642,
          "function": "content.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 649,
          "function": "lines.insert",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 803,
          "function": "self.detect_competing_implementations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1012,
          "function": "self.detect_duplicate_implementations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1016,
          "function": "self.run_connections_linter",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1020,
          "function": "self.generate_claude_recommendations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1024,
          "function": "self.generate_fix_commands",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1029,
          "function": "self.prioritize_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1033,
          "function": "self.validate_lint_recommendations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2371,
          "function": "keeper.run_claude_integrated_linting",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2381,
          "function": "keeper.run_quality_checks",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2385,
          "function": "keeper.run_tests",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2425,
          "function": "tests.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2452,
          "function": "keeper.update_version_files",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2459,
          "function": "keeper.update_changelog",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 46,
          "function": "claude_session.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 91,
          "function": "current.next_major",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 128,
          "function": "file_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 245,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 258,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 268,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 281,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 294,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 302,
          "function": "self.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 547,
          "function": "build_dir.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 566,
          "function": "self.test_package_installation",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 625,
          "function": "self.create_initial_changelog",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 721,
          "function": "self.should_skip_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 848,
          "function": "args.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 985,
          "function": "self.run_quality_check_with_details",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 998,
          "function": "self.run_security_check_with_details",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1060,
          "function": "output_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1145,
          "function": "self.run_command_with_output",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1174,
          "function": "self.run_command_with_output",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1352,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1362,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1369,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1373,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1381,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1386,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1404,
          "function": "commands.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1410,
          "function": "commands.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1434,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1455,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1476,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1807,
          "function": "method_call.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1819,
          "function": "module_name.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2192,
          "function": "keeper.detect_duplicate_implementations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2235,
          "function": "keeper.run_connections_linter",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2286,
          "function": "keeper.run_claude_integrated_linting",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2457,
          "function": "changes.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2463,
          "function": "keeper.build_package",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 93,
          "function": "current.next_minor",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 129,
          "function": "self.update_version_in_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 409,
          "function": "self.is_critical_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 508,
          "function": "changes.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 526,
          "function": "changes.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 591,
          "function": "pip_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 645,
          "function": "line.startswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 725,
          "function": "py_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 857,
          "function": "methods.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 919,
          "function": "competing.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 992,
          "function": "self.generate_tool_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1005,
          "function": "self.generate_security_fixes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1192,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1423,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1499,
          "function": "priority_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1541,
          "function": "py_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1589,
          "function": "py_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1822,
          "function": "module_name.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1850,
          "function": "module_name.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2017,
          "function": "self.all_checks_passed",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2028,
          "function": "checks.values",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2033,
          "function": "tests.values",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2058,
          "function": "checks.values",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2059,
          "function": "tests.values",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 2335,
          "function": "reports_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 64,
          "function": "match.group",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 95,
          "function": "current.next_patch",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 97,
          "function": "ValueError",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 423,
          "function": "self.detect_api_changes",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 916,
          "function": "found_files.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1205,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1535,
          "function": "self.should_skip_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1770,
          "function": "imp.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1844,
          "function": "target_dir.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1857,
          "function": "base_path.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1978,
          "function": "self.should_skip_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1984,
          "function": "py_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 745,
          "function": "self.get_function_signature",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1081,
          "function": "critical_fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1290,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1548,
          "function": "file_functions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1843,
          "function": "target_dir.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1856,
          "function": "base_path.with_suffix",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1905,
          "function": "self.would_break_dependencies",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 726,
          "function": "content.encode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 772,
          "function": "self.get_class_signature",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1229,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1318,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1567,
          "function": "file_imports.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1650,
          "function": "self.resolve_module_path",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1792,
          "function": "method_call.split",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1256,
          "function": "fixes.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1600,
          "function": "self.is_function_defined",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1556,
          "function": "file_functions.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1571,
          "function": "file_imports.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1654,
          "function": "module_path.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/version_keeper_1.py",
          "line": 1629,
          "function": "self.is_method_defined",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 628,
          "function": "protocol.create_task",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 82,
          "function": "TaskType",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 83,
          "function": "TaskStatus",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 84,
          "function": "cls",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 101,
          "function": "self._load_state",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 105,
          "function": "self._load_performance_metrics",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 161,
          "function": "Task",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 177,
          "function": "self._save_task_queue",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 208,
          "function": "action_map.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 245,
          "function": "self._append_observation",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 257,
          "function": "self._append_observation",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 273,
          "function": "self._append_observation",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 359,
          "function": "self._save_performance_metrics",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 469,
          "function": "self._save_state",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 472,
          "function": "self._handle_phase_transition",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 483,
          "function": "transitions.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 490,
          "function": "self.create_task",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 507,
          "function": "self.create_task",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 515,
          "function": "self.create_task",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 576,
          "function": "self.get_optimized_strategy",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 579,
          "function": "strategy.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 587,
          "function": "strategy.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 589,
          "function": "strategy.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 619,
          "function": "ClaudeAgentProtocol",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 639,
          "function": "protocol.generate_claude_instruction",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 217,
          "function": "self._save_state",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 228,
          "function": "tasks.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 229,
          "function": "temp_queue.put",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 278,
          "function": "self._check_success_criteria",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 284,
          "function": "f.write",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 311,
          "function": "self._update_performance_metrics",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 319,
          "function": "self._save_state",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 367,
          "function": "self._matches_pattern",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 384,
          "function": "pattern.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 435,
          "function": "self._get_common_action_sequence",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 485,
          "function": "handler",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 581,
          "function": "hints.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 585,
          "function": "strategy.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 586,
          "function": "hints.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 588,
          "function": "hints.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 590,
          "function": "hints.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 640,
          "function": "protocol.get_status_summary",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 167,
          "function": "self._get_expected_actions",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 228,
          "function": "task.to_json",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 279,
          "function": "self.complete_task",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 501,
          "function": "self.create_task",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 565,
          "function": "self._get_performance_hint",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 583,
          "function": "hints.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 315,
          "function": "self._extract_pattern",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 317,
          "function": "self._extract_pattern",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 329,
          "function": "obs.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 388,
          "function": "pattern.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_agent_protocol.py",
          "line": 502,
          "function": "issue.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 581,
          "function": "MCPSystemInstaller",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 582,
          "function": "installer.run_installation",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 320,
          "function": "launcher_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 321,
          "function": "launcher_path.chmod",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 351,
          "function": "global_claude_config.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 437,
          "function": "hook_path.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 438,
          "function": "hook_path.chmod",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 475,
          "function": "package_dir.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 520,
          "function": "package_installer.write_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 521,
          "function": "package_installer.chmod",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 77,
          "function": "directory.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 95,
          "function": "source.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 120,
          "function": "source.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 457,
          "function": "config_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 542,
          "function": "self.create_directories",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 545,
          "function": "self.package_components",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 546,
          "function": "self.package_documentation",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 549,
          "function": "self.create_universal_launcher",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 552,
          "function": "self.create_claude_settings_integration",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 555,
          "function": "self.create_initialization_hook",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 558,
          "function": "self.setup_path_integration",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 561,
          "function": "self.create_installer_package",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 48,
          "function": "missing.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 105,
          "function": "self.create_placeholder",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 458,
          "function": "config_file.read_text",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 538,
          "function": "self.check_prerequisites",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 98,
          "function": "component.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 101,
          "function": "dest.chmod",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 100,
          "function": "component.endswith",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 463,
          "function": "f.write",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 464,
          "function": "f.write",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/installers/install-mcp-system.py",
          "line": 465,
          "function": "f.write",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 222,
          "function": "MCPAutoDiscovery",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 232,
          "function": "discovery.run_discovery",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 45,
          "function": "self._has_mcp_indicators",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 162,
          "function": "self.save_discovery_cache",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 170,
          "function": "self.discover_project_type",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 171,
          "function": "self.discover_mcp_servers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 204,
          "function": "self.discover_project_type",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 30,
          "function": "project_types.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 34,
          "function": "project_types.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 38,
          "function": "project_types.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 42,
          "function": "project_types.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 46,
          "function": "project_types.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 77,
          "function": "self._is_mcp_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 87,
          "function": "self._is_mcp_server_js",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 157,
          "function": "self.discover_project_type",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 158,
          "function": "self.discover_mcp_servers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 159,
          "function": "self._generate_recommendations",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 207,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 210,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 213,
          "function": "recommendations.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 78,
          "function": "servers.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 88,
          "function": "servers.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 101,
          "function": "f.read",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 117,
          "function": "f.read",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/auto_discovery_system.py",
          "line": 58,
          "function": "f.read",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 121,
          "function": "MCPSystemInstaller",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 126,
          "function": "installer.check_prerequisites",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 129,
          "function": "installer.create_directories",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 132,
          "function": "installer.install_components",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 135,
          "function": "installer.setup_claude_integration",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 67,
          "function": "core_dir.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 98,
          "function": "config_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 52,
          "function": "directory.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 68,
          "function": "core_dir.glob",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/install_mcp_system.py",
          "line": 71,
          "function": "dest.chmod",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 159,
          "function": "ClaudeCodeMCPBridge",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 67,
          "function": "self.load_claude_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 78,
          "function": "self.save_claude_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 82,
          "function": "self.load_claude_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 92,
          "function": "self.load_claude_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 93,
          "function": "config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 176,
          "function": "bridge.register_mcp_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 46,
          "function": "self.load_claude_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 56,
          "function": "new_config.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 60,
          "function": "self.save_claude_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 86,
          "function": "self.save_claude_config",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 104,
          "function": "current_dir.glob",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 187,
          "function": "bridge.unregister_mcp_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 105,
          "function": "self._is_mcp_server_file",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 143,
          "function": "f.read",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 193,
          "function": "bridge.list_mcp_servers",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 107,
          "function": "self.register_mcp_server",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 196,
          "function": "servers.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 202,
          "function": "bridge.auto_discover_and_register",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/claude_code_mcp_bridge.py",
          "line": 197,
          "function": "config.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 189,
          "function": "PipelineMCPServer",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 434,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 438,
          "function": "pipeline_server.get_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 442,
          "function": "session.update_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 453,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 463,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 466,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 470,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 499,
          "function": "session.update_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 515,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 519,
          "function": "pipeline_server.get_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 523,
          "function": "session.update_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 532,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 535,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 539,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 540,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 544,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 547,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 557,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 559,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 561,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 581,
          "function": "output_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 588,
          "function": "session.update_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 604,
          "function": "pipeline_server.create_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 605,
          "function": "pipeline_server.get_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 606,
          "function": "session.update_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 608,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 609,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 610,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 611,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 699,
          "function": "session.update_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 700,
          "function": "session.get_status_dict",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 714,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 715,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 716,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 717,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 723,
          "function": "inputs.items",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 726,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 762,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 763,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 764,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 806,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 807,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 808,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 809,
          "function": "arguments.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 923,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 924,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 925,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 926,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 128,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 129,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 134,
          "function": "PipelineSession",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 139,
          "function": "session_path.mkdir",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 141,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 436,
          "function": "pipeline_server.create_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 455,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 459,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 468,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 474,
          "function": "pipeline_server.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 481,
          "function": "session.update_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 493,
          "function": "output_file.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 533,
          "function": "cmd.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 536,
          "function": "cmd.append",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 549,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 553,
          "function": "default_report.exists",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 565,
          "function": "pipeline_server.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 571,
          "function": "session.update_status",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 724,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 729,
          "function": "pipeline_server.run_command",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 768,
          "function": "pipeline_server.get_session",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 772,
          "function": "session.get_status_dict",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 920,
          "function": "logger.error",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 424,
          "function": "logger.error",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 554,
          "function": "cmd.extend",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 586,
          "function": "session.add_artifact",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 626,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 695,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 774,
          "function": "status_data.pop",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 776,
          "function": "status_data.pop",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 787,
          "function": "session.get_status_dict",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 825,
          "function": "handle_list_tools",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 852,
          "function": "handle_list_tools",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 919,
          "function": "pipeline_server.validate_workspace",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 942,
          "function": "main",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 944,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 946,
          "function": "logger.error",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 183,
          "function": "logger.warning",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 404,
          "function": "handle_version_keeper_scan",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 497,
          "function": "session.add_artifact",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 627,
          "function": "handle_version_keeper_scan",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 643,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 649,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 666,
          "function": "logger.info",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 682,
          "function": "logger.error",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 789,
          "function": "status_data.pop",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 791,
          "function": "status_data.pop",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 164,
          "function": "stdout.decode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 164,
          "function": "stderr.decode",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 406,
          "function": "handle_quality_patcher_fix",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 584,
          "function": "result_data.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 585,
          "function": "result_data.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 637,
          "function": "scan_data.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 650,
          "function": "handle_quality_patcher_fix",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 667,
          "function": "handle_version_keeper_scan",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 408,
          "function": "handle_pipeline_run_full",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 496,
          "function": "result_data.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 661,
          "function": "fix_data.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 677,
          "function": "validation_data.get",
          "type": "undefined_method_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 410,
          "function": "handle_github_workflow_trigger",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 412,
          "function": "handle_pipeline_status",
          "type": "undefined_function_call"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/src/pipeline_mcp_server.py",
          "line": 414,
          "function": "handle_mcp_compliance_check",
          "type": "undefined_function_call"
        }
      ],
      "missing_dependencies": [],
      "circular_imports": [],
      "unused_imports": [],
      "connection_errors": [
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_code_integration_loop.py",
          "error": "Failed to parse: invalid syntax (<unknown>, line 1269)",
          "type": "parse_error"
        },
        {
          "file": "cross_platform.get_path("home") / mcp-system-complete/scripts/claude_code_integration_loop.py",
          "error": "Failed to analyze connections: invalid syntax (<unknown>, line 1269)",
          "type": "analysis_error"
        }
      ],
      "recommendations": [
        "Fix 1209 undefined function calls",
        "Investigate 2 connection analysis errors"
      ]
    }
  },
  "performance": {
    "duration_seconds": 11.315866947174072,
    "files_analyzed": 0,
    "issues_per_second": 0.883714879883535
  },
  "recommendations": [
    "\ud83d\udd27 Run quality fixes for: black, isort, mypy, flake8, pylint",
    "\ud83d\udd12 Address 3 security issues found",
    "\ud83d\udd04 Remove 90 duplicate functions",
    "\ud83d\udd17 Fix 1209 undefined function calls",
    "Fix 1209 undefined function calls",
    "Investigate 2 connection analysis errors"
  ],
  "priority_fixes": [
    {
      "priority": 1,
      "category": "security",
      "fix": {
        "type": "security_fix",
        "file": "core/auto-discovery-system.py",
        "line": 12,
        "severity": "LOW",
        "confidence": "HIGH",
        "issue": "Consider possible security implications associated with the subprocess module.",
        "claude_prompt": "Please review and fix the security issue in core/auto-discovery-system.py:12: Consider possible security implications associated with the subprocess module."
      }
    },
    {
      "priority": 1,
      "category": "security",
      "fix": {
        "type": "security_fix",
        "file": "core/auto-discovery-system.py",
        "line": 408,
        "severity": "LOW",
        "confidence": "HIGH",
        "issue": "Starting a process with a partial executable path",
        "claude_prompt": "Please review and fix the security issue in core/auto-discovery-system.py:408: Starting a process with a partial executable path"
      }
    },
    {
      "priority": 1,
      "category": "security",
      "fix": {
        "type": "security_fix",
        "file": "core/auto-discovery-system.py",
        "line": 408,
        "severity": "LOW",
        "confidence": "HIGH",
        "issue": "subprocess call - check for execution of untrusted input.",
        "claude_prompt": "Please review and fix the security issue in core/auto-discovery-system.py:408: subprocess call - check for execution of untrusted input."
      }
    },
    {
      "priority": 2,
      "category": "duplicates",
      "fix": {
        "type": "remove_duplicate",
        "description": "Remove duplicate function __init__ in cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py",
        "claude_prompt": "Please remove the duplicate function '__init__' from cross_platform.get_path("home") / mcp-system-complete/core/claude-code-mcp-bridge.py:16 as it already exists in cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py:17"
      }
    },
    {
      "priority": 2,
      "category": "duplicates",
      "fix": {
        "type": "remove_duplicate",
        "description": "Remove duplicate function __init__ in cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py",
        "claude_prompt": "Please remove the duplicate function '__init__' from cross_platform.get_path("home") / mcp-system-complete/core/mcp-create-server.py:13 as it already exists in cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py:17"
      }
    },
    {
      "priority": 2,
      "category": "duplicates",
      "fix": {
        "type": "remove_duplicate",
        "description": "Remove duplicate function __init__ in cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py",
        "claude_prompt": "Please remove the duplicate function '__init__' from cross_platform.get_path("home") / mcp-system-complete/core/mcp-test-framework.py:42 as it already exists in cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py:63"
      }
    },
    {
      "priority": 2,
      "category": "duplicates",
      "fix": {
        "type": "remove_duplicate",
        "description": "Remove duplicate function __init__ in cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py",
        "claude_prompt": "Please remove the duplicate function '__init__' from cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-simple.py:13 as it already exists in cross_platform.get_path("home") / mcp-system-complete/core/mcp-mem0-client.py:15"
      }
    },
    {
      "priority": 2,
      "category": "duplicates",
      "fix": {
        "type": "remove_duplicate",
        "description": "Remove duplicate function __init__ in cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
        "claude_prompt": "Please remove the duplicate function '__init__' from cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py:20 as it already exists in cross_platform.get_path("home") / mcp-system-complete/core/mcp-upgrader.py:63"
      }
    },
    {
      "priority": 2,
      "category": "duplicates",
      "fix": {
        "type": "remove_duplicate",
        "description": "Remove duplicate function load_config in cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py",
        "claude_prompt": "Please remove the duplicate function 'load_config' from cross_platform.get_path("home") / mcp-system-complete/core/mcp-manager.py:30 as it already exists in cross_platform.get_path("home") / mcp-system-complete/mcp-file-sync-manager.py:183"
      }
    },
    {
      "priority": 2,
      "category": "duplicates",
      "fix": {
        "type": "remove_duplicate",
        "description": "Remove duplicate function __init__ in cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py",
        "claude_prompt": "Please remove the duplicate function '__init__' from cross_platform.get_path("home") / mcp-system-complete/core/auto-discovery-system.py:20 as it already exists in cross_platform.get_path("home") / mcp-system-complete/core/mcp-router.py:17"
      }
    }
  ]
}