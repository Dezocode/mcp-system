#!/bin/bash
# MCP Autofix - Enhanced consolidated autofix tool
# Uses proven tools: black, isort, flake8, mypy, bandit
# Now with comprehensive error handling, configuration support, and detailed reporting

set -euo pipefail

# Colors for enhanced output
readonly CYAN='\033[0;36m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m'

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Enhanced header with version info
echo -e "${CYAN}üõ†Ô∏è MCP Autofix v2.0 - Enhanced Automated Fixing System${NC}"
echo -e "${GREEN}‚úÖ Comprehensive code quality automation with proven technologies${NC}"
echo -e "${BLUE}üîß Features: Formatting, Security, Quality, Type Safety, Duplicate Elimination${NC}"
echo -e "${YELLOW}üìä Enhanced reporting, session tracking, and configuration support${NC}"
echo ""

# Show help if requested
if [[ "${1:-}" == "--help" ]] || [[ "${1:-}" == "-h" ]]; then
    echo "Enhanced MCP Autofix Tool - Comprehensive automated code fixing"
    echo ""
    echo "Usage: $0 [OPTIONS]"
    echo ""
    echo "Enhanced Options:"
    echo "  --repo-path PATH      Repository path to process"
    echo "  --config-file FILE    Configuration file (JSON format)"
    echo "  --dry-run            Preview changes without applying"
    echo "  --verbose, -v        Show detailed output and debug info"
    echo "  --format-only        Only run code formatting (Black + isort)"
    echo "  --security-only      Only run security analysis and fixes"
    echo "  --scan-only          Only run analysis without fixes"
    echo "  --no-backup          Disable backup file creation"
    echo "  --session-id ID      Custom session identifier"
    echo "  --version            Show version information"
    echo "  --help, -h           Show this help message"
    echo ""
    echo "Examples:"
    echo "  $0                           # Run complete autofix process"
    echo "  $0 --dry-run --verbose       # Preview changes with detailed output"
    echo "  $0 --format-only             # Only format code"
    echo "  $0 --security-only           # Only security analysis and fixes"
    echo "  $0 --config-file config.json # Use custom configuration"
    echo ""
    echo "Output: Reports saved to autofix-reports/ directory"
    echo "See docs/autofix.md for comprehensive documentation"
    exit 0
fi

# Check for version request
if [[ "${1:-}" == "--version" ]]; then
    echo "MCP Autofix v2.0.0"
    echo "Enhanced automated fixing system with comprehensive capabilities"
    exit 0
fi

# Enhanced Python version check
echo -e "${BLUE}üîç Checking environment...${NC}"
if ! command -v python3 &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è Python 3 not found. Please install Python 3.6+ to run autofix.${NC}"
    exit 1
fi

PYTHON_VERSION=$(python3 -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
echo -e "${GREEN}‚úÖ Python ${PYTHON_VERSION} detected${NC}"

# Create reports directory if it doesn't exist
REPORTS_DIR="autofix-reports"
mkdir -p "$REPORTS_DIR"
echo -e "${GREEN}‚úÖ Reports directory ready: ${REPORTS_DIR}/${NC}"

echo ""

# Run the enhanced autofix tool with all arguments passed through
echo -e "${CYAN}üöÄ Starting Enhanced MCP Autofix Process...${NC}"
exec python3 "${SCRIPT_DIR}/scripts/autofix.py" "$@"