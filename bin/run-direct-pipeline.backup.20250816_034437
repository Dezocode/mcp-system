#!/bin/bash
# Direct Pipeline Execution - Bypasses orchestrator issues
# Runs components directly in sequence with Claude integration
# 🔒 DELETION PROTECTED - Use ./pipeline-security.sh to manage

# DELETION PROTECTION SYSTEM
SCRIPT_PATH="$(realpath "$0")"
SCRIPT_NAME="$(basename "$0")"

# Function to verify deletion attempt and require password
verify_deletion_attempt() {
    if [[ "$0" == *"rm"* ]] || [[ "$1" == "--delete" ]] || [[ "$1" == "--remove" ]]; then
        echo "🚨 DELETION PROTECTION ACTIVATED"
        echo "================================================================="
        echo "❌ Attempting to delete protected pipeline file: $SCRIPT_NAME"
        echo "🔒 This file is critical to the MCP system operation"
        echo ""
        echo "To safely manage this file:"
        echo "  ./pipeline-security.sh status    # Check protection status"
        echo "  ./pipeline-security.sh unprotect # Remove protection (requires password)"
        echo ""
        echo "🛡️ Deletion blocked for security"
        echo "================================================================="
        exit 1
    fi
}

# Check for deletion attempts
verify_deletion_attempt "$@"

# Verify file integrity on execution
if [[ -f ".pipeline-security/monitor.sh" ]]; then
    ./.pipeline-security/monitor.sh 2>/dev/null
fi

echo "🚀 DIRECT PIPELINE EXECUTION - BYPASSING ORCHESTRATOR"
echo "======================================================"
echo "🎯 Target: ALL issues resolved (0 remaining)"
echo "🤖 Claude will be presented with fixes to apply using Write/Edit tools"
echo "🛡️ Quality patcher guardrail system active"
echo ""

# Ensure we're in the right directory
if [[ ! -f "scripts/claude_code_integration_loop.py" ]]; then
    echo "❌ Error: scripts/claude_code_integration_loop.py not found"
    echo "   Please run from the MCP system root directory"
    exit 1
fi

# Force Claude to read integration guide
if [[ -f "CLAUDE_PIPELINE_INTEGRATION.md" ]]; then
    echo "🚨 CLAUDE: READ INTEGRATION GUIDE IMMEDIATELY"
    echo "📋 Integration Guide: CLAUDE_PIPELINE_INTEGRATION.md" 
    echo "⚡ This guide explains how to apply fixes using Write/Edit tools"
    echo ""
else
    echo "⚠️ Warning: Claude integration guide not found"
fi

# Set execution mode
export PYTHONUNBUFFERED=1

echo "🔄 EXECUTING CONTINUOUS INTEGRATION LOOP DIRECTLY"
echo "================================================="
echo "🎯 This will run until ALL issues are resolved"
echo "📋 Claude: Use Read tool, then Edit/MultiEdit tools to apply shown fixes"
echo "🛡️ Quality patcher will validate your changes automatically"
echo ""

# Execute integration loop directly with all continuous parameters
python3 scripts/claude_code_integration_loop.py \
    --continuous-rerun \
    --max-cycles=999 \
    --target-issues=0 \
    --non-interactive \
    --publish-pipeline

# Check result
RESULT_CODE=$?
echo ""
echo "================================================="
if [[ $RESULT_CODE -eq 0 ]]; then
    echo "🎉 DIRECT PIPELINE EXECUTION SUCCESSFUL!"
    echo "✅ ALL ISSUES RESOLVED - Zero issues remaining"
    echo "🚀 Development branch should be published and ready"
else
    echo "❌ DIRECT PIPELINE EXECUTION FAILED"
    echo "⚠️ Exit code: $RESULT_CODE"
    echo "💡 Check logs for details"
fi
echo "================================================="

exit $RESULT_CODE