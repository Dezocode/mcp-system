[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-system"
version = "1.0.0"
description = "Universal MCP server management system with Claude Code integration"
authors = [
    {name = "DezoCode", email = "contact@dezocode.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
keywords = ["mcp", "model-context-protocol", "claude", "ai", "server-management"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "fastmcp>=0.1.0",
    "mcp>=1.0.0", 
    "uvicorn>=0.24.0",
    "fastapi>=0.104.0",
    "redis>=5.0.0",
    "psycopg2-binary>=2.9.0",
    "alembic>=1.12.0",
    "sqlalchemy>=2.0.0",
    "pyjwt>=2.8.0",
    "passlib>=1.7.4",
    "bcrypt>=4.0.0",
    "prometheus-client>=0.19.0",
    "pydantic>=2.4.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.6.0",
    "jinja2>=3.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "mypy>=1.6.0"
]
docker = [
    "docker>=6.1.0"
]
kubernetes = [
    "kubernetes>=28.1.0"
]

[project.urls]
Homepage = "https://github.com/dezocode/mcp-system"
Repository = "https://github.com/dezocode/mcp-system.git"
Issues = "https://github.com/dezocode/mcp-system/issues"
Documentation = "https://github.com/dezocode/mcp-system/blob/main/docs/"

[project.scripts]
mcp-universal = "src.install_mcp_system:main"
mcp-init-project = "src.auto_discovery_system:main"
mcp-bridge = "src.claude_code_mcp_bridge:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
asyncio_mode = "auto"